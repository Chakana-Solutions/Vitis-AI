// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/similarity.proto

#ifndef PROTOBUF_second_2fprotos_2fsimilarity_2eproto__INCLUDED
#define PROTOBUF_second_2fprotos_2fsimilarity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace second {
namespace protos {
class DistanceSimilarity;
class DistanceSimilarityDefaultTypeInternal;
extern DistanceSimilarityDefaultTypeInternal _DistanceSimilarity_default_instance_;
class NearestIouSimilarity;
class NearestIouSimilarityDefaultTypeInternal;
extern NearestIouSimilarityDefaultTypeInternal _NearestIouSimilarity_default_instance_;
class RegionSimilarityCalculator;
class RegionSimilarityCalculatorDefaultTypeInternal;
extern RegionSimilarityCalculatorDefaultTypeInternal _RegionSimilarityCalculator_default_instance_;
class RotateIouSimilarity;
class RotateIouSimilarityDefaultTypeInternal;
extern RotateIouSimilarityDefaultTypeInternal _RotateIouSimilarity_default_instance_;
}  // namespace protos
}  // namespace second

namespace second {
namespace protos {

namespace protobuf_second_2fprotos_2fsimilarity_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_second_2fprotos_2fsimilarity_2eproto

// ===================================================================

class RegionSimilarityCalculator : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.RegionSimilarityCalculator) */ {
 public:
  RegionSimilarityCalculator();
  virtual ~RegionSimilarityCalculator();

  RegionSimilarityCalculator(const RegionSimilarityCalculator& from);

  inline RegionSimilarityCalculator& operator=(const RegionSimilarityCalculator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSimilarityCalculator(RegionSimilarityCalculator&& from) noexcept
    : RegionSimilarityCalculator() {
    *this = ::std::move(from);
  }

  inline RegionSimilarityCalculator& operator=(RegionSimilarityCalculator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSimilarityCalculator& default_instance();

  enum RegionSimilarityCase {
    kRotateIouSimilarity = 1,
    kNearestIouSimilarity = 2,
    kDistanceSimilarity = 3,
    REGION_SIMILARITY_NOT_SET = 0,
  };

  static inline const RegionSimilarityCalculator* internal_default_instance() {
    return reinterpret_cast<const RegionSimilarityCalculator*>(
               &_RegionSimilarityCalculator_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegionSimilarityCalculator* other);
  friend void swap(RegionSimilarityCalculator& a, RegionSimilarityCalculator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSimilarityCalculator* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSimilarityCalculator* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSimilarityCalculator& from);
  void MergeFrom(const RegionSimilarityCalculator& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSimilarityCalculator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .second.protos.RotateIouSimilarity rotate_iou_similarity = 1;
  bool has_rotate_iou_similarity() const;
  void clear_rotate_iou_similarity();
  static const int kRotateIouSimilarityFieldNumber = 1;
  const ::second::protos::RotateIouSimilarity& rotate_iou_similarity() const;
  ::second::protos::RotateIouSimilarity* mutable_rotate_iou_similarity();
  ::second::protos::RotateIouSimilarity* release_rotate_iou_similarity();
  void set_allocated_rotate_iou_similarity(::second::protos::RotateIouSimilarity* rotate_iou_similarity);

  // .second.protos.NearestIouSimilarity nearest_iou_similarity = 2;
  bool has_nearest_iou_similarity() const;
  void clear_nearest_iou_similarity();
  static const int kNearestIouSimilarityFieldNumber = 2;
  const ::second::protos::NearestIouSimilarity& nearest_iou_similarity() const;
  ::second::protos::NearestIouSimilarity* mutable_nearest_iou_similarity();
  ::second::protos::NearestIouSimilarity* release_nearest_iou_similarity();
  void set_allocated_nearest_iou_similarity(::second::protos::NearestIouSimilarity* nearest_iou_similarity);

  // .second.protos.DistanceSimilarity distance_similarity = 3;
  bool has_distance_similarity() const;
  void clear_distance_similarity();
  static const int kDistanceSimilarityFieldNumber = 3;
  const ::second::protos::DistanceSimilarity& distance_similarity() const;
  ::second::protos::DistanceSimilarity* mutable_distance_similarity();
  ::second::protos::DistanceSimilarity* release_distance_similarity();
  void set_allocated_distance_similarity(::second::protos::DistanceSimilarity* distance_similarity);

  RegionSimilarityCase region_similarity_case() const;
  // @@protoc_insertion_point(class_scope:second.protos.RegionSimilarityCalculator)
 private:
  void set_has_rotate_iou_similarity();
  void set_has_nearest_iou_similarity();
  void set_has_distance_similarity();

  inline bool has_region_similarity() const;
  void clear_region_similarity();
  inline void clear_has_region_similarity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union RegionSimilarityUnion {
    RegionSimilarityUnion() {}
    ::second::protos::RotateIouSimilarity* rotate_iou_similarity_;
    ::second::protos::NearestIouSimilarity* nearest_iou_similarity_;
    ::second::protos::DistanceSimilarity* distance_similarity_;
  } region_similarity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_second_2fprotos_2fsimilarity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RotateIouSimilarity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.RotateIouSimilarity) */ {
 public:
  RotateIouSimilarity();
  virtual ~RotateIouSimilarity();

  RotateIouSimilarity(const RotateIouSimilarity& from);

  inline RotateIouSimilarity& operator=(const RotateIouSimilarity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RotateIouSimilarity(RotateIouSimilarity&& from) noexcept
    : RotateIouSimilarity() {
    *this = ::std::move(from);
  }

  inline RotateIouSimilarity& operator=(RotateIouSimilarity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RotateIouSimilarity& default_instance();

  static inline const RotateIouSimilarity* internal_default_instance() {
    return reinterpret_cast<const RotateIouSimilarity*>(
               &_RotateIouSimilarity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RotateIouSimilarity* other);
  friend void swap(RotateIouSimilarity& a, RotateIouSimilarity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RotateIouSimilarity* New() const PROTOBUF_FINAL { return New(NULL); }

  RotateIouSimilarity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RotateIouSimilarity& from);
  void MergeFrom(const RotateIouSimilarity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RotateIouSimilarity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:second.protos.RotateIouSimilarity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fsimilarity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NearestIouSimilarity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.NearestIouSimilarity) */ {
 public:
  NearestIouSimilarity();
  virtual ~NearestIouSimilarity();

  NearestIouSimilarity(const NearestIouSimilarity& from);

  inline NearestIouSimilarity& operator=(const NearestIouSimilarity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NearestIouSimilarity(NearestIouSimilarity&& from) noexcept
    : NearestIouSimilarity() {
    *this = ::std::move(from);
  }

  inline NearestIouSimilarity& operator=(NearestIouSimilarity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NearestIouSimilarity& default_instance();

  static inline const NearestIouSimilarity* internal_default_instance() {
    return reinterpret_cast<const NearestIouSimilarity*>(
               &_NearestIouSimilarity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(NearestIouSimilarity* other);
  friend void swap(NearestIouSimilarity& a, NearestIouSimilarity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NearestIouSimilarity* New() const PROTOBUF_FINAL { return New(NULL); }

  NearestIouSimilarity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NearestIouSimilarity& from);
  void MergeFrom(const NearestIouSimilarity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NearestIouSimilarity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:second.protos.NearestIouSimilarity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fsimilarity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DistanceSimilarity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.DistanceSimilarity) */ {
 public:
  DistanceSimilarity();
  virtual ~DistanceSimilarity();

  DistanceSimilarity(const DistanceSimilarity& from);

  inline DistanceSimilarity& operator=(const DistanceSimilarity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistanceSimilarity(DistanceSimilarity&& from) noexcept
    : DistanceSimilarity() {
    *this = ::std::move(from);
  }

  inline DistanceSimilarity& operator=(DistanceSimilarity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DistanceSimilarity& default_instance();

  static inline const DistanceSimilarity* internal_default_instance() {
    return reinterpret_cast<const DistanceSimilarity*>(
               &_DistanceSimilarity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DistanceSimilarity* other);
  friend void swap(DistanceSimilarity& a, DistanceSimilarity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistanceSimilarity* New() const PROTOBUF_FINAL { return New(NULL); }

  DistanceSimilarity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DistanceSimilarity& from);
  void MergeFrom(const DistanceSimilarity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DistanceSimilarity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float distance_norm = 1;
  void clear_distance_norm();
  static const int kDistanceNormFieldNumber = 1;
  float distance_norm() const;
  void set_distance_norm(float value);

  // bool with_rotation = 2;
  void clear_with_rotation();
  static const int kWithRotationFieldNumber = 2;
  bool with_rotation() const;
  void set_with_rotation(bool value);

  // float rotation_alpha = 3;
  void clear_rotation_alpha();
  static const int kRotationAlphaFieldNumber = 3;
  float rotation_alpha() const;
  void set_rotation_alpha(float value);

  // @@protoc_insertion_point(class_scope:second.protos.DistanceSimilarity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float distance_norm_;
  bool with_rotation_;
  float rotation_alpha_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fsimilarity_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegionSimilarityCalculator

// .second.protos.RotateIouSimilarity rotate_iou_similarity = 1;
inline bool RegionSimilarityCalculator::has_rotate_iou_similarity() const {
  return region_similarity_case() == kRotateIouSimilarity;
}
inline void RegionSimilarityCalculator::set_has_rotate_iou_similarity() {
  _oneof_case_[0] = kRotateIouSimilarity;
}
inline void RegionSimilarityCalculator::clear_rotate_iou_similarity() {
  if (has_rotate_iou_similarity()) {
    delete region_similarity_.rotate_iou_similarity_;
    clear_has_region_similarity();
  }
}
inline  const ::second::protos::RotateIouSimilarity& RegionSimilarityCalculator::rotate_iou_similarity() const {
  // @@protoc_insertion_point(field_get:second.protos.RegionSimilarityCalculator.rotate_iou_similarity)
  return has_rotate_iou_similarity()
      ? *region_similarity_.rotate_iou_similarity_
      : ::second::protos::RotateIouSimilarity::default_instance();
}
inline ::second::protos::RotateIouSimilarity* RegionSimilarityCalculator::mutable_rotate_iou_similarity() {
  if (!has_rotate_iou_similarity()) {
    clear_region_similarity();
    set_has_rotate_iou_similarity();
    region_similarity_.rotate_iou_similarity_ = new ::second::protos::RotateIouSimilarity;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.RegionSimilarityCalculator.rotate_iou_similarity)
  return region_similarity_.rotate_iou_similarity_;
}
inline ::second::protos::RotateIouSimilarity* RegionSimilarityCalculator::release_rotate_iou_similarity() {
  // @@protoc_insertion_point(field_release:second.protos.RegionSimilarityCalculator.rotate_iou_similarity)
  if (has_rotate_iou_similarity()) {
    clear_has_region_similarity();
    ::second::protos::RotateIouSimilarity* temp = region_similarity_.rotate_iou_similarity_;
    region_similarity_.rotate_iou_similarity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RegionSimilarityCalculator::set_allocated_rotate_iou_similarity(::second::protos::RotateIouSimilarity* rotate_iou_similarity) {
  clear_region_similarity();
  if (rotate_iou_similarity) {
    set_has_rotate_iou_similarity();
    region_similarity_.rotate_iou_similarity_ = rotate_iou_similarity;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.RegionSimilarityCalculator.rotate_iou_similarity)
}

// .second.protos.NearestIouSimilarity nearest_iou_similarity = 2;
inline bool RegionSimilarityCalculator::has_nearest_iou_similarity() const {
  return region_similarity_case() == kNearestIouSimilarity;
}
inline void RegionSimilarityCalculator::set_has_nearest_iou_similarity() {
  _oneof_case_[0] = kNearestIouSimilarity;
}
inline void RegionSimilarityCalculator::clear_nearest_iou_similarity() {
  if (has_nearest_iou_similarity()) {
    delete region_similarity_.nearest_iou_similarity_;
    clear_has_region_similarity();
  }
}
inline  const ::second::protos::NearestIouSimilarity& RegionSimilarityCalculator::nearest_iou_similarity() const {
  // @@protoc_insertion_point(field_get:second.protos.RegionSimilarityCalculator.nearest_iou_similarity)
  return has_nearest_iou_similarity()
      ? *region_similarity_.nearest_iou_similarity_
      : ::second::protos::NearestIouSimilarity::default_instance();
}
inline ::second::protos::NearestIouSimilarity* RegionSimilarityCalculator::mutable_nearest_iou_similarity() {
  if (!has_nearest_iou_similarity()) {
    clear_region_similarity();
    set_has_nearest_iou_similarity();
    region_similarity_.nearest_iou_similarity_ = new ::second::protos::NearestIouSimilarity;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.RegionSimilarityCalculator.nearest_iou_similarity)
  return region_similarity_.nearest_iou_similarity_;
}
inline ::second::protos::NearestIouSimilarity* RegionSimilarityCalculator::release_nearest_iou_similarity() {
  // @@protoc_insertion_point(field_release:second.protos.RegionSimilarityCalculator.nearest_iou_similarity)
  if (has_nearest_iou_similarity()) {
    clear_has_region_similarity();
    ::second::protos::NearestIouSimilarity* temp = region_similarity_.nearest_iou_similarity_;
    region_similarity_.nearest_iou_similarity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RegionSimilarityCalculator::set_allocated_nearest_iou_similarity(::second::protos::NearestIouSimilarity* nearest_iou_similarity) {
  clear_region_similarity();
  if (nearest_iou_similarity) {
    set_has_nearest_iou_similarity();
    region_similarity_.nearest_iou_similarity_ = nearest_iou_similarity;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.RegionSimilarityCalculator.nearest_iou_similarity)
}

// .second.protos.DistanceSimilarity distance_similarity = 3;
inline bool RegionSimilarityCalculator::has_distance_similarity() const {
  return region_similarity_case() == kDistanceSimilarity;
}
inline void RegionSimilarityCalculator::set_has_distance_similarity() {
  _oneof_case_[0] = kDistanceSimilarity;
}
inline void RegionSimilarityCalculator::clear_distance_similarity() {
  if (has_distance_similarity()) {
    delete region_similarity_.distance_similarity_;
    clear_has_region_similarity();
  }
}
inline  const ::second::protos::DistanceSimilarity& RegionSimilarityCalculator::distance_similarity() const {
  // @@protoc_insertion_point(field_get:second.protos.RegionSimilarityCalculator.distance_similarity)
  return has_distance_similarity()
      ? *region_similarity_.distance_similarity_
      : ::second::protos::DistanceSimilarity::default_instance();
}
inline ::second::protos::DistanceSimilarity* RegionSimilarityCalculator::mutable_distance_similarity() {
  if (!has_distance_similarity()) {
    clear_region_similarity();
    set_has_distance_similarity();
    region_similarity_.distance_similarity_ = new ::second::protos::DistanceSimilarity;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.RegionSimilarityCalculator.distance_similarity)
  return region_similarity_.distance_similarity_;
}
inline ::second::protos::DistanceSimilarity* RegionSimilarityCalculator::release_distance_similarity() {
  // @@protoc_insertion_point(field_release:second.protos.RegionSimilarityCalculator.distance_similarity)
  if (has_distance_similarity()) {
    clear_has_region_similarity();
    ::second::protos::DistanceSimilarity* temp = region_similarity_.distance_similarity_;
    region_similarity_.distance_similarity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RegionSimilarityCalculator::set_allocated_distance_similarity(::second::protos::DistanceSimilarity* distance_similarity) {
  clear_region_similarity();
  if (distance_similarity) {
    set_has_distance_similarity();
    region_similarity_.distance_similarity_ = distance_similarity;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.RegionSimilarityCalculator.distance_similarity)
}

inline bool RegionSimilarityCalculator::has_region_similarity() const {
  return region_similarity_case() != REGION_SIMILARITY_NOT_SET;
}
inline void RegionSimilarityCalculator::clear_has_region_similarity() {
  _oneof_case_[0] = REGION_SIMILARITY_NOT_SET;
}
inline RegionSimilarityCalculator::RegionSimilarityCase RegionSimilarityCalculator::region_similarity_case() const {
  return RegionSimilarityCalculator::RegionSimilarityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RotateIouSimilarity

// -------------------------------------------------------------------

// NearestIouSimilarity

// -------------------------------------------------------------------

// DistanceSimilarity

// float distance_norm = 1;
inline void DistanceSimilarity::clear_distance_norm() {
  distance_norm_ = 0;
}
inline float DistanceSimilarity::distance_norm() const {
  // @@protoc_insertion_point(field_get:second.protos.DistanceSimilarity.distance_norm)
  return distance_norm_;
}
inline void DistanceSimilarity::set_distance_norm(float value) {
  
  distance_norm_ = value;
  // @@protoc_insertion_point(field_set:second.protos.DistanceSimilarity.distance_norm)
}

// bool with_rotation = 2;
inline void DistanceSimilarity::clear_with_rotation() {
  with_rotation_ = false;
}
inline bool DistanceSimilarity::with_rotation() const {
  // @@protoc_insertion_point(field_get:second.protos.DistanceSimilarity.with_rotation)
  return with_rotation_;
}
inline void DistanceSimilarity::set_with_rotation(bool value) {
  
  with_rotation_ = value;
  // @@protoc_insertion_point(field_set:second.protos.DistanceSimilarity.with_rotation)
}

// float rotation_alpha = 3;
inline void DistanceSimilarity::clear_rotation_alpha() {
  rotation_alpha_ = 0;
}
inline float DistanceSimilarity::rotation_alpha() const {
  // @@protoc_insertion_point(field_get:second.protos.DistanceSimilarity.rotation_alpha)
  return rotation_alpha_;
}
inline void DistanceSimilarity::set_rotation_alpha(float value) {
  
  rotation_alpha_ = value;
  // @@protoc_insertion_point(field_set:second.protos.DistanceSimilarity.rotation_alpha)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_second_2fprotos_2fsimilarity_2eproto__INCLUDED
