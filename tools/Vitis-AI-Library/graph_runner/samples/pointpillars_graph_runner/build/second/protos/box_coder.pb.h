// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/box_coder.proto

#ifndef PROTOBUF_second_2fprotos_2fbox_5fcoder_2eproto__INCLUDED
#define PROTOBUF_second_2fprotos_2fbox_5fcoder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace second {
namespace protos {
class BevBoxCoder;
class BevBoxCoderDefaultTypeInternal;
extern BevBoxCoderDefaultTypeInternal _BevBoxCoder_default_instance_;
class BoxCoder;
class BoxCoderDefaultTypeInternal;
extern BoxCoderDefaultTypeInternal _BoxCoder_default_instance_;
class GroundBox3dCoder;
class GroundBox3dCoderDefaultTypeInternal;
extern GroundBox3dCoderDefaultTypeInternal _GroundBox3dCoder_default_instance_;
}  // namespace protos
}  // namespace second

namespace second {
namespace protos {

namespace protobuf_second_2fprotos_2fbox_5fcoder_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_second_2fprotos_2fbox_5fcoder_2eproto

// ===================================================================

class BoxCoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.BoxCoder) */ {
 public:
  BoxCoder();
  virtual ~BoxCoder();

  BoxCoder(const BoxCoder& from);

  inline BoxCoder& operator=(const BoxCoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoxCoder(BoxCoder&& from) noexcept
    : BoxCoder() {
    *this = ::std::move(from);
  }

  inline BoxCoder& operator=(BoxCoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoxCoder& default_instance();

  enum BoxCoderCase {
    kGroundBox3DCoder = 1,
    kBevBoxCoder = 2,
    BOX_CODER_NOT_SET = 0,
  };

  static inline const BoxCoder* internal_default_instance() {
    return reinterpret_cast<const BoxCoder*>(
               &_BoxCoder_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BoxCoder* other);
  friend void swap(BoxCoder& a, BoxCoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoxCoder* New() const PROTOBUF_FINAL { return New(NULL); }

  BoxCoder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BoxCoder& from);
  void MergeFrom(const BoxCoder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BoxCoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
  bool has_ground_box3d_coder() const;
  void clear_ground_box3d_coder();
  static const int kGroundBox3DCoderFieldNumber = 1;
  const ::second::protos::GroundBox3dCoder& ground_box3d_coder() const;
  ::second::protos::GroundBox3dCoder* mutable_ground_box3d_coder();
  ::second::protos::GroundBox3dCoder* release_ground_box3d_coder();
  void set_allocated_ground_box3d_coder(::second::protos::GroundBox3dCoder* ground_box3d_coder);

  // .second.protos.BevBoxCoder bev_box_coder = 2;
  bool has_bev_box_coder() const;
  void clear_bev_box_coder();
  static const int kBevBoxCoderFieldNumber = 2;
  const ::second::protos::BevBoxCoder& bev_box_coder() const;
  ::second::protos::BevBoxCoder* mutable_bev_box_coder();
  ::second::protos::BevBoxCoder* release_bev_box_coder();
  void set_allocated_bev_box_coder(::second::protos::BevBoxCoder* bev_box_coder);

  BoxCoderCase box_coder_case() const;
  // @@protoc_insertion_point(class_scope:second.protos.BoxCoder)
 private:
  void set_has_ground_box3d_coder();
  void set_has_bev_box_coder();

  inline bool has_box_coder() const;
  void clear_box_coder();
  inline void clear_has_box_coder();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union BoxCoderUnion {
    BoxCoderUnion() {}
    ::second::protos::GroundBox3dCoder* ground_box3d_coder_;
    ::second::protos::BevBoxCoder* bev_box_coder_;
  } box_coder_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_second_2fprotos_2fbox_5fcoder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroundBox3dCoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.GroundBox3dCoder) */ {
 public:
  GroundBox3dCoder();
  virtual ~GroundBox3dCoder();

  GroundBox3dCoder(const GroundBox3dCoder& from);

  inline GroundBox3dCoder& operator=(const GroundBox3dCoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroundBox3dCoder(GroundBox3dCoder&& from) noexcept
    : GroundBox3dCoder() {
    *this = ::std::move(from);
  }

  inline GroundBox3dCoder& operator=(GroundBox3dCoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroundBox3dCoder& default_instance();

  static inline const GroundBox3dCoder* internal_default_instance() {
    return reinterpret_cast<const GroundBox3dCoder*>(
               &_GroundBox3dCoder_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GroundBox3dCoder* other);
  friend void swap(GroundBox3dCoder& a, GroundBox3dCoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroundBox3dCoder* New() const PROTOBUF_FINAL { return New(NULL); }

  GroundBox3dCoder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroundBox3dCoder& from);
  void MergeFrom(const GroundBox3dCoder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroundBox3dCoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool linear_dim = 1;
  void clear_linear_dim();
  static const int kLinearDimFieldNumber = 1;
  bool linear_dim() const;
  void set_linear_dim(bool value);

  // bool encode_angle_vector = 2;
  void clear_encode_angle_vector();
  static const int kEncodeAngleVectorFieldNumber = 2;
  bool encode_angle_vector() const;
  void set_encode_angle_vector(bool value);

  // @@protoc_insertion_point(class_scope:second.protos.GroundBox3dCoder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool linear_dim_;
  bool encode_angle_vector_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fbox_5fcoder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BevBoxCoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.BevBoxCoder) */ {
 public:
  BevBoxCoder();
  virtual ~BevBoxCoder();

  BevBoxCoder(const BevBoxCoder& from);

  inline BevBoxCoder& operator=(const BevBoxCoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BevBoxCoder(BevBoxCoder&& from) noexcept
    : BevBoxCoder() {
    *this = ::std::move(from);
  }

  inline BevBoxCoder& operator=(BevBoxCoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BevBoxCoder& default_instance();

  static inline const BevBoxCoder* internal_default_instance() {
    return reinterpret_cast<const BevBoxCoder*>(
               &_BevBoxCoder_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BevBoxCoder* other);
  friend void swap(BevBoxCoder& a, BevBoxCoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BevBoxCoder* New() const PROTOBUF_FINAL { return New(NULL); }

  BevBoxCoder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BevBoxCoder& from);
  void MergeFrom(const BevBoxCoder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BevBoxCoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool linear_dim = 1;
  void clear_linear_dim();
  static const int kLinearDimFieldNumber = 1;
  bool linear_dim() const;
  void set_linear_dim(bool value);

  // bool encode_angle_vector = 2;
  void clear_encode_angle_vector();
  static const int kEncodeAngleVectorFieldNumber = 2;
  bool encode_angle_vector() const;
  void set_encode_angle_vector(bool value);

  // float z_fixed = 3;
  void clear_z_fixed();
  static const int kZFixedFieldNumber = 3;
  float z_fixed() const;
  void set_z_fixed(float value);

  // float h_fixed = 4;
  void clear_h_fixed();
  static const int kHFixedFieldNumber = 4;
  float h_fixed() const;
  void set_h_fixed(float value);

  // @@protoc_insertion_point(class_scope:second.protos.BevBoxCoder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool linear_dim_;
  bool encode_angle_vector_;
  float z_fixed_;
  float h_fixed_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fbox_5fcoder_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoxCoder

// .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
inline bool BoxCoder::has_ground_box3d_coder() const {
  return box_coder_case() == kGroundBox3DCoder;
}
inline void BoxCoder::set_has_ground_box3d_coder() {
  _oneof_case_[0] = kGroundBox3DCoder;
}
inline void BoxCoder::clear_ground_box3d_coder() {
  if (has_ground_box3d_coder()) {
    delete box_coder_.ground_box3d_coder_;
    clear_has_box_coder();
  }
}
inline  const ::second::protos::GroundBox3dCoder& BoxCoder::ground_box3d_coder() const {
  // @@protoc_insertion_point(field_get:second.protos.BoxCoder.ground_box3d_coder)
  return has_ground_box3d_coder()
      ? *box_coder_.ground_box3d_coder_
      : ::second::protos::GroundBox3dCoder::default_instance();
}
inline ::second::protos::GroundBox3dCoder* BoxCoder::mutable_ground_box3d_coder() {
  if (!has_ground_box3d_coder()) {
    clear_box_coder();
    set_has_ground_box3d_coder();
    box_coder_.ground_box3d_coder_ = new ::second::protos::GroundBox3dCoder;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.BoxCoder.ground_box3d_coder)
  return box_coder_.ground_box3d_coder_;
}
inline ::second::protos::GroundBox3dCoder* BoxCoder::release_ground_box3d_coder() {
  // @@protoc_insertion_point(field_release:second.protos.BoxCoder.ground_box3d_coder)
  if (has_ground_box3d_coder()) {
    clear_has_box_coder();
    ::second::protos::GroundBox3dCoder* temp = box_coder_.ground_box3d_coder_;
    box_coder_.ground_box3d_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_ground_box3d_coder(::second::protos::GroundBox3dCoder* ground_box3d_coder) {
  clear_box_coder();
  if (ground_box3d_coder) {
    set_has_ground_box3d_coder();
    box_coder_.ground_box3d_coder_ = ground_box3d_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.BoxCoder.ground_box3d_coder)
}

// .second.protos.BevBoxCoder bev_box_coder = 2;
inline bool BoxCoder::has_bev_box_coder() const {
  return box_coder_case() == kBevBoxCoder;
}
inline void BoxCoder::set_has_bev_box_coder() {
  _oneof_case_[0] = kBevBoxCoder;
}
inline void BoxCoder::clear_bev_box_coder() {
  if (has_bev_box_coder()) {
    delete box_coder_.bev_box_coder_;
    clear_has_box_coder();
  }
}
inline  const ::second::protos::BevBoxCoder& BoxCoder::bev_box_coder() const {
  // @@protoc_insertion_point(field_get:second.protos.BoxCoder.bev_box_coder)
  return has_bev_box_coder()
      ? *box_coder_.bev_box_coder_
      : ::second::protos::BevBoxCoder::default_instance();
}
inline ::second::protos::BevBoxCoder* BoxCoder::mutable_bev_box_coder() {
  if (!has_bev_box_coder()) {
    clear_box_coder();
    set_has_bev_box_coder();
    box_coder_.bev_box_coder_ = new ::second::protos::BevBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.BoxCoder.bev_box_coder)
  return box_coder_.bev_box_coder_;
}
inline ::second::protos::BevBoxCoder* BoxCoder::release_bev_box_coder() {
  // @@protoc_insertion_point(field_release:second.protos.BoxCoder.bev_box_coder)
  if (has_bev_box_coder()) {
    clear_has_box_coder();
    ::second::protos::BevBoxCoder* temp = box_coder_.bev_box_coder_;
    box_coder_.bev_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BoxCoder::set_allocated_bev_box_coder(::second::protos::BevBoxCoder* bev_box_coder) {
  clear_box_coder();
  if (bev_box_coder) {
    set_has_bev_box_coder();
    box_coder_.bev_box_coder_ = bev_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.BoxCoder.bev_box_coder)
}

inline bool BoxCoder::has_box_coder() const {
  return box_coder_case() != BOX_CODER_NOT_SET;
}
inline void BoxCoder::clear_has_box_coder() {
  _oneof_case_[0] = BOX_CODER_NOT_SET;
}
inline BoxCoder::BoxCoderCase BoxCoder::box_coder_case() const {
  return BoxCoder::BoxCoderCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GroundBox3dCoder

// bool linear_dim = 1;
inline void GroundBox3dCoder::clear_linear_dim() {
  linear_dim_ = false;
}
inline bool GroundBox3dCoder::linear_dim() const {
  // @@protoc_insertion_point(field_get:second.protos.GroundBox3dCoder.linear_dim)
  return linear_dim_;
}
inline void GroundBox3dCoder::set_linear_dim(bool value) {
  
  linear_dim_ = value;
  // @@protoc_insertion_point(field_set:second.protos.GroundBox3dCoder.linear_dim)
}

// bool encode_angle_vector = 2;
inline void GroundBox3dCoder::clear_encode_angle_vector() {
  encode_angle_vector_ = false;
}
inline bool GroundBox3dCoder::encode_angle_vector() const {
  // @@protoc_insertion_point(field_get:second.protos.GroundBox3dCoder.encode_angle_vector)
  return encode_angle_vector_;
}
inline void GroundBox3dCoder::set_encode_angle_vector(bool value) {
  
  encode_angle_vector_ = value;
  // @@protoc_insertion_point(field_set:second.protos.GroundBox3dCoder.encode_angle_vector)
}

// -------------------------------------------------------------------

// BevBoxCoder

// bool linear_dim = 1;
inline void BevBoxCoder::clear_linear_dim() {
  linear_dim_ = false;
}
inline bool BevBoxCoder::linear_dim() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.linear_dim)
  return linear_dim_;
}
inline void BevBoxCoder::set_linear_dim(bool value) {
  
  linear_dim_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.linear_dim)
}

// bool encode_angle_vector = 2;
inline void BevBoxCoder::clear_encode_angle_vector() {
  encode_angle_vector_ = false;
}
inline bool BevBoxCoder::encode_angle_vector() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.encode_angle_vector)
  return encode_angle_vector_;
}
inline void BevBoxCoder::set_encode_angle_vector(bool value) {
  
  encode_angle_vector_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.encode_angle_vector)
}

// float z_fixed = 3;
inline void BevBoxCoder::clear_z_fixed() {
  z_fixed_ = 0;
}
inline float BevBoxCoder::z_fixed() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.z_fixed)
  return z_fixed_;
}
inline void BevBoxCoder::set_z_fixed(float value) {
  
  z_fixed_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.z_fixed)
}

// float h_fixed = 4;
inline void BevBoxCoder::clear_h_fixed() {
  h_fixed_ = 0;
}
inline float BevBoxCoder::h_fixed() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.h_fixed)
  return h_fixed_;
}
inline void BevBoxCoder::set_h_fixed(float value) {
  
  h_fixed_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.h_fixed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_second_2fprotos_2fbox_5fcoder_2eproto__INCLUDED
