// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/box_coder.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/box_coder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class BoxCoderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BoxCoder>
     _instance;
  const ::second::protos::GroundBox3dCoder* ground_box3d_coder_;
  const ::second::protos::BevBoxCoder* bev_box_coder_;
} _BoxCoder_default_instance_;
class GroundBox3dCoderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroundBox3dCoder>
     _instance;
} _GroundBox3dCoder_default_instance_;
class BevBoxCoderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BevBoxCoder>
     _instance;
} _BevBoxCoder_default_instance_;

namespace protobuf_second_2fprotos_2fbox_5fcoder_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxCoder, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxCoder, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(BoxCoderDefaultTypeInternal, ground_box3d_coder_),
  offsetof(BoxCoderDefaultTypeInternal, bev_box_coder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxCoder, box_coder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundBox3dCoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundBox3dCoder, linear_dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroundBox3dCoder, encode_angle_vector_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BevBoxCoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BevBoxCoder, linear_dim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BevBoxCoder, encode_angle_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BevBoxCoder, z_fixed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BevBoxCoder, h_fixed_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(BoxCoder)},
  { 8, -1, sizeof(GroundBox3dCoder)},
  { 15, -1, sizeof(BevBoxCoder)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BoxCoder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroundBox3dCoder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BevBoxCoder_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/box_coder.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BoxCoder_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BoxCoder_default_instance_);_GroundBox3dCoder_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroundBox3dCoder_default_instance_);_BevBoxCoder_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BevBoxCoder_default_instance_);_BoxCoder_default_instance_.ground_box3d_coder_ = const_cast< ::second::protos::GroundBox3dCoder*>(
      ::second::protos::GroundBox3dCoder::internal_default_instance());
  _BoxCoder_default_instance_.bev_box_coder_ = const_cast< ::second::protos::BevBoxCoder*>(
      ::second::protos::BevBoxCoder::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035second/protos/box_coder.proto\022\rsecond."
      "protos\"\213\001\n\010BoxCoder\022=\n\022ground_box3d_code"
      "r\030\001 \001(\0132\037.second.protos.GroundBox3dCoder"
      "H\000\0223\n\rbev_box_coder\030\002 \001(\0132\032.second.proto"
      "s.BevBoxCoderH\000B\013\n\tbox_coder\"C\n\020GroundBo"
      "x3dCoder\022\022\n\nlinear_dim\030\001 \001(\010\022\033\n\023encode_a"
      "ngle_vector\030\002 \001(\010\"`\n\013BevBoxCoder\022\022\n\nline"
      "ar_dim\030\001 \001(\010\022\033\n\023encode_angle_vector\030\002 \001("
      "\010\022\017\n\007z_fixed\030\003 \001(\002\022\017\n\007h_fixed\030\004 \001(\002b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/box_coder.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2fbox_5fcoder_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxCoder::kGroundBox3DCoderFieldNumber;
const int BoxCoder::kBevBoxCoderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoxCoder::BoxCoder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.BoxCoder)
}
BoxCoder::BoxCoder(const BoxCoder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_box_coder();
  switch (from.box_coder_case()) {
    case kGroundBox3DCoder: {
      mutable_ground_box3d_coder()->::second::protos::GroundBox3dCoder::MergeFrom(from.ground_box3d_coder());
      break;
    }
    case kBevBoxCoder: {
      mutable_bev_box_coder()->::second::protos::BevBoxCoder::MergeFrom(from.bev_box_coder());
      break;
    }
    case BOX_CODER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.BoxCoder)
}

void BoxCoder::SharedCtor() {
  clear_has_box_coder();
  _cached_size_ = 0;
}

BoxCoder::~BoxCoder() {
  // @@protoc_insertion_point(destructor:second.protos.BoxCoder)
  SharedDtor();
}

void BoxCoder::SharedDtor() {
  if (has_box_coder()) {
    clear_box_coder();
  }
}

void BoxCoder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoxCoder::descriptor() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoxCoder& BoxCoder::default_instance() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  return *internal_default_instance();
}

BoxCoder* BoxCoder::New(::google::protobuf::Arena* arena) const {
  BoxCoder* n = new BoxCoder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoxCoder::clear_box_coder() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.BoxCoder)
  switch (box_coder_case()) {
    case kGroundBox3DCoder: {
      delete box_coder_.ground_box3d_coder_;
      break;
    }
    case kBevBoxCoder: {
      delete box_coder_.bev_box_coder_;
      break;
    }
    case BOX_CODER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BOX_CODER_NOT_SET;
}


void BoxCoder::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.BoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_box_coder();
  _internal_metadata_.Clear();
}

bool BoxCoder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.BoxCoder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ground_box3d_coder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.BevBoxCoder bev_box_coder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bev_box_coder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.BoxCoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.BoxCoder)
  return false;
#undef DO_
}

void BoxCoder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.BoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
  if (has_ground_box3d_coder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *box_coder_.ground_box3d_coder_, output);
  }

  // .second.protos.BevBoxCoder bev_box_coder = 2;
  if (has_bev_box_coder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *box_coder_.bev_box_coder_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.BoxCoder)
}

::google::protobuf::uint8* BoxCoder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.BoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
  if (has_ground_box3d_coder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *box_coder_.ground_box3d_coder_, deterministic, target);
  }

  // .second.protos.BevBoxCoder bev_box_coder = 2;
  if (has_bev_box_coder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *box_coder_.bev_box_coder_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.BoxCoder)
  return target;
}

size_t BoxCoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.BoxCoder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (box_coder_case()) {
    // .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
    case kGroundBox3DCoder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *box_coder_.ground_box3d_coder_);
      break;
    }
    // .second.protos.BevBoxCoder bev_box_coder = 2;
    case kBevBoxCoder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *box_coder_.bev_box_coder_);
      break;
    }
    case BOX_CODER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoxCoder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.BoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxCoder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoxCoder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.BoxCoder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.BoxCoder)
    MergeFrom(*source);
  }
}

void BoxCoder::MergeFrom(const BoxCoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.BoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.box_coder_case()) {
    case kGroundBox3DCoder: {
      mutable_ground_box3d_coder()->::second::protos::GroundBox3dCoder::MergeFrom(from.ground_box3d_coder());
      break;
    }
    case kBevBoxCoder: {
      mutable_bev_box_coder()->::second::protos::BevBoxCoder::MergeFrom(from.bev_box_coder());
      break;
    }
    case BOX_CODER_NOT_SET: {
      break;
    }
  }
}

void BoxCoder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.BoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxCoder::CopyFrom(const BoxCoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.BoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxCoder::IsInitialized() const {
  return true;
}

void BoxCoder::Swap(BoxCoder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoxCoder::InternalSwap(BoxCoder* other) {
  using std::swap;
  swap(box_coder_, other->box_coder_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoxCoder::GetMetadata() const {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoxCoder

// .second.protos.GroundBox3dCoder ground_box3d_coder = 1;
bool BoxCoder::has_ground_box3d_coder() const {
  return box_coder_case() == kGroundBox3DCoder;
}
void BoxCoder::set_has_ground_box3d_coder() {
  _oneof_case_[0] = kGroundBox3DCoder;
}
void BoxCoder::clear_ground_box3d_coder() {
  if (has_ground_box3d_coder()) {
    delete box_coder_.ground_box3d_coder_;
    clear_has_box_coder();
  }
}
 const ::second::protos::GroundBox3dCoder& BoxCoder::ground_box3d_coder() const {
  // @@protoc_insertion_point(field_get:second.protos.BoxCoder.ground_box3d_coder)
  return has_ground_box3d_coder()
      ? *box_coder_.ground_box3d_coder_
      : ::second::protos::GroundBox3dCoder::default_instance();
}
::second::protos::GroundBox3dCoder* BoxCoder::mutable_ground_box3d_coder() {
  if (!has_ground_box3d_coder()) {
    clear_box_coder();
    set_has_ground_box3d_coder();
    box_coder_.ground_box3d_coder_ = new ::second::protos::GroundBox3dCoder;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.BoxCoder.ground_box3d_coder)
  return box_coder_.ground_box3d_coder_;
}
::second::protos::GroundBox3dCoder* BoxCoder::release_ground_box3d_coder() {
  // @@protoc_insertion_point(field_release:second.protos.BoxCoder.ground_box3d_coder)
  if (has_ground_box3d_coder()) {
    clear_has_box_coder();
    ::second::protos::GroundBox3dCoder* temp = box_coder_.ground_box3d_coder_;
    box_coder_.ground_box3d_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void BoxCoder::set_allocated_ground_box3d_coder(::second::protos::GroundBox3dCoder* ground_box3d_coder) {
  clear_box_coder();
  if (ground_box3d_coder) {
    set_has_ground_box3d_coder();
    box_coder_.ground_box3d_coder_ = ground_box3d_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.BoxCoder.ground_box3d_coder)
}

// .second.protos.BevBoxCoder bev_box_coder = 2;
bool BoxCoder::has_bev_box_coder() const {
  return box_coder_case() == kBevBoxCoder;
}
void BoxCoder::set_has_bev_box_coder() {
  _oneof_case_[0] = kBevBoxCoder;
}
void BoxCoder::clear_bev_box_coder() {
  if (has_bev_box_coder()) {
    delete box_coder_.bev_box_coder_;
    clear_has_box_coder();
  }
}
 const ::second::protos::BevBoxCoder& BoxCoder::bev_box_coder() const {
  // @@protoc_insertion_point(field_get:second.protos.BoxCoder.bev_box_coder)
  return has_bev_box_coder()
      ? *box_coder_.bev_box_coder_
      : ::second::protos::BevBoxCoder::default_instance();
}
::second::protos::BevBoxCoder* BoxCoder::mutable_bev_box_coder() {
  if (!has_bev_box_coder()) {
    clear_box_coder();
    set_has_bev_box_coder();
    box_coder_.bev_box_coder_ = new ::second::protos::BevBoxCoder;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.BoxCoder.bev_box_coder)
  return box_coder_.bev_box_coder_;
}
::second::protos::BevBoxCoder* BoxCoder::release_bev_box_coder() {
  // @@protoc_insertion_point(field_release:second.protos.BoxCoder.bev_box_coder)
  if (has_bev_box_coder()) {
    clear_has_box_coder();
    ::second::protos::BevBoxCoder* temp = box_coder_.bev_box_coder_;
    box_coder_.bev_box_coder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void BoxCoder::set_allocated_bev_box_coder(::second::protos::BevBoxCoder* bev_box_coder) {
  clear_box_coder();
  if (bev_box_coder) {
    set_has_bev_box_coder();
    box_coder_.bev_box_coder_ = bev_box_coder;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.BoxCoder.bev_box_coder)
}

bool BoxCoder::has_box_coder() const {
  return box_coder_case() != BOX_CODER_NOT_SET;
}
void BoxCoder::clear_has_box_coder() {
  _oneof_case_[0] = BOX_CODER_NOT_SET;
}
BoxCoder::BoxCoderCase BoxCoder::box_coder_case() const {
  return BoxCoder::BoxCoderCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroundBox3dCoder::kLinearDimFieldNumber;
const int GroundBox3dCoder::kEncodeAngleVectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroundBox3dCoder::GroundBox3dCoder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.GroundBox3dCoder)
}
GroundBox3dCoder::GroundBox3dCoder(const GroundBox3dCoder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&linear_dim_, &from.linear_dim_,
    static_cast<size_t>(reinterpret_cast<char*>(&encode_angle_vector_) -
    reinterpret_cast<char*>(&linear_dim_)) + sizeof(encode_angle_vector_));
  // @@protoc_insertion_point(copy_constructor:second.protos.GroundBox3dCoder)
}

void GroundBox3dCoder::SharedCtor() {
  ::memset(&linear_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encode_angle_vector_) -
      reinterpret_cast<char*>(&linear_dim_)) + sizeof(encode_angle_vector_));
  _cached_size_ = 0;
}

GroundBox3dCoder::~GroundBox3dCoder() {
  // @@protoc_insertion_point(destructor:second.protos.GroundBox3dCoder)
  SharedDtor();
}

void GroundBox3dCoder::SharedDtor() {
}

void GroundBox3dCoder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroundBox3dCoder::descriptor() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroundBox3dCoder& GroundBox3dCoder::default_instance() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroundBox3dCoder* GroundBox3dCoder::New(::google::protobuf::Arena* arena) const {
  GroundBox3dCoder* n = new GroundBox3dCoder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroundBox3dCoder::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.GroundBox3dCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linear_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encode_angle_vector_) -
      reinterpret_cast<char*>(&linear_dim_)) + sizeof(encode_angle_vector_));
  _internal_metadata_.Clear();
}

bool GroundBox3dCoder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.GroundBox3dCoder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool linear_dim = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &linear_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool encode_angle_vector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encode_angle_vector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.GroundBox3dCoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.GroundBox3dCoder)
  return false;
#undef DO_
}

void GroundBox3dCoder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.GroundBox3dCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->linear_dim(), output);
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->encode_angle_vector(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.GroundBox3dCoder)
}

::google::protobuf::uint8* GroundBox3dCoder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.GroundBox3dCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->linear_dim(), target);
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->encode_angle_vector(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.GroundBox3dCoder)
  return target;
}

size_t GroundBox3dCoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.GroundBox3dCoder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    total_size += 1 + 1;
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroundBox3dCoder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.GroundBox3dCoder)
  GOOGLE_DCHECK_NE(&from, this);
  const GroundBox3dCoder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroundBox3dCoder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.GroundBox3dCoder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.GroundBox3dCoder)
    MergeFrom(*source);
  }
}

void GroundBox3dCoder::MergeFrom(const GroundBox3dCoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.GroundBox3dCoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.linear_dim() != 0) {
    set_linear_dim(from.linear_dim());
  }
  if (from.encode_angle_vector() != 0) {
    set_encode_angle_vector(from.encode_angle_vector());
  }
}

void GroundBox3dCoder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.GroundBox3dCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroundBox3dCoder::CopyFrom(const GroundBox3dCoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.GroundBox3dCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroundBox3dCoder::IsInitialized() const {
  return true;
}

void GroundBox3dCoder::Swap(GroundBox3dCoder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroundBox3dCoder::InternalSwap(GroundBox3dCoder* other) {
  using std::swap;
  swap(linear_dim_, other->linear_dim_);
  swap(encode_angle_vector_, other->encode_angle_vector_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroundBox3dCoder::GetMetadata() const {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroundBox3dCoder

// bool linear_dim = 1;
void GroundBox3dCoder::clear_linear_dim() {
  linear_dim_ = false;
}
bool GroundBox3dCoder::linear_dim() const {
  // @@protoc_insertion_point(field_get:second.protos.GroundBox3dCoder.linear_dim)
  return linear_dim_;
}
void GroundBox3dCoder::set_linear_dim(bool value) {
  
  linear_dim_ = value;
  // @@protoc_insertion_point(field_set:second.protos.GroundBox3dCoder.linear_dim)
}

// bool encode_angle_vector = 2;
void GroundBox3dCoder::clear_encode_angle_vector() {
  encode_angle_vector_ = false;
}
bool GroundBox3dCoder::encode_angle_vector() const {
  // @@protoc_insertion_point(field_get:second.protos.GroundBox3dCoder.encode_angle_vector)
  return encode_angle_vector_;
}
void GroundBox3dCoder::set_encode_angle_vector(bool value) {
  
  encode_angle_vector_ = value;
  // @@protoc_insertion_point(field_set:second.protos.GroundBox3dCoder.encode_angle_vector)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BevBoxCoder::kLinearDimFieldNumber;
const int BevBoxCoder::kEncodeAngleVectorFieldNumber;
const int BevBoxCoder::kZFixedFieldNumber;
const int BevBoxCoder::kHFixedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BevBoxCoder::BevBoxCoder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.BevBoxCoder)
}
BevBoxCoder::BevBoxCoder(const BevBoxCoder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&linear_dim_, &from.linear_dim_,
    static_cast<size_t>(reinterpret_cast<char*>(&h_fixed_) -
    reinterpret_cast<char*>(&linear_dim_)) + sizeof(h_fixed_));
  // @@protoc_insertion_point(copy_constructor:second.protos.BevBoxCoder)
}

void BevBoxCoder::SharedCtor() {
  ::memset(&linear_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_fixed_) -
      reinterpret_cast<char*>(&linear_dim_)) + sizeof(h_fixed_));
  _cached_size_ = 0;
}

BevBoxCoder::~BevBoxCoder() {
  // @@protoc_insertion_point(destructor:second.protos.BevBoxCoder)
  SharedDtor();
}

void BevBoxCoder::SharedDtor() {
}

void BevBoxCoder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BevBoxCoder::descriptor() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BevBoxCoder& BevBoxCoder::default_instance() {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::InitDefaults();
  return *internal_default_instance();
}

BevBoxCoder* BevBoxCoder::New(::google::protobuf::Arena* arena) const {
  BevBoxCoder* n = new BevBoxCoder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BevBoxCoder::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.BevBoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linear_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_fixed_) -
      reinterpret_cast<char*>(&linear_dim_)) + sizeof(h_fixed_));
  _internal_metadata_.Clear();
}

bool BevBoxCoder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.BevBoxCoder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool linear_dim = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &linear_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool encode_angle_vector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encode_angle_vector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z_fixed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_fixed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float h_fixed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &h_fixed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.BevBoxCoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.BevBoxCoder)
  return false;
#undef DO_
}

void BevBoxCoder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.BevBoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->linear_dim(), output);
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->encode_angle_vector(), output);
  }

  // float z_fixed = 3;
  if (this->z_fixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z_fixed(), output);
  }

  // float h_fixed = 4;
  if (this->h_fixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->h_fixed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.BevBoxCoder)
}

::google::protobuf::uint8* BevBoxCoder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.BevBoxCoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->linear_dim(), target);
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->encode_angle_vector(), target);
  }

  // float z_fixed = 3;
  if (this->z_fixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z_fixed(), target);
  }

  // float h_fixed = 4;
  if (this->h_fixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->h_fixed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.BevBoxCoder)
  return target;
}

size_t BevBoxCoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.BevBoxCoder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool linear_dim = 1;
  if (this->linear_dim() != 0) {
    total_size += 1 + 1;
  }

  // bool encode_angle_vector = 2;
  if (this->encode_angle_vector() != 0) {
    total_size += 1 + 1;
  }

  // float z_fixed = 3;
  if (this->z_fixed() != 0) {
    total_size += 1 + 4;
  }

  // float h_fixed = 4;
  if (this->h_fixed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BevBoxCoder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.BevBoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  const BevBoxCoder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BevBoxCoder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.BevBoxCoder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.BevBoxCoder)
    MergeFrom(*source);
  }
}

void BevBoxCoder::MergeFrom(const BevBoxCoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.BevBoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.linear_dim() != 0) {
    set_linear_dim(from.linear_dim());
  }
  if (from.encode_angle_vector() != 0) {
    set_encode_angle_vector(from.encode_angle_vector());
  }
  if (from.z_fixed() != 0) {
    set_z_fixed(from.z_fixed());
  }
  if (from.h_fixed() != 0) {
    set_h_fixed(from.h_fixed());
  }
}

void BevBoxCoder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.BevBoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BevBoxCoder::CopyFrom(const BevBoxCoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.BevBoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BevBoxCoder::IsInitialized() const {
  return true;
}

void BevBoxCoder::Swap(BevBoxCoder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BevBoxCoder::InternalSwap(BevBoxCoder* other) {
  using std::swap;
  swap(linear_dim_, other->linear_dim_);
  swap(encode_angle_vector_, other->encode_angle_vector_);
  swap(z_fixed_, other->z_fixed_);
  swap(h_fixed_, other->h_fixed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BevBoxCoder::GetMetadata() const {
  protobuf_second_2fprotos_2fbox_5fcoder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fbox_5fcoder_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BevBoxCoder

// bool linear_dim = 1;
void BevBoxCoder::clear_linear_dim() {
  linear_dim_ = false;
}
bool BevBoxCoder::linear_dim() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.linear_dim)
  return linear_dim_;
}
void BevBoxCoder::set_linear_dim(bool value) {
  
  linear_dim_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.linear_dim)
}

// bool encode_angle_vector = 2;
void BevBoxCoder::clear_encode_angle_vector() {
  encode_angle_vector_ = false;
}
bool BevBoxCoder::encode_angle_vector() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.encode_angle_vector)
  return encode_angle_vector_;
}
void BevBoxCoder::set_encode_angle_vector(bool value) {
  
  encode_angle_vector_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.encode_angle_vector)
}

// float z_fixed = 3;
void BevBoxCoder::clear_z_fixed() {
  z_fixed_ = 0;
}
float BevBoxCoder::z_fixed() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.z_fixed)
  return z_fixed_;
}
void BevBoxCoder::set_z_fixed(float value) {
  
  z_fixed_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.z_fixed)
}

// float h_fixed = 4;
void BevBoxCoder::clear_h_fixed() {
  h_fixed_ = 0;
}
float BevBoxCoder::h_fixed() const {
  // @@protoc_insertion_point(field_get:second.protos.BevBoxCoder.h_fixed)
  return h_fixed_;
}
void BevBoxCoder::set_h_fixed(float value) {
  
  h_fixed_ = value;
  // @@protoc_insertion_point(field_set:second.protos.BevBoxCoder.h_fixed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
