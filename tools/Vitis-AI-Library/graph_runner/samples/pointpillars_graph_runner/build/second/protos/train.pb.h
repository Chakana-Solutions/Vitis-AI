// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/train.proto

#ifndef PROTOBUF_second_2fprotos_2ftrain_2eproto__INCLUDED
#define PROTOBUF_second_2fprotos_2ftrain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "second/protos/optimizer.pb.h"
#include "second/protos/preprocess.pb.h"
// @@protoc_insertion_point(includes)
namespace second {
namespace protos {
class L1Regularizer;
class L1RegularizerDefaultTypeInternal;
extern L1RegularizerDefaultTypeInternal _L1Regularizer_default_instance_;
class L2Regularizer;
class L2RegularizerDefaultTypeInternal;
extern L2RegularizerDefaultTypeInternal _L2Regularizer_default_instance_;
class Regularizer;
class RegularizerDefaultTypeInternal;
extern RegularizerDefaultTypeInternal _Regularizer_default_instance_;
class TrainConfig;
class TrainConfigDefaultTypeInternal;
extern TrainConfigDefaultTypeInternal _TrainConfig_default_instance_;
}  // namespace protos
}  // namespace second

namespace second {
namespace protos {

namespace protobuf_second_2fprotos_2ftrain_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_second_2fprotos_2ftrain_2eproto

// ===================================================================

class Regularizer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.Regularizer) */ {
 public:
  Regularizer();
  virtual ~Regularizer();

  Regularizer(const Regularizer& from);

  inline Regularizer& operator=(const Regularizer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Regularizer(Regularizer&& from) noexcept
    : Regularizer() {
    *this = ::std::move(from);
  }

  inline Regularizer& operator=(Regularizer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Regularizer& default_instance();

  enum RegularizerOneofCase {
    kL1Regularizer = 1,
    kL2Regularizer = 2,
    REGULARIZER_ONEOF_NOT_SET = 0,
  };

  static inline const Regularizer* internal_default_instance() {
    return reinterpret_cast<const Regularizer*>(
               &_Regularizer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Regularizer* other);
  friend void swap(Regularizer& a, Regularizer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Regularizer* New() const PROTOBUF_FINAL { return New(NULL); }

  Regularizer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Regularizer& from);
  void MergeFrom(const Regularizer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Regularizer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .second.protos.L1Regularizer l1_regularizer = 1;
  bool has_l1_regularizer() const;
  void clear_l1_regularizer();
  static const int kL1RegularizerFieldNumber = 1;
  const ::second::protos::L1Regularizer& l1_regularizer() const;
  ::second::protos::L1Regularizer* mutable_l1_regularizer();
  ::second::protos::L1Regularizer* release_l1_regularizer();
  void set_allocated_l1_regularizer(::second::protos::L1Regularizer* l1_regularizer);

  // .second.protos.L2Regularizer l2_regularizer = 2;
  bool has_l2_regularizer() const;
  void clear_l2_regularizer();
  static const int kL2RegularizerFieldNumber = 2;
  const ::second::protos::L2Regularizer& l2_regularizer() const;
  ::second::protos::L2Regularizer* mutable_l2_regularizer();
  ::second::protos::L2Regularizer* release_l2_regularizer();
  void set_allocated_l2_regularizer(::second::protos::L2Regularizer* l2_regularizer);

  RegularizerOneofCase regularizer_oneof_case() const;
  // @@protoc_insertion_point(class_scope:second.protos.Regularizer)
 private:
  void set_has_l1_regularizer();
  void set_has_l2_regularizer();

  inline bool has_regularizer_oneof() const;
  void clear_regularizer_oneof();
  inline void clear_has_regularizer_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union RegularizerOneofUnion {
    RegularizerOneofUnion() {}
    ::second::protos::L1Regularizer* l1_regularizer_;
    ::second::protos::L2Regularizer* l2_regularizer_;
  } regularizer_oneof_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_second_2fprotos_2ftrain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class L1Regularizer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.L1Regularizer) */ {
 public:
  L1Regularizer();
  virtual ~L1Regularizer();

  L1Regularizer(const L1Regularizer& from);

  inline L1Regularizer& operator=(const L1Regularizer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  L1Regularizer(L1Regularizer&& from) noexcept
    : L1Regularizer() {
    *this = ::std::move(from);
  }

  inline L1Regularizer& operator=(L1Regularizer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const L1Regularizer& default_instance();

  static inline const L1Regularizer* internal_default_instance() {
    return reinterpret_cast<const L1Regularizer*>(
               &_L1Regularizer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(L1Regularizer* other);
  friend void swap(L1Regularizer& a, L1Regularizer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline L1Regularizer* New() const PROTOBUF_FINAL { return New(NULL); }

  L1Regularizer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const L1Regularizer& from);
  void MergeFrom(const L1Regularizer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(L1Regularizer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float weight = 1;
  void clear_weight();
  static const int kWeightFieldNumber = 1;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:second.protos.L1Regularizer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float weight_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2ftrain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class L2Regularizer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.L2Regularizer) */ {
 public:
  L2Regularizer();
  virtual ~L2Regularizer();

  L2Regularizer(const L2Regularizer& from);

  inline L2Regularizer& operator=(const L2Regularizer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  L2Regularizer(L2Regularizer&& from) noexcept
    : L2Regularizer() {
    *this = ::std::move(from);
  }

  inline L2Regularizer& operator=(L2Regularizer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const L2Regularizer& default_instance();

  static inline const L2Regularizer* internal_default_instance() {
    return reinterpret_cast<const L2Regularizer*>(
               &_L2Regularizer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(L2Regularizer* other);
  friend void swap(L2Regularizer& a, L2Regularizer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline L2Regularizer* New() const PROTOBUF_FINAL { return New(NULL); }

  L2Regularizer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const L2Regularizer& from);
  void MergeFrom(const L2Regularizer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(L2Regularizer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float weight = 1;
  void clear_weight();
  static const int kWeightFieldNumber = 1;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:second.protos.L2Regularizer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float weight_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2ftrain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrainConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.TrainConfig) */ {
 public:
  TrainConfig();
  virtual ~TrainConfig();

  TrainConfig(const TrainConfig& from);

  inline TrainConfig& operator=(const TrainConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainConfig(TrainConfig&& from) noexcept
    : TrainConfig() {
    *this = ::std::move(from);
  }

  inline TrainConfig& operator=(TrainConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainConfig& default_instance();

  static inline const TrainConfig* internal_default_instance() {
    return reinterpret_cast<const TrainConfig*>(
               &_TrainConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TrainConfig* other);
  friend void swap(TrainConfig& a, TrainConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainConfig& from);
  void MergeFrom(const TrainConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .second.protos.Optimizer optimizer = 1;
  bool has_optimizer() const;
  void clear_optimizer();
  static const int kOptimizerFieldNumber = 1;
  const ::second::protos::Optimizer& optimizer() const;
  ::second::protos::Optimizer* mutable_optimizer();
  ::second::protos::Optimizer* release_optimizer();
  void set_allocated_optimizer(::second::protos::Optimizer* optimizer);

  // uint32 inter_op_parallelism_threads = 3;
  void clear_inter_op_parallelism_threads();
  static const int kInterOpParallelismThreadsFieldNumber = 3;
  ::google::protobuf::uint32 inter_op_parallelism_threads() const;
  void set_inter_op_parallelism_threads(::google::protobuf::uint32 value);

  // uint32 intra_op_parallelism_threads = 4;
  void clear_intra_op_parallelism_threads();
  static const int kIntraOpParallelismThreadsFieldNumber = 4;
  ::google::protobuf::uint32 intra_op_parallelism_threads() const;
  void set_intra_op_parallelism_threads(::google::protobuf::uint32 value);

  // uint32 steps = 5;
  void clear_steps();
  static const int kStepsFieldNumber = 5;
  ::google::protobuf::uint32 steps() const;
  void set_steps(::google::protobuf::uint32 value);

  // uint32 steps_per_eval = 6;
  void clear_steps_per_eval();
  static const int kStepsPerEvalFieldNumber = 6;
  ::google::protobuf::uint32 steps_per_eval() const;
  void set_steps_per_eval(::google::protobuf::uint32 value);

  // uint32 save_checkpoints_secs = 7;
  void clear_save_checkpoints_secs();
  static const int kSaveCheckpointsSecsFieldNumber = 7;
  ::google::protobuf::uint32 save_checkpoints_secs() const;
  void set_save_checkpoints_secs(::google::protobuf::uint32 value);

  // uint32 save_summary_steps = 8;
  void clear_save_summary_steps();
  static const int kSaveSummaryStepsFieldNumber = 8;
  ::google::protobuf::uint32 save_summary_steps() const;
  void set_save_summary_steps(::google::protobuf::uint32 value);

  // float loss_scale_factor = 10;
  void clear_loss_scale_factor();
  static const int kLossScaleFactorFieldNumber = 10;
  float loss_scale_factor() const;
  void set_loss_scale_factor(float value);

  // bool enable_mixed_precision = 9;
  void clear_enable_mixed_precision();
  static const int kEnableMixedPrecisionFieldNumber = 9;
  bool enable_mixed_precision() const;
  void set_enable_mixed_precision(bool value);

  // bool clear_metrics_every_epoch = 11;
  void clear_clear_metrics_every_epoch();
  static const int kClearMetricsEveryEpochFieldNumber = 11;
  bool clear_metrics_every_epoch() const;
  void set_clear_metrics_every_epoch(bool value);

  // @@protoc_insertion_point(class_scope:second.protos.TrainConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::second::protos::Optimizer* optimizer_;
  ::google::protobuf::uint32 inter_op_parallelism_threads_;
  ::google::protobuf::uint32 intra_op_parallelism_threads_;
  ::google::protobuf::uint32 steps_;
  ::google::protobuf::uint32 steps_per_eval_;
  ::google::protobuf::uint32 save_checkpoints_secs_;
  ::google::protobuf::uint32 save_summary_steps_;
  float loss_scale_factor_;
  bool enable_mixed_precision_;
  bool clear_metrics_every_epoch_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2ftrain_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Regularizer

// .second.protos.L1Regularizer l1_regularizer = 1;
inline bool Regularizer::has_l1_regularizer() const {
  return regularizer_oneof_case() == kL1Regularizer;
}
inline void Regularizer::set_has_l1_regularizer() {
  _oneof_case_[0] = kL1Regularizer;
}
inline void Regularizer::clear_l1_regularizer() {
  if (has_l1_regularizer()) {
    delete regularizer_oneof_.l1_regularizer_;
    clear_has_regularizer_oneof();
  }
}
inline  const ::second::protos::L1Regularizer& Regularizer::l1_regularizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Regularizer.l1_regularizer)
  return has_l1_regularizer()
      ? *regularizer_oneof_.l1_regularizer_
      : ::second::protos::L1Regularizer::default_instance();
}
inline ::second::protos::L1Regularizer* Regularizer::mutable_l1_regularizer() {
  if (!has_l1_regularizer()) {
    clear_regularizer_oneof();
    set_has_l1_regularizer();
    regularizer_oneof_.l1_regularizer_ = new ::second::protos::L1Regularizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Regularizer.l1_regularizer)
  return regularizer_oneof_.l1_regularizer_;
}
inline ::second::protos::L1Regularizer* Regularizer::release_l1_regularizer() {
  // @@protoc_insertion_point(field_release:second.protos.Regularizer.l1_regularizer)
  if (has_l1_regularizer()) {
    clear_has_regularizer_oneof();
    ::second::protos::L1Regularizer* temp = regularizer_oneof_.l1_regularizer_;
    regularizer_oneof_.l1_regularizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Regularizer::set_allocated_l1_regularizer(::second::protos::L1Regularizer* l1_regularizer) {
  clear_regularizer_oneof();
  if (l1_regularizer) {
    set_has_l1_regularizer();
    regularizer_oneof_.l1_regularizer_ = l1_regularizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Regularizer.l1_regularizer)
}

// .second.protos.L2Regularizer l2_regularizer = 2;
inline bool Regularizer::has_l2_regularizer() const {
  return regularizer_oneof_case() == kL2Regularizer;
}
inline void Regularizer::set_has_l2_regularizer() {
  _oneof_case_[0] = kL2Regularizer;
}
inline void Regularizer::clear_l2_regularizer() {
  if (has_l2_regularizer()) {
    delete regularizer_oneof_.l2_regularizer_;
    clear_has_regularizer_oneof();
  }
}
inline  const ::second::protos::L2Regularizer& Regularizer::l2_regularizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Regularizer.l2_regularizer)
  return has_l2_regularizer()
      ? *regularizer_oneof_.l2_regularizer_
      : ::second::protos::L2Regularizer::default_instance();
}
inline ::second::protos::L2Regularizer* Regularizer::mutable_l2_regularizer() {
  if (!has_l2_regularizer()) {
    clear_regularizer_oneof();
    set_has_l2_regularizer();
    regularizer_oneof_.l2_regularizer_ = new ::second::protos::L2Regularizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Regularizer.l2_regularizer)
  return regularizer_oneof_.l2_regularizer_;
}
inline ::second::protos::L2Regularizer* Regularizer::release_l2_regularizer() {
  // @@protoc_insertion_point(field_release:second.protos.Regularizer.l2_regularizer)
  if (has_l2_regularizer()) {
    clear_has_regularizer_oneof();
    ::second::protos::L2Regularizer* temp = regularizer_oneof_.l2_regularizer_;
    regularizer_oneof_.l2_regularizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Regularizer::set_allocated_l2_regularizer(::second::protos::L2Regularizer* l2_regularizer) {
  clear_regularizer_oneof();
  if (l2_regularizer) {
    set_has_l2_regularizer();
    regularizer_oneof_.l2_regularizer_ = l2_regularizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Regularizer.l2_regularizer)
}

inline bool Regularizer::has_regularizer_oneof() const {
  return regularizer_oneof_case() != REGULARIZER_ONEOF_NOT_SET;
}
inline void Regularizer::clear_has_regularizer_oneof() {
  _oneof_case_[0] = REGULARIZER_ONEOF_NOT_SET;
}
inline Regularizer::RegularizerOneofCase Regularizer::regularizer_oneof_case() const {
  return Regularizer::RegularizerOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// L1Regularizer

// float weight = 1;
inline void L1Regularizer::clear_weight() {
  weight_ = 0;
}
inline float L1Regularizer::weight() const {
  // @@protoc_insertion_point(field_get:second.protos.L1Regularizer.weight)
  return weight_;
}
inline void L1Regularizer::set_weight(float value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:second.protos.L1Regularizer.weight)
}

// -------------------------------------------------------------------

// L2Regularizer

// float weight = 1;
inline void L2Regularizer::clear_weight() {
  weight_ = 0;
}
inline float L2Regularizer::weight() const {
  // @@protoc_insertion_point(field_get:second.protos.L2Regularizer.weight)
  return weight_;
}
inline void L2Regularizer::set_weight(float value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:second.protos.L2Regularizer.weight)
}

// -------------------------------------------------------------------

// TrainConfig

// .second.protos.Optimizer optimizer = 1;
inline bool TrainConfig::has_optimizer() const {
  return this != internal_default_instance() && optimizer_ != NULL;
}
inline void TrainConfig::clear_optimizer() {
  if (GetArenaNoVirtual() == NULL && optimizer_ != NULL) delete optimizer_;
  optimizer_ = NULL;
}
inline const ::second::protos::Optimizer& TrainConfig::optimizer() const {
  const ::second::protos::Optimizer* p = optimizer_;
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.optimizer)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::Optimizer*>(
      &::second::protos::_Optimizer_default_instance_);
}
inline ::second::protos::Optimizer* TrainConfig::mutable_optimizer() {
  
  if (optimizer_ == NULL) {
    optimizer_ = new ::second::protos::Optimizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.TrainConfig.optimizer)
  return optimizer_;
}
inline ::second::protos::Optimizer* TrainConfig::release_optimizer() {
  // @@protoc_insertion_point(field_release:second.protos.TrainConfig.optimizer)
  
  ::second::protos::Optimizer* temp = optimizer_;
  optimizer_ = NULL;
  return temp;
}
inline void TrainConfig::set_allocated_optimizer(::second::protos::Optimizer* optimizer) {
  delete optimizer_;
  optimizer_ = optimizer;
  if (optimizer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.TrainConfig.optimizer)
}

// uint32 inter_op_parallelism_threads = 3;
inline void TrainConfig::clear_inter_op_parallelism_threads() {
  inter_op_parallelism_threads_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::inter_op_parallelism_threads() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.inter_op_parallelism_threads)
  return inter_op_parallelism_threads_;
}
inline void TrainConfig::set_inter_op_parallelism_threads(::google::protobuf::uint32 value) {
  
  inter_op_parallelism_threads_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.inter_op_parallelism_threads)
}

// uint32 intra_op_parallelism_threads = 4;
inline void TrainConfig::clear_intra_op_parallelism_threads() {
  intra_op_parallelism_threads_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::intra_op_parallelism_threads() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.intra_op_parallelism_threads)
  return intra_op_parallelism_threads_;
}
inline void TrainConfig::set_intra_op_parallelism_threads(::google::protobuf::uint32 value) {
  
  intra_op_parallelism_threads_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.intra_op_parallelism_threads)
}

// uint32 steps = 5;
inline void TrainConfig::clear_steps() {
  steps_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::steps() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.steps)
  return steps_;
}
inline void TrainConfig::set_steps(::google::protobuf::uint32 value) {
  
  steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.steps)
}

// uint32 steps_per_eval = 6;
inline void TrainConfig::clear_steps_per_eval() {
  steps_per_eval_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::steps_per_eval() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.steps_per_eval)
  return steps_per_eval_;
}
inline void TrainConfig::set_steps_per_eval(::google::protobuf::uint32 value) {
  
  steps_per_eval_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.steps_per_eval)
}

// uint32 save_checkpoints_secs = 7;
inline void TrainConfig::clear_save_checkpoints_secs() {
  save_checkpoints_secs_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::save_checkpoints_secs() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.save_checkpoints_secs)
  return save_checkpoints_secs_;
}
inline void TrainConfig::set_save_checkpoints_secs(::google::protobuf::uint32 value) {
  
  save_checkpoints_secs_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.save_checkpoints_secs)
}

// uint32 save_summary_steps = 8;
inline void TrainConfig::clear_save_summary_steps() {
  save_summary_steps_ = 0u;
}
inline ::google::protobuf::uint32 TrainConfig::save_summary_steps() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.save_summary_steps)
  return save_summary_steps_;
}
inline void TrainConfig::set_save_summary_steps(::google::protobuf::uint32 value) {
  
  save_summary_steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.save_summary_steps)
}

// bool enable_mixed_precision = 9;
inline void TrainConfig::clear_enable_mixed_precision() {
  enable_mixed_precision_ = false;
}
inline bool TrainConfig::enable_mixed_precision() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.enable_mixed_precision)
  return enable_mixed_precision_;
}
inline void TrainConfig::set_enable_mixed_precision(bool value) {
  
  enable_mixed_precision_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.enable_mixed_precision)
}

// float loss_scale_factor = 10;
inline void TrainConfig::clear_loss_scale_factor() {
  loss_scale_factor_ = 0;
}
inline float TrainConfig::loss_scale_factor() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.loss_scale_factor)
  return loss_scale_factor_;
}
inline void TrainConfig::set_loss_scale_factor(float value) {
  
  loss_scale_factor_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.loss_scale_factor)
}

// bool clear_metrics_every_epoch = 11;
inline void TrainConfig::clear_clear_metrics_every_epoch() {
  clear_metrics_every_epoch_ = false;
}
inline bool TrainConfig::clear_metrics_every_epoch() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.clear_metrics_every_epoch)
  return clear_metrics_every_epoch_;
}
inline void TrainConfig::set_clear_metrics_every_epoch(bool value) {
  
  clear_metrics_every_epoch_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.clear_metrics_every_epoch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_second_2fprotos_2ftrain_2eproto__INCLUDED
