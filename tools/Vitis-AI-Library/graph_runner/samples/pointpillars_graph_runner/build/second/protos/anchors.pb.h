// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/anchors.proto

#ifndef PROTOBUF_second_2fprotos_2fanchors_2eproto__INCLUDED
#define PROTOBUF_second_2fprotos_2fanchors_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace second {
namespace protos {
class AnchorGeneratorCollection;
class AnchorGeneratorCollectionDefaultTypeInternal;
extern AnchorGeneratorCollectionDefaultTypeInternal _AnchorGeneratorCollection_default_instance_;
class AnchorGeneratorOld;
class AnchorGeneratorOldDefaultTypeInternal;
extern AnchorGeneratorOldDefaultTypeInternal _AnchorGeneratorOld_default_instance_;
class AnchorGeneratorRange;
class AnchorGeneratorRangeDefaultTypeInternal;
extern AnchorGeneratorRangeDefaultTypeInternal _AnchorGeneratorRange_default_instance_;
class AnchorGeneratorStride;
class AnchorGeneratorStrideDefaultTypeInternal;
extern AnchorGeneratorStrideDefaultTypeInternal _AnchorGeneratorStride_default_instance_;
class AnchorGeneratorV1;
class AnchorGeneratorV1DefaultTypeInternal;
extern AnchorGeneratorV1DefaultTypeInternal _AnchorGeneratorV1_default_instance_;
class AnchorGenerator_depara;
class AnchorGenerator_deparaDefaultTypeInternal;
extern AnchorGenerator_deparaDefaultTypeInternal _AnchorGenerator_depara_default_instance_;
}  // namespace protos
}  // namespace second

namespace second {
namespace protos {

namespace protobuf_second_2fprotos_2fanchors_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_second_2fprotos_2fanchors_2eproto

// ===================================================================

class AnchorGeneratorOld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGeneratorOld) */ {
 public:
  AnchorGeneratorOld();
  virtual ~AnchorGeneratorOld();

  AnchorGeneratorOld(const AnchorGeneratorOld& from);

  inline AnchorGeneratorOld& operator=(const AnchorGeneratorOld& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGeneratorOld(AnchorGeneratorOld&& from) noexcept
    : AnchorGeneratorOld() {
    *this = ::std::move(from);
  }

  inline AnchorGeneratorOld& operator=(AnchorGeneratorOld&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGeneratorOld& default_instance();

  static inline const AnchorGeneratorOld* internal_default_instance() {
    return reinterpret_cast<const AnchorGeneratorOld*>(
               &_AnchorGeneratorOld_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AnchorGeneratorOld* other);
  friend void swap(AnchorGeneratorOld& a, AnchorGeneratorOld& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGeneratorOld* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGeneratorOld* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGeneratorOld& from);
  void MergeFrom(const AnchorGeneratorOld& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGeneratorOld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float bev_range = 2;
  int bev_range_size() const;
  void clear_bev_range();
  static const int kBevRangeFieldNumber = 2;
  float bev_range(int index) const;
  void set_bev_range(int index, float value);
  void add_bev_range(float value);
  const ::google::protobuf::RepeatedField< float >&
      bev_range() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_bev_range();

  // repeated float anchor_sizes = 4;
  int anchor_sizes_size() const;
  void clear_anchor_sizes();
  static const int kAnchorSizesFieldNumber = 4;
  float anchor_sizes(int index) const;
  void set_anchor_sizes(int index, float value);
  void add_anchor_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      anchor_sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_anchor_sizes();

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // float anchor_center_z = 3;
  void clear_anchor_center_z();
  static const int kAnchorCenterZFieldNumber = 3;
  float anchor_center_z() const;
  void set_anchor_center_z(float value);

  // float matched_threshold = 5;
  void clear_matched_threshold();
  static const int kMatchedThresholdFieldNumber = 5;
  float matched_threshold() const;
  void set_matched_threshold(float value);

  // float unmatched_threshold = 6;
  void clear_unmatched_threshold();
  static const int kUnmatchedThresholdFieldNumber = 6;
  float unmatched_threshold() const;
  void set_unmatched_threshold(float value);

  // @@protoc_insertion_point(class_scope:second.protos.AnchorGeneratorOld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > bev_range_;
  mutable int _bev_range_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > anchor_sizes_;
  mutable int _anchor_sizes_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  float anchor_center_z_;
  float matched_threshold_;
  float unmatched_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnchorGeneratorStride : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGeneratorStride) */ {
 public:
  AnchorGeneratorStride();
  virtual ~AnchorGeneratorStride();

  AnchorGeneratorStride(const AnchorGeneratorStride& from);

  inline AnchorGeneratorStride& operator=(const AnchorGeneratorStride& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGeneratorStride(AnchorGeneratorStride&& from) noexcept
    : AnchorGeneratorStride() {
    *this = ::std::move(from);
  }

  inline AnchorGeneratorStride& operator=(AnchorGeneratorStride&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGeneratorStride& default_instance();

  static inline const AnchorGeneratorStride* internal_default_instance() {
    return reinterpret_cast<const AnchorGeneratorStride*>(
               &_AnchorGeneratorStride_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AnchorGeneratorStride* other);
  friend void swap(AnchorGeneratorStride& a, AnchorGeneratorStride& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGeneratorStride* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGeneratorStride* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGeneratorStride& from);
  void MergeFrom(const AnchorGeneratorStride& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGeneratorStride* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float sizes = 2;
  int sizes_size() const;
  void clear_sizes();
  static const int kSizesFieldNumber = 2;
  float sizes(int index) const;
  void set_sizes(int index, float value);
  void add_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_sizes();

  // repeated float strides = 3;
  int strides_size() const;
  void clear_strides();
  static const int kStridesFieldNumber = 3;
  float strides(int index) const;
  void set_strides(int index, float value);
  void add_strides(float value);
  const ::google::protobuf::RepeatedField< float >&
      strides() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_strides();

  // repeated float offsets = 4;
  int offsets_size() const;
  void clear_offsets();
  static const int kOffsetsFieldNumber = 4;
  float offsets(int index) const;
  void set_offsets(int index, float value);
  void add_offsets(float value);
  const ::google::protobuf::RepeatedField< float >&
      offsets() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_offsets();

  // repeated float rotations = 5;
  int rotations_size() const;
  void clear_rotations();
  static const int kRotationsFieldNumber = 5;
  float rotations(int index) const;
  void set_rotations(int index, float value);
  void add_rotations(float value);
  const ::google::protobuf::RepeatedField< float >&
      rotations() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_rotations();

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // float matched_threshold = 6;
  void clear_matched_threshold();
  static const int kMatchedThresholdFieldNumber = 6;
  float matched_threshold() const;
  void set_matched_threshold(float value);

  // float unmatched_threshold = 7;
  void clear_unmatched_threshold();
  static const int kUnmatchedThresholdFieldNumber = 7;
  float unmatched_threshold() const;
  void set_unmatched_threshold(float value);

  // @@protoc_insertion_point(class_scope:second.protos.AnchorGeneratorStride)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > sizes_;
  mutable int _sizes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > strides_;
  mutable int _strides_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > offsets_;
  mutable int _offsets_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > rotations_;
  mutable int _rotations_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  float matched_threshold_;
  float unmatched_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnchorGeneratorRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGeneratorRange) */ {
 public:
  AnchorGeneratorRange();
  virtual ~AnchorGeneratorRange();

  AnchorGeneratorRange(const AnchorGeneratorRange& from);

  inline AnchorGeneratorRange& operator=(const AnchorGeneratorRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGeneratorRange(AnchorGeneratorRange&& from) noexcept
    : AnchorGeneratorRange() {
    *this = ::std::move(from);
  }

  inline AnchorGeneratorRange& operator=(AnchorGeneratorRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGeneratorRange& default_instance();

  static inline const AnchorGeneratorRange* internal_default_instance() {
    return reinterpret_cast<const AnchorGeneratorRange*>(
               &_AnchorGeneratorRange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AnchorGeneratorRange* other);
  friend void swap(AnchorGeneratorRange& a, AnchorGeneratorRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGeneratorRange* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGeneratorRange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGeneratorRange& from);
  void MergeFrom(const AnchorGeneratorRange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGeneratorRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float sizes = 2;
  int sizes_size() const;
  void clear_sizes();
  static const int kSizesFieldNumber = 2;
  float sizes(int index) const;
  void set_sizes(int index, float value);
  void add_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_sizes();

  // repeated float anchor_ranges = 3;
  int anchor_ranges_size() const;
  void clear_anchor_ranges();
  static const int kAnchorRangesFieldNumber = 3;
  float anchor_ranges(int index) const;
  void set_anchor_ranges(int index, float value);
  void add_anchor_ranges(float value);
  const ::google::protobuf::RepeatedField< float >&
      anchor_ranges() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_anchor_ranges();

  // repeated float rotations = 4;
  int rotations_size() const;
  void clear_rotations();
  static const int kRotationsFieldNumber = 4;
  float rotations(int index) const;
  void set_rotations(int index, float value);
  void add_rotations(float value);
  const ::google::protobuf::RepeatedField< float >&
      rotations() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_rotations();

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // float matched_threshold = 5;
  void clear_matched_threshold();
  static const int kMatchedThresholdFieldNumber = 5;
  float matched_threshold() const;
  void set_matched_threshold(float value);

  // float unmatched_threshold = 6;
  void clear_unmatched_threshold();
  static const int kUnmatchedThresholdFieldNumber = 6;
  float unmatched_threshold() const;
  void set_unmatched_threshold(float value);

  // @@protoc_insertion_point(class_scope:second.protos.AnchorGeneratorRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > sizes_;
  mutable int _sizes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > anchor_ranges_;
  mutable int _anchor_ranges_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > rotations_;
  mutable int _rotations_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  float matched_threshold_;
  float unmatched_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnchorGeneratorCollection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGeneratorCollection) */ {
 public:
  AnchorGeneratorCollection();
  virtual ~AnchorGeneratorCollection();

  AnchorGeneratorCollection(const AnchorGeneratorCollection& from);

  inline AnchorGeneratorCollection& operator=(const AnchorGeneratorCollection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGeneratorCollection(AnchorGeneratorCollection&& from) noexcept
    : AnchorGeneratorCollection() {
    *this = ::std::move(from);
  }

  inline AnchorGeneratorCollection& operator=(AnchorGeneratorCollection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGeneratorCollection& default_instance();

  enum AnchorGeneratorCase {
    kAnchorGeneratorStride = 1,
    kAnchorGeneratorRange = 2,
    kAnchorGeneratorOld = 3,
    ANCHOR_GENERATOR_NOT_SET = 0,
  };

  static inline const AnchorGeneratorCollection* internal_default_instance() {
    return reinterpret_cast<const AnchorGeneratorCollection*>(
               &_AnchorGeneratorCollection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AnchorGeneratorCollection* other);
  friend void swap(AnchorGeneratorCollection& a, AnchorGeneratorCollection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGeneratorCollection* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGeneratorCollection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGeneratorCollection& from);
  void MergeFrom(const AnchorGeneratorCollection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGeneratorCollection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
  bool has_anchor_generator_stride() const;
  void clear_anchor_generator_stride();
  static const int kAnchorGeneratorStrideFieldNumber = 1;
  const ::second::protos::AnchorGeneratorStride& anchor_generator_stride() const;
  ::second::protos::AnchorGeneratorStride* mutable_anchor_generator_stride();
  ::second::protos::AnchorGeneratorStride* release_anchor_generator_stride();
  void set_allocated_anchor_generator_stride(::second::protos::AnchorGeneratorStride* anchor_generator_stride);

  // .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
  bool has_anchor_generator_range() const;
  void clear_anchor_generator_range();
  static const int kAnchorGeneratorRangeFieldNumber = 2;
  const ::second::protos::AnchorGeneratorRange& anchor_generator_range() const;
  ::second::protos::AnchorGeneratorRange* mutable_anchor_generator_range();
  ::second::protos::AnchorGeneratorRange* release_anchor_generator_range();
  void set_allocated_anchor_generator_range(::second::protos::AnchorGeneratorRange* anchor_generator_range);

  // .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
  bool has_anchor_generator_old() const;
  void clear_anchor_generator_old();
  static const int kAnchorGeneratorOldFieldNumber = 3;
  const ::second::protos::AnchorGeneratorOld& anchor_generator_old() const;
  ::second::protos::AnchorGeneratorOld* mutable_anchor_generator_old();
  ::second::protos::AnchorGeneratorOld* release_anchor_generator_old();
  void set_allocated_anchor_generator_old(::second::protos::AnchorGeneratorOld* anchor_generator_old);

  AnchorGeneratorCase anchor_generator_case() const;
  // @@protoc_insertion_point(class_scope:second.protos.AnchorGeneratorCollection)
 private:
  void set_has_anchor_generator_stride();
  void set_has_anchor_generator_range();
  void set_has_anchor_generator_old();

  inline bool has_anchor_generator() const;
  void clear_anchor_generator();
  inline void clear_has_anchor_generator();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AnchorGeneratorUnion {
    AnchorGeneratorUnion() {}
    ::second::protos::AnchorGeneratorStride* anchor_generator_stride_;
    ::second::protos::AnchorGeneratorRange* anchor_generator_range_;
    ::second::protos::AnchorGeneratorOld* anchor_generator_old_;
  } anchor_generator_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnchorGenerator_depara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGenerator_depara) */ {
 public:
  AnchorGenerator_depara();
  virtual ~AnchorGenerator_depara();

  AnchorGenerator_depara(const AnchorGenerator_depara& from);

  inline AnchorGenerator_depara& operator=(const AnchorGenerator_depara& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGenerator_depara(AnchorGenerator_depara&& from) noexcept
    : AnchorGenerator_depara() {
    *this = ::std::move(from);
  }

  inline AnchorGenerator_depara& operator=(AnchorGenerator_depara&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGenerator_depara& default_instance();

  static inline const AnchorGenerator_depara* internal_default_instance() {
    return reinterpret_cast<const AnchorGenerator_depara*>(
               &_AnchorGenerator_depara_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AnchorGenerator_depara* other);
  friend void swap(AnchorGenerator_depara& a, AnchorGenerator_depara& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGenerator_depara* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGenerator_depara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGenerator_depara& from);
  void MergeFrom(const AnchorGenerator_depara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGenerator_depara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float sizes = 2;
  int sizes_size() const;
  void clear_sizes();
  static const int kSizesFieldNumber = 2;
  float sizes(int index) const;
  void set_sizes(int index, float value);
  void add_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_sizes();

  // repeated float strides = 3;
  int strides_size() const;
  void clear_strides();
  static const int kStridesFieldNumber = 3;
  float strides(int index) const;
  void set_strides(int index, float value);
  void add_strides(float value);
  const ::google::protobuf::RepeatedField< float >&
      strides() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_strides();

  // repeated float offsets = 4;
  int offsets_size() const;
  void clear_offsets();
  static const int kOffsetsFieldNumber = 4;
  float offsets(int index) const;
  void set_offsets(int index, float value);
  void add_offsets(float value);
  const ::google::protobuf::RepeatedField< float >&
      offsets() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_offsets();

  // repeated float rotations = 5;
  int rotations_size() const;
  void clear_rotations();
  static const int kRotationsFieldNumber = 5;
  float rotations(int index) const;
  void set_rotations(int index, float value);
  void add_rotations(float value);
  const ::google::protobuf::RepeatedField< float >&
      rotations() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_rotations();

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // float matched_threshold = 6;
  void clear_matched_threshold();
  static const int kMatchedThresholdFieldNumber = 6;
  float matched_threshold() const;
  void set_matched_threshold(float value);

  // float unmatched_threshold = 7;
  void clear_unmatched_threshold();
  static const int kUnmatchedThresholdFieldNumber = 7;
  float unmatched_threshold() const;
  void set_unmatched_threshold(float value);

  // @@protoc_insertion_point(class_scope:second.protos.AnchorGenerator_depara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > sizes_;
  mutable int _sizes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > strides_;
  mutable int _strides_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > offsets_;
  mutable int _offsets_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > rotations_;
  mutable int _rotations_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  float matched_threshold_;
  float unmatched_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnchorGeneratorV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.AnchorGeneratorV1) */ {
 public:
  AnchorGeneratorV1();
  virtual ~AnchorGeneratorV1();

  AnchorGeneratorV1(const AnchorGeneratorV1& from);

  inline AnchorGeneratorV1& operator=(const AnchorGeneratorV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnchorGeneratorV1(AnchorGeneratorV1&& from) noexcept
    : AnchorGeneratorV1() {
    *this = ::std::move(from);
  }

  inline AnchorGeneratorV1& operator=(AnchorGeneratorV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnchorGeneratorV1& default_instance();

  static inline const AnchorGeneratorV1* internal_default_instance() {
    return reinterpret_cast<const AnchorGeneratorV1*>(
               &_AnchorGeneratorV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AnchorGeneratorV1* other);
  friend void swap(AnchorGeneratorV1& a, AnchorGeneratorV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnchorGeneratorV1* New() const PROTOBUF_FINAL { return New(NULL); }

  AnchorGeneratorV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnchorGeneratorV1& from);
  void MergeFrom(const AnchorGeneratorV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnchorGeneratorV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float anchor_sizes = 2;
  int anchor_sizes_size() const;
  void clear_anchor_sizes();
  static const int kAnchorSizesFieldNumber = 2;
  float anchor_sizes(int index) const;
  void set_anchor_sizes(int index, float value);
  void add_anchor_sizes(float value);
  const ::google::protobuf::RepeatedField< float >&
      anchor_sizes() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_anchor_sizes();

  // float anchor_center_z = 1;
  void clear_anchor_center_z();
  static const int kAnchorCenterZFieldNumber = 1;
  float anchor_center_z() const;
  void set_anchor_center_z(float value);

  // float matched_threshold = 3;
  void clear_matched_threshold();
  static const int kMatchedThresholdFieldNumber = 3;
  float matched_threshold() const;
  void set_matched_threshold(float value);

  // float unmatched_threshold = 4;
  void clear_unmatched_threshold();
  static const int kUnmatchedThresholdFieldNumber = 4;
  float unmatched_threshold() const;
  void set_unmatched_threshold(float value);

  // @@protoc_insertion_point(class_scope:second.protos.AnchorGeneratorV1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > anchor_sizes_;
  mutable int _anchor_sizes_cached_byte_size_;
  float anchor_center_z_;
  float matched_threshold_;
  float unmatched_threshold_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2fanchors_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnchorGeneratorOld

// string class_name = 1;
inline void AnchorGeneratorOld::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnchorGeneratorOld::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.class_name)
  return class_name_.GetNoArena();
}
inline void AnchorGeneratorOld::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.class_name)
}
#if LANG_CXX11
inline void AnchorGeneratorOld::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorOld.class_name)
}
#endif
inline void AnchorGeneratorOld::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorOld.class_name)
}
inline void AnchorGeneratorOld::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorOld.class_name)
}
inline ::std::string* AnchorGeneratorOld::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorOld.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnchorGeneratorOld::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorOld.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnchorGeneratorOld::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorOld.class_name)
}

// repeated float bev_range = 2;
inline int AnchorGeneratorOld::bev_range_size() const {
  return bev_range_.size();
}
inline void AnchorGeneratorOld::clear_bev_range() {
  bev_range_.Clear();
}
inline float AnchorGeneratorOld::bev_range(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.bev_range)
  return bev_range_.Get(index);
}
inline void AnchorGeneratorOld::set_bev_range(int index, float value) {
  bev_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.bev_range)
}
inline void AnchorGeneratorOld::add_bev_range(float value) {
  bev_range_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorOld.bev_range)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorOld::bev_range() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorOld.bev_range)
  return bev_range_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorOld::mutable_bev_range() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorOld.bev_range)
  return &bev_range_;
}

// float anchor_center_z = 3;
inline void AnchorGeneratorOld::clear_anchor_center_z() {
  anchor_center_z_ = 0;
}
inline float AnchorGeneratorOld::anchor_center_z() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.anchor_center_z)
  return anchor_center_z_;
}
inline void AnchorGeneratorOld::set_anchor_center_z(float value) {
  
  anchor_center_z_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.anchor_center_z)
}

// repeated float anchor_sizes = 4;
inline int AnchorGeneratorOld::anchor_sizes_size() const {
  return anchor_sizes_.size();
}
inline void AnchorGeneratorOld::clear_anchor_sizes() {
  anchor_sizes_.Clear();
}
inline float AnchorGeneratorOld::anchor_sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.anchor_sizes)
  return anchor_sizes_.Get(index);
}
inline void AnchorGeneratorOld::set_anchor_sizes(int index, float value) {
  anchor_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.anchor_sizes)
}
inline void AnchorGeneratorOld::add_anchor_sizes(float value) {
  anchor_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorOld.anchor_sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorOld::anchor_sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorOld.anchor_sizes)
  return anchor_sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorOld::mutable_anchor_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorOld.anchor_sizes)
  return &anchor_sizes_;
}

// float matched_threshold = 5;
inline void AnchorGeneratorOld::clear_matched_threshold() {
  matched_threshold_ = 0;
}
inline float AnchorGeneratorOld::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.matched_threshold)
  return matched_threshold_;
}
inline void AnchorGeneratorOld::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.matched_threshold)
}

// float unmatched_threshold = 6;
inline void AnchorGeneratorOld::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
inline float AnchorGeneratorOld::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.unmatched_threshold)
  return unmatched_threshold_;
}
inline void AnchorGeneratorOld::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.unmatched_threshold)
}

// -------------------------------------------------------------------

// AnchorGeneratorStride

// string class_name = 1;
inline void AnchorGeneratorStride::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnchorGeneratorStride::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.class_name)
  return class_name_.GetNoArena();
}
inline void AnchorGeneratorStride::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.class_name)
}
#if LANG_CXX11
inline void AnchorGeneratorStride::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorStride.class_name)
}
#endif
inline void AnchorGeneratorStride::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorStride.class_name)
}
inline void AnchorGeneratorStride::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorStride.class_name)
}
inline ::std::string* AnchorGeneratorStride::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorStride.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnchorGeneratorStride::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorStride.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnchorGeneratorStride::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorStride.class_name)
}

// repeated float sizes = 2;
inline int AnchorGeneratorStride::sizes_size() const {
  return sizes_.size();
}
inline void AnchorGeneratorStride::clear_sizes() {
  sizes_.Clear();
}
inline float AnchorGeneratorStride::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.sizes)
  return sizes_.Get(index);
}
inline void AnchorGeneratorStride::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.sizes)
}
inline void AnchorGeneratorStride::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.sizes)
  return sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.sizes)
  return &sizes_;
}

// repeated float strides = 3;
inline int AnchorGeneratorStride::strides_size() const {
  return strides_.size();
}
inline void AnchorGeneratorStride::clear_strides() {
  strides_.Clear();
}
inline float AnchorGeneratorStride::strides(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.strides)
  return strides_.Get(index);
}
inline void AnchorGeneratorStride::set_strides(int index, float value) {
  strides_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.strides)
}
inline void AnchorGeneratorStride::add_strides(float value) {
  strides_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.strides)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::strides() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.strides)
  return strides_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_strides() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.strides)
  return &strides_;
}

// repeated float offsets = 4;
inline int AnchorGeneratorStride::offsets_size() const {
  return offsets_.size();
}
inline void AnchorGeneratorStride::clear_offsets() {
  offsets_.Clear();
}
inline float AnchorGeneratorStride::offsets(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.offsets)
  return offsets_.Get(index);
}
inline void AnchorGeneratorStride::set_offsets(int index, float value) {
  offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.offsets)
}
inline void AnchorGeneratorStride::add_offsets(float value) {
  offsets_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.offsets)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::offsets() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.offsets)
  return offsets_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.offsets)
  return &offsets_;
}

// repeated float rotations = 5;
inline int AnchorGeneratorStride::rotations_size() const {
  return rotations_.size();
}
inline void AnchorGeneratorStride::clear_rotations() {
  rotations_.Clear();
}
inline float AnchorGeneratorStride::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.rotations)
  return rotations_.Get(index);
}
inline void AnchorGeneratorStride::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.rotations)
}
inline void AnchorGeneratorStride::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.rotations)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.rotations)
  return rotations_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.rotations)
  return &rotations_;
}

// float matched_threshold = 6;
inline void AnchorGeneratorStride::clear_matched_threshold() {
  matched_threshold_ = 0;
}
inline float AnchorGeneratorStride::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.matched_threshold)
  return matched_threshold_;
}
inline void AnchorGeneratorStride::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.matched_threshold)
}

// float unmatched_threshold = 7;
inline void AnchorGeneratorStride::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
inline float AnchorGeneratorStride::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.unmatched_threshold)
  return unmatched_threshold_;
}
inline void AnchorGeneratorStride::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.unmatched_threshold)
}

// -------------------------------------------------------------------

// AnchorGeneratorRange

// string class_name = 1;
inline void AnchorGeneratorRange::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnchorGeneratorRange::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.class_name)
  return class_name_.GetNoArena();
}
inline void AnchorGeneratorRange::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.class_name)
}
#if LANG_CXX11
inline void AnchorGeneratorRange::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorRange.class_name)
}
#endif
inline void AnchorGeneratorRange::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorRange.class_name)
}
inline void AnchorGeneratorRange::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorRange.class_name)
}
inline ::std::string* AnchorGeneratorRange::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorRange.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnchorGeneratorRange::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorRange.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnchorGeneratorRange::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorRange.class_name)
}

// repeated float sizes = 2;
inline int AnchorGeneratorRange::sizes_size() const {
  return sizes_.size();
}
inline void AnchorGeneratorRange::clear_sizes() {
  sizes_.Clear();
}
inline float AnchorGeneratorRange::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.sizes)
  return sizes_.Get(index);
}
inline void AnchorGeneratorRange::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.sizes)
}
inline void AnchorGeneratorRange::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.sizes)
  return sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.sizes)
  return &sizes_;
}

// repeated float anchor_ranges = 3;
inline int AnchorGeneratorRange::anchor_ranges_size() const {
  return anchor_ranges_.size();
}
inline void AnchorGeneratorRange::clear_anchor_ranges() {
  anchor_ranges_.Clear();
}
inline float AnchorGeneratorRange::anchor_ranges(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.anchor_ranges)
  return anchor_ranges_.Get(index);
}
inline void AnchorGeneratorRange::set_anchor_ranges(int index, float value) {
  anchor_ranges_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.anchor_ranges)
}
inline void AnchorGeneratorRange::add_anchor_ranges(float value) {
  anchor_ranges_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.anchor_ranges)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::anchor_ranges() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.anchor_ranges)
  return anchor_ranges_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_anchor_ranges() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.anchor_ranges)
  return &anchor_ranges_;
}

// repeated float rotations = 4;
inline int AnchorGeneratorRange::rotations_size() const {
  return rotations_.size();
}
inline void AnchorGeneratorRange::clear_rotations() {
  rotations_.Clear();
}
inline float AnchorGeneratorRange::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.rotations)
  return rotations_.Get(index);
}
inline void AnchorGeneratorRange::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.rotations)
}
inline void AnchorGeneratorRange::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.rotations)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.rotations)
  return rotations_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.rotations)
  return &rotations_;
}

// float matched_threshold = 5;
inline void AnchorGeneratorRange::clear_matched_threshold() {
  matched_threshold_ = 0;
}
inline float AnchorGeneratorRange::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.matched_threshold)
  return matched_threshold_;
}
inline void AnchorGeneratorRange::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.matched_threshold)
}

// float unmatched_threshold = 6;
inline void AnchorGeneratorRange::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
inline float AnchorGeneratorRange::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.unmatched_threshold)
  return unmatched_threshold_;
}
inline void AnchorGeneratorRange::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.unmatched_threshold)
}

// -------------------------------------------------------------------

// AnchorGeneratorCollection

// .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
inline bool AnchorGeneratorCollection::has_anchor_generator_stride() const {
  return anchor_generator_case() == kAnchorGeneratorStride;
}
inline void AnchorGeneratorCollection::set_has_anchor_generator_stride() {
  _oneof_case_[0] = kAnchorGeneratorStride;
}
inline void AnchorGeneratorCollection::clear_anchor_generator_stride() {
  if (has_anchor_generator_stride()) {
    delete anchor_generator_.anchor_generator_stride_;
    clear_has_anchor_generator();
  }
}
inline  const ::second::protos::AnchorGeneratorStride& AnchorGeneratorCollection::anchor_generator_stride() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  return has_anchor_generator_stride()
      ? *anchor_generator_.anchor_generator_stride_
      : ::second::protos::AnchorGeneratorStride::default_instance();
}
inline ::second::protos::AnchorGeneratorStride* AnchorGeneratorCollection::mutable_anchor_generator_stride() {
  if (!has_anchor_generator_stride()) {
    clear_anchor_generator();
    set_has_anchor_generator_stride();
    anchor_generator_.anchor_generator_stride_ = new ::second::protos::AnchorGeneratorStride;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  return anchor_generator_.anchor_generator_stride_;
}
inline ::second::protos::AnchorGeneratorStride* AnchorGeneratorCollection::release_anchor_generator_stride() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  if (has_anchor_generator_stride()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorStride* temp = anchor_generator_.anchor_generator_stride_;
    anchor_generator_.anchor_generator_stride_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGeneratorCollection::set_allocated_anchor_generator_stride(::second::protos::AnchorGeneratorStride* anchor_generator_stride) {
  clear_anchor_generator();
  if (anchor_generator_stride) {
    set_has_anchor_generator_stride();
    anchor_generator_.anchor_generator_stride_ = anchor_generator_stride;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
}

// .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
inline bool AnchorGeneratorCollection::has_anchor_generator_range() const {
  return anchor_generator_case() == kAnchorGeneratorRange;
}
inline void AnchorGeneratorCollection::set_has_anchor_generator_range() {
  _oneof_case_[0] = kAnchorGeneratorRange;
}
inline void AnchorGeneratorCollection::clear_anchor_generator_range() {
  if (has_anchor_generator_range()) {
    delete anchor_generator_.anchor_generator_range_;
    clear_has_anchor_generator();
  }
}
inline  const ::second::protos::AnchorGeneratorRange& AnchorGeneratorCollection::anchor_generator_range() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  return has_anchor_generator_range()
      ? *anchor_generator_.anchor_generator_range_
      : ::second::protos::AnchorGeneratorRange::default_instance();
}
inline ::second::protos::AnchorGeneratorRange* AnchorGeneratorCollection::mutable_anchor_generator_range() {
  if (!has_anchor_generator_range()) {
    clear_anchor_generator();
    set_has_anchor_generator_range();
    anchor_generator_.anchor_generator_range_ = new ::second::protos::AnchorGeneratorRange;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  return anchor_generator_.anchor_generator_range_;
}
inline ::second::protos::AnchorGeneratorRange* AnchorGeneratorCollection::release_anchor_generator_range() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  if (has_anchor_generator_range()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorRange* temp = anchor_generator_.anchor_generator_range_;
    anchor_generator_.anchor_generator_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGeneratorCollection::set_allocated_anchor_generator_range(::second::protos::AnchorGeneratorRange* anchor_generator_range) {
  clear_anchor_generator();
  if (anchor_generator_range) {
    set_has_anchor_generator_range();
    anchor_generator_.anchor_generator_range_ = anchor_generator_range;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_range)
}

// .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
inline bool AnchorGeneratorCollection::has_anchor_generator_old() const {
  return anchor_generator_case() == kAnchorGeneratorOld;
}
inline void AnchorGeneratorCollection::set_has_anchor_generator_old() {
  _oneof_case_[0] = kAnchorGeneratorOld;
}
inline void AnchorGeneratorCollection::clear_anchor_generator_old() {
  if (has_anchor_generator_old()) {
    delete anchor_generator_.anchor_generator_old_;
    clear_has_anchor_generator();
  }
}
inline  const ::second::protos::AnchorGeneratorOld& AnchorGeneratorCollection::anchor_generator_old() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  return has_anchor_generator_old()
      ? *anchor_generator_.anchor_generator_old_
      : ::second::protos::AnchorGeneratorOld::default_instance();
}
inline ::second::protos::AnchorGeneratorOld* AnchorGeneratorCollection::mutable_anchor_generator_old() {
  if (!has_anchor_generator_old()) {
    clear_anchor_generator();
    set_has_anchor_generator_old();
    anchor_generator_.anchor_generator_old_ = new ::second::protos::AnchorGeneratorOld;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  return anchor_generator_.anchor_generator_old_;
}
inline ::second::protos::AnchorGeneratorOld* AnchorGeneratorCollection::release_anchor_generator_old() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  if (has_anchor_generator_old()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorOld* temp = anchor_generator_.anchor_generator_old_;
    anchor_generator_.anchor_generator_old_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AnchorGeneratorCollection::set_allocated_anchor_generator_old(::second::protos::AnchorGeneratorOld* anchor_generator_old) {
  clear_anchor_generator();
  if (anchor_generator_old) {
    set_has_anchor_generator_old();
    anchor_generator_.anchor_generator_old_ = anchor_generator_old;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_old)
}

inline bool AnchorGeneratorCollection::has_anchor_generator() const {
  return anchor_generator_case() != ANCHOR_GENERATOR_NOT_SET;
}
inline void AnchorGeneratorCollection::clear_has_anchor_generator() {
  _oneof_case_[0] = ANCHOR_GENERATOR_NOT_SET;
}
inline AnchorGeneratorCollection::AnchorGeneratorCase AnchorGeneratorCollection::anchor_generator_case() const {
  return AnchorGeneratorCollection::AnchorGeneratorCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AnchorGenerator_depara

// string class_name = 1;
inline void AnchorGenerator_depara::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnchorGenerator_depara::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.class_name)
  return class_name_.GetNoArena();
}
inline void AnchorGenerator_depara::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.class_name)
}
#if LANG_CXX11
inline void AnchorGenerator_depara::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGenerator_depara.class_name)
}
#endif
inline void AnchorGenerator_depara::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGenerator_depara.class_name)
}
inline void AnchorGenerator_depara::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGenerator_depara.class_name)
}
inline ::std::string* AnchorGenerator_depara::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGenerator_depara.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnchorGenerator_depara::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGenerator_depara.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnchorGenerator_depara::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGenerator_depara.class_name)
}

// repeated float sizes = 2;
inline int AnchorGenerator_depara::sizes_size() const {
  return sizes_.size();
}
inline void AnchorGenerator_depara::clear_sizes() {
  sizes_.Clear();
}
inline float AnchorGenerator_depara::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.sizes)
  return sizes_.Get(index);
}
inline void AnchorGenerator_depara::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.sizes)
}
inline void AnchorGenerator_depara::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.sizes)
  return sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.sizes)
  return &sizes_;
}

// repeated float strides = 3;
inline int AnchorGenerator_depara::strides_size() const {
  return strides_.size();
}
inline void AnchorGenerator_depara::clear_strides() {
  strides_.Clear();
}
inline float AnchorGenerator_depara::strides(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.strides)
  return strides_.Get(index);
}
inline void AnchorGenerator_depara::set_strides(int index, float value) {
  strides_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.strides)
}
inline void AnchorGenerator_depara::add_strides(float value) {
  strides_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.strides)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::strides() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.strides)
  return strides_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_strides() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.strides)
  return &strides_;
}

// repeated float offsets = 4;
inline int AnchorGenerator_depara::offsets_size() const {
  return offsets_.size();
}
inline void AnchorGenerator_depara::clear_offsets() {
  offsets_.Clear();
}
inline float AnchorGenerator_depara::offsets(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.offsets)
  return offsets_.Get(index);
}
inline void AnchorGenerator_depara::set_offsets(int index, float value) {
  offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.offsets)
}
inline void AnchorGenerator_depara::add_offsets(float value) {
  offsets_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.offsets)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::offsets() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.offsets)
  return offsets_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.offsets)
  return &offsets_;
}

// repeated float rotations = 5;
inline int AnchorGenerator_depara::rotations_size() const {
  return rotations_.size();
}
inline void AnchorGenerator_depara::clear_rotations() {
  rotations_.Clear();
}
inline float AnchorGenerator_depara::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.rotations)
  return rotations_.Get(index);
}
inline void AnchorGenerator_depara::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.rotations)
}
inline void AnchorGenerator_depara::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.rotations)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.rotations)
  return rotations_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.rotations)
  return &rotations_;
}

// float matched_threshold = 6;
inline void AnchorGenerator_depara::clear_matched_threshold() {
  matched_threshold_ = 0;
}
inline float AnchorGenerator_depara::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.matched_threshold)
  return matched_threshold_;
}
inline void AnchorGenerator_depara::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.matched_threshold)
}

// float unmatched_threshold = 7;
inline void AnchorGenerator_depara::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
inline float AnchorGenerator_depara::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.unmatched_threshold)
  return unmatched_threshold_;
}
inline void AnchorGenerator_depara::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.unmatched_threshold)
}

// -------------------------------------------------------------------

// AnchorGeneratorV1

// float anchor_center_z = 1;
inline void AnchorGeneratorV1::clear_anchor_center_z() {
  anchor_center_z_ = 0;
}
inline float AnchorGeneratorV1::anchor_center_z() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.anchor_center_z)
  return anchor_center_z_;
}
inline void AnchorGeneratorV1::set_anchor_center_z(float value) {
  
  anchor_center_z_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.anchor_center_z)
}

// repeated float anchor_sizes = 2;
inline int AnchorGeneratorV1::anchor_sizes_size() const {
  return anchor_sizes_.size();
}
inline void AnchorGeneratorV1::clear_anchor_sizes() {
  anchor_sizes_.Clear();
}
inline float AnchorGeneratorV1::anchor_sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.anchor_sizes)
  return anchor_sizes_.Get(index);
}
inline void AnchorGeneratorV1::set_anchor_sizes(int index, float value) {
  anchor_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.anchor_sizes)
}
inline void AnchorGeneratorV1::add_anchor_sizes(float value) {
  anchor_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorV1.anchor_sizes)
}
inline const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorV1::anchor_sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorV1.anchor_sizes)
  return anchor_sizes_;
}
inline ::google::protobuf::RepeatedField< float >*
AnchorGeneratorV1::mutable_anchor_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorV1.anchor_sizes)
  return &anchor_sizes_;
}

// float matched_threshold = 3;
inline void AnchorGeneratorV1::clear_matched_threshold() {
  matched_threshold_ = 0;
}
inline float AnchorGeneratorV1::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.matched_threshold)
  return matched_threshold_;
}
inline void AnchorGeneratorV1::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.matched_threshold)
}

// float unmatched_threshold = 4;
inline void AnchorGeneratorV1::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
inline float AnchorGeneratorV1::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.unmatched_threshold)
  return unmatched_threshold_;
}
inline void AnchorGeneratorV1::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.unmatched_threshold)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_second_2fprotos_2fanchors_2eproto__INCLUDED
