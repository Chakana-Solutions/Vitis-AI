// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/sampler.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/sampler.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class Group_NameToMaxNumEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Group::Group_NameToMaxNumEntry>
     _instance;
} _Group_NameToMaxNumEntry_default_instance_;
class GroupDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Group>
     _instance;
} _Group_default_instance_;
class SamplerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Sampler>
     _instance;
} _Sampler_default_instance_;

namespace protobuf_second_2fprotos_2fsampler_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, name_to_max_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, database_info_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, sample_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, database_prep_steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, global_random_rotation_range_per_object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sampler, rate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Group)},
  { 6, -1, sizeof(Sampler)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Group_NameToMaxNumEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Sampler_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/sampler.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = Group::Group_NameToMaxNumEntry::CreateReflection(file_level_metadata[0].descriptor, _Group_NameToMaxNumEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::second::protos::protobuf_second_2fprotos_2fpreprocess_2eproto::InitDefaults();
  _Group_NameToMaxNumEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Group_NameToMaxNumEntry_default_instance_);_Group_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Group_default_instance_);_Sampler_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Sampler_default_instance_);_Group_NameToMaxNumEntry_default_instance_._instance.get_mutable()->set_default_instance(_Group_NameToMaxNumEntry_default_instance_._instance.get_mutable());
  _Group_NameToMaxNumEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033second/protos/sampler.proto\022\rsecond.pr"
      "otos\032\036second/protos/preprocess.proto\"}\n\005"
      "Group\022\?\n\017name_to_max_num\030\001 \003(\0132&.second."
      "protos.Group.NameToMaxNumEntry\0323\n\021NameTo"
      "MaxNumEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:"
      "\0028\001\"\330\001\n\007Sampler\022\032\n\022database_info_path\030\001 "
      "\001(\t\022+\n\rsample_groups\030\002 \003(\0132\024.second.prot"
      "os.Group\022E\n\023database_prep_steps\030\003 \003(\0132(."
      "second.protos.DatabasePreprocessingStep\022"
      "/\n\'global_random_rotation_range_per_obje"
      "ct\030\004 \003(\002\022\014\n\004rate\030\005 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 430);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/sampler.proto", &protobuf_RegisterTypes);
  ::second::protos::protobuf_second_2fprotos_2fpreprocess_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2fsampler_2eproto


// ===================================================================

Group::Group_NameToMaxNumEntry::Group_NameToMaxNumEntry() {}
Group::Group_NameToMaxNumEntry::Group_NameToMaxNumEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Group::Group_NameToMaxNumEntry::GetMetadata() const {
  protobuf_second_2fprotos_2fsampler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fsampler_2eproto::file_level_metadata[0];
}
void Group::Group_NameToMaxNumEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Group::Group_NameToMaxNumEntry::MergeFrom(const Group_NameToMaxNumEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group::kNameToMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group::Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fsampler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Group)
}
Group::Group(const Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_to_max_num_.MergeFrom(from.name_to_max_num_);
  // @@protoc_insertion_point(copy_constructor:second.protos.Group)
}

void Group::SharedCtor() {
  _cached_size_ = 0;
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:second.protos.Group)
  SharedDtor();
}

void Group::SharedDtor() {
}

void Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group::descriptor() {
  protobuf_second_2fprotos_2fsampler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fsampler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Group& Group::default_instance() {
  protobuf_second_2fprotos_2fsampler_2eproto::InitDefaults();
  return *internal_default_instance();
}

Group* Group::New(::google::protobuf::Arena* arena) const {
  Group* n = new Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_to_max_num_.Clear();
  _internal_metadata_.Clear();
}

bool Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, uint32> name_to_max_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Group_NameToMaxNumEntry::Parser< ::google::protobuf::internal::MapField<
              Group_NameToMaxNumEntry,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&name_to_max_num_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.Group.NameToMaxNumEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Group)
  return false;
#undef DO_
}

void Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> name_to_max_num = 1;
  if (!this->name_to_max_num().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "second.protos.Group.NameToMaxNumEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->name_to_max_num().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->name_to_max_num().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->name_to_max_num().begin();
          it != this->name_to_max_num().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Group_NameToMaxNumEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_to_max_num_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Group_NameToMaxNumEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->name_to_max_num().begin();
          it != this->name_to_max_num().end(); ++it) {
        entry.reset(name_to_max_num_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Group)
}

::google::protobuf::uint8* Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> name_to_max_num = 1;
  if (!this->name_to_max_num().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "second.protos.Group.NameToMaxNumEntry.key");
      }
    };

    if (deterministic &&
        this->name_to_max_num().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->name_to_max_num().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->name_to_max_num().begin();
          it != this->name_to_max_num().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Group_NameToMaxNumEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_to_max_num_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Group_NameToMaxNumEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->name_to_max_num().begin();
          it != this->name_to_max_num().end(); ++it) {
        entry.reset(name_to_max_num_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> name_to_max_num = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_to_max_num_size());
  {
    ::google::protobuf::scoped_ptr<Group_NameToMaxNumEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->name_to_max_num().begin();
        it != this->name_to_max_num().end(); ++it) {
      entry.reset(name_to_max_num_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_to_max_num_.MergeFrom(from.name_to_max_num_);
}

void Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::Swap(Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group::InternalSwap(Group* other) {
  using std::swap;
  name_to_max_num_.Swap(&other->name_to_max_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Group::GetMetadata() const {
  protobuf_second_2fprotos_2fsampler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fsampler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Group

// map<string, uint32> name_to_max_num = 1;
int Group::name_to_max_num_size() const {
  return name_to_max_num_.size();
}
void Group::clear_name_to_max_num() {
  name_to_max_num_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
Group::name_to_max_num() const {
  // @@protoc_insertion_point(field_map:second.protos.Group.name_to_max_num)
  return name_to_max_num_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
Group::mutable_name_to_max_num() {
  // @@protoc_insertion_point(field_mutable_map:second.protos.Group.name_to_max_num)
  return name_to_max_num_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sampler::kDatabaseInfoPathFieldNumber;
const int Sampler::kSampleGroupsFieldNumber;
const int Sampler::kDatabasePrepStepsFieldNumber;
const int Sampler::kGlobalRandomRotationRangePerObjectFieldNumber;
const int Sampler::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sampler::Sampler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fsampler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Sampler)
}
Sampler::Sampler(const Sampler& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sample_groups_(from.sample_groups_),
      database_prep_steps_(from.database_prep_steps_),
      global_random_rotation_range_per_object_(from.global_random_rotation_range_per_object_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_info_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.database_info_path().size() > 0) {
    database_info_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_info_path_);
  }
  rate_ = from.rate_;
  // @@protoc_insertion_point(copy_constructor:second.protos.Sampler)
}

void Sampler::SharedCtor() {
  database_info_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rate_ = 0;
  _cached_size_ = 0;
}

Sampler::~Sampler() {
  // @@protoc_insertion_point(destructor:second.protos.Sampler)
  SharedDtor();
}

void Sampler::SharedDtor() {
  database_info_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Sampler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sampler::descriptor() {
  protobuf_second_2fprotos_2fsampler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fsampler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sampler& Sampler::default_instance() {
  protobuf_second_2fprotos_2fsampler_2eproto::InitDefaults();
  return *internal_default_instance();
}

Sampler* Sampler::New(::google::protobuf::Arena* arena) const {
  Sampler* n = new Sampler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Sampler::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Sampler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sample_groups_.Clear();
  database_prep_steps_.Clear();
  global_random_rotation_range_per_object_.Clear();
  database_info_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rate_ = 0;
  _internal_metadata_.Clear();
}

bool Sampler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Sampler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string database_info_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database_info_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database_info_path().data(), static_cast<int>(this->database_info_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.Sampler.database_info_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .second.protos.Group sample_groups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sample_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_database_prep_steps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float global_random_rotation_range_per_object = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_global_random_rotation_range_per_object())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_global_random_rotation_range_per_object())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Sampler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Sampler)
  return false;
#undef DO_
}

void Sampler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Sampler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database_info_path = 1;
  if (this->database_info_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_info_path().data(), static_cast<int>(this->database_info_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.Sampler.database_info_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->database_info_path(), output);
  }

  // repeated .second.protos.Group sample_groups = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sample_groups(static_cast<int>(i)), output);
  }

  // repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->database_prep_steps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->database_prep_steps(static_cast<int>(i)), output);
  }

  // repeated float global_random_rotation_range_per_object = 4;
  if (this->global_random_rotation_range_per_object_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _global_random_rotation_range_per_object_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->global_random_rotation_range_per_object().data(), this->global_random_rotation_range_per_object_size(), output);
  }

  // float rate = 5;
  if (this->rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Sampler)
}

::google::protobuf::uint8* Sampler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Sampler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string database_info_path = 1;
  if (this->database_info_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_info_path().data(), static_cast<int>(this->database_info_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.Sampler.database_info_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->database_info_path(), target);
  }

  // repeated .second.protos.Group sample_groups = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->sample_groups(static_cast<int>(i)), deterministic, target);
  }

  // repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->database_prep_steps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->database_prep_steps(static_cast<int>(i)), deterministic, target);
  }

  // repeated float global_random_rotation_range_per_object = 4;
  if (this->global_random_rotation_range_per_object_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _global_random_rotation_range_per_object_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->global_random_rotation_range_per_object_, target);
  }

  // float rate = 5;
  if (this->rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Sampler)
  return target;
}

size_t Sampler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Sampler)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .second.protos.Group sample_groups = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sample_groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sample_groups(static_cast<int>(i)));
    }
  }

  // repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->database_prep_steps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->database_prep_steps(static_cast<int>(i)));
    }
  }

  // repeated float global_random_rotation_range_per_object = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->global_random_rotation_range_per_object_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _global_random_rotation_range_per_object_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string database_info_path = 1;
  if (this->database_info_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database_info_path());
  }

  // float rate = 5;
  if (this->rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sampler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Sampler)
  GOOGLE_DCHECK_NE(&from, this);
  const Sampler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sampler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Sampler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Sampler)
    MergeFrom(*source);
  }
}

void Sampler::MergeFrom(const Sampler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Sampler)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sample_groups_.MergeFrom(from.sample_groups_);
  database_prep_steps_.MergeFrom(from.database_prep_steps_);
  global_random_rotation_range_per_object_.MergeFrom(from.global_random_rotation_range_per_object_);
  if (from.database_info_path().size() > 0) {

    database_info_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_info_path_);
  }
  if (from.rate() != 0) {
    set_rate(from.rate());
  }
}

void Sampler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Sampler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sampler::CopyFrom(const Sampler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Sampler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sampler::IsInitialized() const {
  return true;
}

void Sampler::Swap(Sampler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sampler::InternalSwap(Sampler* other) {
  using std::swap;
  sample_groups_.InternalSwap(&other->sample_groups_);
  database_prep_steps_.InternalSwap(&other->database_prep_steps_);
  global_random_rotation_range_per_object_.InternalSwap(&other->global_random_rotation_range_per_object_);
  database_info_path_.Swap(&other->database_info_path_);
  swap(rate_, other->rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Sampler::GetMetadata() const {
  protobuf_second_2fprotos_2fsampler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fsampler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Sampler

// string database_info_path = 1;
void Sampler::clear_database_info_path() {
  database_info_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Sampler::database_info_path() const {
  // @@protoc_insertion_point(field_get:second.protos.Sampler.database_info_path)
  return database_info_path_.GetNoArena();
}
void Sampler::set_database_info_path(const ::std::string& value) {
  
  database_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.Sampler.database_info_path)
}
#if LANG_CXX11
void Sampler::set_database_info_path(::std::string&& value) {
  
  database_info_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.Sampler.database_info_path)
}
#endif
void Sampler::set_database_info_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  database_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.Sampler.database_info_path)
}
void Sampler::set_database_info_path(const char* value, size_t size) {
  
  database_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.Sampler.database_info_path)
}
::std::string* Sampler::mutable_database_info_path() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.Sampler.database_info_path)
  return database_info_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Sampler::release_database_info_path() {
  // @@protoc_insertion_point(field_release:second.protos.Sampler.database_info_path)
  
  return database_info_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Sampler::set_allocated_database_info_path(::std::string* database_info_path) {
  if (database_info_path != NULL) {
    
  } else {
    
  }
  database_info_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_info_path);
  // @@protoc_insertion_point(field_set_allocated:second.protos.Sampler.database_info_path)
}

// repeated .second.protos.Group sample_groups = 2;
int Sampler::sample_groups_size() const {
  return sample_groups_.size();
}
void Sampler::clear_sample_groups() {
  sample_groups_.Clear();
}
const ::second::protos::Group& Sampler::sample_groups(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.Sampler.sample_groups)
  return sample_groups_.Get(index);
}
::second::protos::Group* Sampler::mutable_sample_groups(int index) {
  // @@protoc_insertion_point(field_mutable:second.protos.Sampler.sample_groups)
  return sample_groups_.Mutable(index);
}
::second::protos::Group* Sampler::add_sample_groups() {
  // @@protoc_insertion_point(field_add:second.protos.Sampler.sample_groups)
  return sample_groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::second::protos::Group >*
Sampler::mutable_sample_groups() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.Sampler.sample_groups)
  return &sample_groups_;
}
const ::google::protobuf::RepeatedPtrField< ::second::protos::Group >&
Sampler::sample_groups() const {
  // @@protoc_insertion_point(field_list:second.protos.Sampler.sample_groups)
  return sample_groups_;
}

// repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 3;
int Sampler::database_prep_steps_size() const {
  return database_prep_steps_.size();
}
void Sampler::clear_database_prep_steps() {
  database_prep_steps_.Clear();
}
const ::second::protos::DatabasePreprocessingStep& Sampler::database_prep_steps(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.Sampler.database_prep_steps)
  return database_prep_steps_.Get(index);
}
::second::protos::DatabasePreprocessingStep* Sampler::mutable_database_prep_steps(int index) {
  // @@protoc_insertion_point(field_mutable:second.protos.Sampler.database_prep_steps)
  return database_prep_steps_.Mutable(index);
}
::second::protos::DatabasePreprocessingStep* Sampler::add_database_prep_steps() {
  // @@protoc_insertion_point(field_add:second.protos.Sampler.database_prep_steps)
  return database_prep_steps_.Add();
}
::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >*
Sampler::mutable_database_prep_steps() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.Sampler.database_prep_steps)
  return &database_prep_steps_;
}
const ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >&
Sampler::database_prep_steps() const {
  // @@protoc_insertion_point(field_list:second.protos.Sampler.database_prep_steps)
  return database_prep_steps_;
}

// repeated float global_random_rotation_range_per_object = 4;
int Sampler::global_random_rotation_range_per_object_size() const {
  return global_random_rotation_range_per_object_.size();
}
void Sampler::clear_global_random_rotation_range_per_object() {
  global_random_rotation_range_per_object_.Clear();
}
float Sampler::global_random_rotation_range_per_object(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.Sampler.global_random_rotation_range_per_object)
  return global_random_rotation_range_per_object_.Get(index);
}
void Sampler::set_global_random_rotation_range_per_object(int index, float value) {
  global_random_rotation_range_per_object_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.Sampler.global_random_rotation_range_per_object)
}
void Sampler::add_global_random_rotation_range_per_object(float value) {
  global_random_rotation_range_per_object_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.Sampler.global_random_rotation_range_per_object)
}
const ::google::protobuf::RepeatedField< float >&
Sampler::global_random_rotation_range_per_object() const {
  // @@protoc_insertion_point(field_list:second.protos.Sampler.global_random_rotation_range_per_object)
  return global_random_rotation_range_per_object_;
}
::google::protobuf::RepeatedField< float >*
Sampler::mutable_global_random_rotation_range_per_object() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.Sampler.global_random_rotation_range_per_object)
  return &global_random_rotation_range_per_object_;
}

// float rate = 5;
void Sampler::clear_rate() {
  rate_ = 0;
}
float Sampler::rate() const {
  // @@protoc_insertion_point(field_get:second.protos.Sampler.rate)
  return rate_;
}
void Sampler::set_rate(float value) {
  
  rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.Sampler.rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
