// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/anchors.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/anchors.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class AnchorGeneratorOldDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGeneratorOld>
     _instance;
} _AnchorGeneratorOld_default_instance_;
class AnchorGeneratorStrideDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGeneratorStride>
     _instance;
} _AnchorGeneratorStride_default_instance_;
class AnchorGeneratorRangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGeneratorRange>
     _instance;
} _AnchorGeneratorRange_default_instance_;
class AnchorGeneratorCollectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGeneratorCollection>
     _instance;
  const ::second::protos::AnchorGeneratorStride* anchor_generator_stride_;
  const ::second::protos::AnchorGeneratorRange* anchor_generator_range_;
  const ::second::protos::AnchorGeneratorOld* anchor_generator_old_;
} _AnchorGeneratorCollection_default_instance_;
class AnchorGenerator_deparaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGenerator_depara>
     _instance;
} _AnchorGenerator_depara_default_instance_;
class AnchorGeneratorV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorGeneratorV1>
     _instance;
} _AnchorGeneratorV1_default_instance_;

namespace protobuf_second_2fprotos_2fanchors_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, bev_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, anchor_center_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, anchor_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, matched_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorOld, unmatched_threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, strides_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, offsets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, rotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, matched_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorStride, unmatched_threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, anchor_ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, rotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, matched_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorRange, unmatched_threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorCollection, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(AnchorGeneratorCollectionDefaultTypeInternal, anchor_generator_stride_),
  offsetof(AnchorGeneratorCollectionDefaultTypeInternal, anchor_generator_range_),
  offsetof(AnchorGeneratorCollectionDefaultTypeInternal, anchor_generator_old_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorCollection, anchor_generator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, strides_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, offsets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, rotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, matched_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGenerator_depara, unmatched_threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorV1, anchor_center_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorV1, anchor_sizes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorV1, matched_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorGeneratorV1, unmatched_threshold_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AnchorGeneratorOld)},
  { 11, -1, sizeof(AnchorGeneratorStride)},
  { 23, -1, sizeof(AnchorGeneratorRange)},
  { 34, -1, sizeof(AnchorGeneratorCollection)},
  { 43, -1, sizeof(AnchorGenerator_depara)},
  { 55, -1, sizeof(AnchorGeneratorV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGeneratorOld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGeneratorStride_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGeneratorRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGeneratorCollection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGenerator_depara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorGeneratorV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/anchors.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AnchorGeneratorOld_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGeneratorOld_default_instance_);_AnchorGeneratorStride_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGeneratorStride_default_instance_);_AnchorGeneratorRange_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGeneratorRange_default_instance_);_AnchorGeneratorCollection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGeneratorCollection_default_instance_);_AnchorGenerator_depara_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGenerator_depara_default_instance_);_AnchorGeneratorV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorGeneratorV1_default_instance_);_AnchorGeneratorCollection_default_instance_.anchor_generator_stride_ = const_cast< ::second::protos::AnchorGeneratorStride*>(
      ::second::protos::AnchorGeneratorStride::internal_default_instance());
  _AnchorGeneratorCollection_default_instance_.anchor_generator_range_ = const_cast< ::second::protos::AnchorGeneratorRange*>(
      ::second::protos::AnchorGeneratorRange::internal_default_instance());
  _AnchorGeneratorCollection_default_instance_.anchor_generator_old_ = const_cast< ::second::protos::AnchorGeneratorOld*>(
      ::second::protos::AnchorGeneratorOld::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033second/protos/anchors.proto\022\rsecond.pr"
      "otos\"\242\001\n\022AnchorGeneratorOld\022\022\n\nclass_nam"
      "e\030\001 \001(\t\022\021\n\tbev_range\030\002 \003(\002\022\027\n\017anchor_cen"
      "ter_z\030\003 \001(\002\022\024\n\014anchor_sizes\030\004 \003(\002\022\031\n\021mat"
      "ched_threshold\030\005 \001(\002\022\033\n\023unmatched_thresh"
      "old\030\006 \001(\002\"\247\001\n\025AnchorGeneratorStride\022\022\n\nc"
      "lass_name\030\001 \001(\t\022\r\n\005sizes\030\002 \003(\002\022\017\n\007stride"
      "s\030\003 \003(\002\022\017\n\007offsets\030\004 \003(\002\022\021\n\trotations\030\005 "
      "\003(\002\022\031\n\021matched_threshold\030\006 \001(\002\022\033\n\023unmatc"
      "hed_threshold\030\007 \001(\002\"\233\001\n\024AnchorGeneratorR"
      "ange\022\022\n\nclass_name\030\001 \001(\t\022\r\n\005sizes\030\002 \003(\002\022"
      "\025\n\ranchor_ranges\030\003 \003(\002\022\021\n\trotations\030\004 \003("
      "\002\022\031\n\021matched_threshold\030\005 \001(\002\022\033\n\023unmatche"
      "d_threshold\030\006 \001(\002\"\202\002\n\031AnchorGeneratorCol"
      "lection\022G\n\027anchor_generator_stride\030\001 \001(\013"
      "2$.second.protos.AnchorGeneratorStrideH\000"
      "\022E\n\026anchor_generator_range\030\002 \001(\0132#.secon"
      "d.protos.AnchorGeneratorRangeH\000\022A\n\024ancho"
      "r_generator_old\030\003 \001(\0132!.second.protos.An"
      "chorGeneratorOldH\000B\022\n\020anchor_generator\"\250"
      "\001\n\026AnchorGenerator_depara\022\022\n\nclass_name\030"
      "\001 \001(\t\022\r\n\005sizes\030\002 \003(\002\022\017\n\007strides\030\003 \003(\002\022\017\n"
      "\007offsets\030\004 \003(\002\022\021\n\trotations\030\005 \003(\002\022\031\n\021mat"
      "ched_threshold\030\006 \001(\002\022\033\n\023unmatched_thresh"
      "old\030\007 \001(\002\"z\n\021AnchorGeneratorV1\022\027\n\017anchor"
      "_center_z\030\001 \001(\002\022\024\n\014anchor_sizes\030\002 \003(\002\022\031\n"
      "\021matched_threshold\030\003 \001(\002\022\033\n\023unmatched_th"
      "reshold\030\004 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/anchors.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2fanchors_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGeneratorOld::kClassNameFieldNumber;
const int AnchorGeneratorOld::kBevRangeFieldNumber;
const int AnchorGeneratorOld::kAnchorCenterZFieldNumber;
const int AnchorGeneratorOld::kAnchorSizesFieldNumber;
const int AnchorGeneratorOld::kMatchedThresholdFieldNumber;
const int AnchorGeneratorOld::kUnmatchedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGeneratorOld::AnchorGeneratorOld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGeneratorOld)
}
AnchorGeneratorOld::AnchorGeneratorOld(const AnchorGeneratorOld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bev_range_(from.bev_range_),
      anchor_sizes_(from.anchor_sizes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  ::memcpy(&anchor_center_z_, &from.anchor_center_z_,
    static_cast<size_t>(reinterpret_cast<char*>(&unmatched_threshold_) -
    reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGeneratorOld)
}

void AnchorGeneratorOld::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&anchor_center_z_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  _cached_size_ = 0;
}

AnchorGeneratorOld::~AnchorGeneratorOld() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGeneratorOld)
  SharedDtor();
}

void AnchorGeneratorOld::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnchorGeneratorOld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGeneratorOld::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGeneratorOld& AnchorGeneratorOld::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGeneratorOld* AnchorGeneratorOld::New(::google::protobuf::Arena* arena) const {
  AnchorGeneratorOld* n = new AnchorGeneratorOld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGeneratorOld::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGeneratorOld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bev_range_.Clear();
  anchor_sizes_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&anchor_center_z_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  _internal_metadata_.Clear();
}

bool AnchorGeneratorOld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGeneratorOld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.AnchorGeneratorOld.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float bev_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_bev_range())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_bev_range())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float anchor_center_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &anchor_center_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float anchor_sizes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_anchor_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_anchor_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float matched_threshold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &matched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float unmatched_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unmatched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGeneratorOld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGeneratorOld)
  return false;
#undef DO_
}

void AnchorGeneratorOld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGeneratorOld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorOld.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // repeated float bev_range = 2;
  if (this->bev_range_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bev_range_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->bev_range().data(), this->bev_range_size(), output);
  }

  // float anchor_center_z = 3;
  if (this->anchor_center_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->anchor_center_z(), output);
  }

  // repeated float anchor_sizes = 4;
  if (this->anchor_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _anchor_sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->anchor_sizes().data(), this->anchor_sizes_size(), output);
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->matched_threshold(), output);
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->unmatched_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGeneratorOld)
}

::google::protobuf::uint8* AnchorGeneratorOld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGeneratorOld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorOld.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // repeated float bev_range = 2;
  if (this->bev_range_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bev_range_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->bev_range_, target);
  }

  // float anchor_center_z = 3;
  if (this->anchor_center_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->anchor_center_z(), target);
  }

  // repeated float anchor_sizes = 4;
  if (this->anchor_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _anchor_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->anchor_sizes_, target);
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->matched_threshold(), target);
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->unmatched_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGeneratorOld)
  return target;
}

size_t AnchorGeneratorOld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGeneratorOld)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float bev_range = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bev_range_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bev_range_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float anchor_sizes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_sizes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _anchor_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // float anchor_center_z = 3;
  if (this->anchor_center_z() != 0) {
    total_size += 1 + 4;
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGeneratorOld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGeneratorOld)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGeneratorOld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGeneratorOld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGeneratorOld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGeneratorOld)
    MergeFrom(*source);
  }
}

void AnchorGeneratorOld::MergeFrom(const AnchorGeneratorOld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGeneratorOld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bev_range_.MergeFrom(from.bev_range_);
  anchor_sizes_.MergeFrom(from.anchor_sizes_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.anchor_center_z() != 0) {
    set_anchor_center_z(from.anchor_center_z());
  }
  if (from.matched_threshold() != 0) {
    set_matched_threshold(from.matched_threshold());
  }
  if (from.unmatched_threshold() != 0) {
    set_unmatched_threshold(from.unmatched_threshold());
  }
}

void AnchorGeneratorOld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGeneratorOld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGeneratorOld::CopyFrom(const AnchorGeneratorOld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGeneratorOld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGeneratorOld::IsInitialized() const {
  return true;
}

void AnchorGeneratorOld::Swap(AnchorGeneratorOld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGeneratorOld::InternalSwap(AnchorGeneratorOld* other) {
  using std::swap;
  bev_range_.InternalSwap(&other->bev_range_);
  anchor_sizes_.InternalSwap(&other->anchor_sizes_);
  class_name_.Swap(&other->class_name_);
  swap(anchor_center_z_, other->anchor_center_z_);
  swap(matched_threshold_, other->matched_threshold_);
  swap(unmatched_threshold_, other->unmatched_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGeneratorOld::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGeneratorOld

// string class_name = 1;
void AnchorGeneratorOld::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AnchorGeneratorOld::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.class_name)
  return class_name_.GetNoArena();
}
void AnchorGeneratorOld::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.class_name)
}
#if LANG_CXX11
void AnchorGeneratorOld::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorOld.class_name)
}
#endif
void AnchorGeneratorOld::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorOld.class_name)
}
void AnchorGeneratorOld::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorOld.class_name)
}
::std::string* AnchorGeneratorOld::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorOld.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnchorGeneratorOld::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorOld.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnchorGeneratorOld::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorOld.class_name)
}

// repeated float bev_range = 2;
int AnchorGeneratorOld::bev_range_size() const {
  return bev_range_.size();
}
void AnchorGeneratorOld::clear_bev_range() {
  bev_range_.Clear();
}
float AnchorGeneratorOld::bev_range(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.bev_range)
  return bev_range_.Get(index);
}
void AnchorGeneratorOld::set_bev_range(int index, float value) {
  bev_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.bev_range)
}
void AnchorGeneratorOld::add_bev_range(float value) {
  bev_range_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorOld.bev_range)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorOld::bev_range() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorOld.bev_range)
  return bev_range_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorOld::mutable_bev_range() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorOld.bev_range)
  return &bev_range_;
}

// float anchor_center_z = 3;
void AnchorGeneratorOld::clear_anchor_center_z() {
  anchor_center_z_ = 0;
}
float AnchorGeneratorOld::anchor_center_z() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.anchor_center_z)
  return anchor_center_z_;
}
void AnchorGeneratorOld::set_anchor_center_z(float value) {
  
  anchor_center_z_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.anchor_center_z)
}

// repeated float anchor_sizes = 4;
int AnchorGeneratorOld::anchor_sizes_size() const {
  return anchor_sizes_.size();
}
void AnchorGeneratorOld::clear_anchor_sizes() {
  anchor_sizes_.Clear();
}
float AnchorGeneratorOld::anchor_sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.anchor_sizes)
  return anchor_sizes_.Get(index);
}
void AnchorGeneratorOld::set_anchor_sizes(int index, float value) {
  anchor_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.anchor_sizes)
}
void AnchorGeneratorOld::add_anchor_sizes(float value) {
  anchor_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorOld.anchor_sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorOld::anchor_sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorOld.anchor_sizes)
  return anchor_sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorOld::mutable_anchor_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorOld.anchor_sizes)
  return &anchor_sizes_;
}

// float matched_threshold = 5;
void AnchorGeneratorOld::clear_matched_threshold() {
  matched_threshold_ = 0;
}
float AnchorGeneratorOld::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.matched_threshold)
  return matched_threshold_;
}
void AnchorGeneratorOld::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.matched_threshold)
}

// float unmatched_threshold = 6;
void AnchorGeneratorOld::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
float AnchorGeneratorOld::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorOld.unmatched_threshold)
  return unmatched_threshold_;
}
void AnchorGeneratorOld::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorOld.unmatched_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGeneratorStride::kClassNameFieldNumber;
const int AnchorGeneratorStride::kSizesFieldNumber;
const int AnchorGeneratorStride::kStridesFieldNumber;
const int AnchorGeneratorStride::kOffsetsFieldNumber;
const int AnchorGeneratorStride::kRotationsFieldNumber;
const int AnchorGeneratorStride::kMatchedThresholdFieldNumber;
const int AnchorGeneratorStride::kUnmatchedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGeneratorStride::AnchorGeneratorStride()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGeneratorStride)
}
AnchorGeneratorStride::AnchorGeneratorStride(const AnchorGeneratorStride& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sizes_(from.sizes_),
      strides_(from.strides_),
      offsets_(from.offsets_),
      rotations_(from.rotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  ::memcpy(&matched_threshold_, &from.matched_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&unmatched_threshold_) -
    reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGeneratorStride)
}

void AnchorGeneratorStride::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _cached_size_ = 0;
}

AnchorGeneratorStride::~AnchorGeneratorStride() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGeneratorStride)
  SharedDtor();
}

void AnchorGeneratorStride::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnchorGeneratorStride::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGeneratorStride::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGeneratorStride& AnchorGeneratorStride::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGeneratorStride* AnchorGeneratorStride::New(::google::protobuf::Arena* arena) const {
  AnchorGeneratorStride* n = new AnchorGeneratorStride;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGeneratorStride::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGeneratorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sizes_.Clear();
  strides_.Clear();
  offsets_.Clear();
  rotations_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _internal_metadata_.Clear();
}

bool AnchorGeneratorStride::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGeneratorStride)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.AnchorGeneratorStride.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float strides = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_strides())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_strides())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float offsets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_offsets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_offsets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rotations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotations())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_rotations())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float matched_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &matched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float unmatched_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unmatched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGeneratorStride)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGeneratorStride)
  return false;
#undef DO_
}

void AnchorGeneratorStride::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGeneratorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorStride.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->sizes().data(), this->sizes_size(), output);
  }

  // repeated float strides = 3;
  if (this->strides_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _strides_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->strides().data(), this->strides_size(), output);
  }

  // repeated float offsets = 4;
  if (this->offsets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _offsets_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->offsets().data(), this->offsets_size(), output);
  }

  // repeated float rotations = 5;
  if (this->rotations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rotations_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotations().data(), this->rotations_size(), output);
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->matched_threshold(), output);
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->unmatched_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGeneratorStride)
}

::google::protobuf::uint8* AnchorGeneratorStride::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGeneratorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorStride.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->sizes_, target);
  }

  // repeated float strides = 3;
  if (this->strides_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _strides_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->strides_, target);
  }

  // repeated float offsets = 4;
  if (this->offsets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _offsets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->offsets_, target);
  }

  // repeated float rotations = 5;
  if (this->rotations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _rotations_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotations_, target);
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->matched_threshold(), target);
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->unmatched_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGeneratorStride)
  return target;
}

size_t AnchorGeneratorStride::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGeneratorStride)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sizes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float strides = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->strides_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _strides_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float offsets = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->offsets_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _offsets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rotations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->rotations_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotations_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGeneratorStride::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGeneratorStride)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGeneratorStride* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGeneratorStride>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGeneratorStride)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGeneratorStride)
    MergeFrom(*source);
  }
}

void AnchorGeneratorStride::MergeFrom(const AnchorGeneratorStride& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGeneratorStride)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sizes_.MergeFrom(from.sizes_);
  strides_.MergeFrom(from.strides_);
  offsets_.MergeFrom(from.offsets_);
  rotations_.MergeFrom(from.rotations_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.matched_threshold() != 0) {
    set_matched_threshold(from.matched_threshold());
  }
  if (from.unmatched_threshold() != 0) {
    set_unmatched_threshold(from.unmatched_threshold());
  }
}

void AnchorGeneratorStride::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGeneratorStride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGeneratorStride::CopyFrom(const AnchorGeneratorStride& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGeneratorStride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGeneratorStride::IsInitialized() const {
  return true;
}

void AnchorGeneratorStride::Swap(AnchorGeneratorStride* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGeneratorStride::InternalSwap(AnchorGeneratorStride* other) {
  using std::swap;
  sizes_.InternalSwap(&other->sizes_);
  strides_.InternalSwap(&other->strides_);
  offsets_.InternalSwap(&other->offsets_);
  rotations_.InternalSwap(&other->rotations_);
  class_name_.Swap(&other->class_name_);
  swap(matched_threshold_, other->matched_threshold_);
  swap(unmatched_threshold_, other->unmatched_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGeneratorStride::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGeneratorStride

// string class_name = 1;
void AnchorGeneratorStride::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AnchorGeneratorStride::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.class_name)
  return class_name_.GetNoArena();
}
void AnchorGeneratorStride::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.class_name)
}
#if LANG_CXX11
void AnchorGeneratorStride::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorStride.class_name)
}
#endif
void AnchorGeneratorStride::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorStride.class_name)
}
void AnchorGeneratorStride::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorStride.class_name)
}
::std::string* AnchorGeneratorStride::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorStride.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnchorGeneratorStride::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorStride.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnchorGeneratorStride::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorStride.class_name)
}

// repeated float sizes = 2;
int AnchorGeneratorStride::sizes_size() const {
  return sizes_.size();
}
void AnchorGeneratorStride::clear_sizes() {
  sizes_.Clear();
}
float AnchorGeneratorStride::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.sizes)
  return sizes_.Get(index);
}
void AnchorGeneratorStride::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.sizes)
}
void AnchorGeneratorStride::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.sizes)
  return sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.sizes)
  return &sizes_;
}

// repeated float strides = 3;
int AnchorGeneratorStride::strides_size() const {
  return strides_.size();
}
void AnchorGeneratorStride::clear_strides() {
  strides_.Clear();
}
float AnchorGeneratorStride::strides(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.strides)
  return strides_.Get(index);
}
void AnchorGeneratorStride::set_strides(int index, float value) {
  strides_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.strides)
}
void AnchorGeneratorStride::add_strides(float value) {
  strides_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.strides)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::strides() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.strides)
  return strides_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_strides() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.strides)
  return &strides_;
}

// repeated float offsets = 4;
int AnchorGeneratorStride::offsets_size() const {
  return offsets_.size();
}
void AnchorGeneratorStride::clear_offsets() {
  offsets_.Clear();
}
float AnchorGeneratorStride::offsets(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.offsets)
  return offsets_.Get(index);
}
void AnchorGeneratorStride::set_offsets(int index, float value) {
  offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.offsets)
}
void AnchorGeneratorStride::add_offsets(float value) {
  offsets_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.offsets)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::offsets() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.offsets)
  return offsets_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.offsets)
  return &offsets_;
}

// repeated float rotations = 5;
int AnchorGeneratorStride::rotations_size() const {
  return rotations_.size();
}
void AnchorGeneratorStride::clear_rotations() {
  rotations_.Clear();
}
float AnchorGeneratorStride::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.rotations)
  return rotations_.Get(index);
}
void AnchorGeneratorStride::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.rotations)
}
void AnchorGeneratorStride::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorStride.rotations)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorStride::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorStride.rotations)
  return rotations_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorStride::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorStride.rotations)
  return &rotations_;
}

// float matched_threshold = 6;
void AnchorGeneratorStride::clear_matched_threshold() {
  matched_threshold_ = 0;
}
float AnchorGeneratorStride::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.matched_threshold)
  return matched_threshold_;
}
void AnchorGeneratorStride::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.matched_threshold)
}

// float unmatched_threshold = 7;
void AnchorGeneratorStride::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
float AnchorGeneratorStride::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorStride.unmatched_threshold)
  return unmatched_threshold_;
}
void AnchorGeneratorStride::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorStride.unmatched_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGeneratorRange::kClassNameFieldNumber;
const int AnchorGeneratorRange::kSizesFieldNumber;
const int AnchorGeneratorRange::kAnchorRangesFieldNumber;
const int AnchorGeneratorRange::kRotationsFieldNumber;
const int AnchorGeneratorRange::kMatchedThresholdFieldNumber;
const int AnchorGeneratorRange::kUnmatchedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGeneratorRange::AnchorGeneratorRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGeneratorRange)
}
AnchorGeneratorRange::AnchorGeneratorRange(const AnchorGeneratorRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sizes_(from.sizes_),
      anchor_ranges_(from.anchor_ranges_),
      rotations_(from.rotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  ::memcpy(&matched_threshold_, &from.matched_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&unmatched_threshold_) -
    reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGeneratorRange)
}

void AnchorGeneratorRange::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _cached_size_ = 0;
}

AnchorGeneratorRange::~AnchorGeneratorRange() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGeneratorRange)
  SharedDtor();
}

void AnchorGeneratorRange::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnchorGeneratorRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGeneratorRange::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGeneratorRange& AnchorGeneratorRange::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGeneratorRange* AnchorGeneratorRange::New(::google::protobuf::Arena* arena) const {
  AnchorGeneratorRange* n = new AnchorGeneratorRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGeneratorRange::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGeneratorRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sizes_.Clear();
  anchor_ranges_.Clear();
  rotations_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _internal_metadata_.Clear();
}

bool AnchorGeneratorRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGeneratorRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.AnchorGeneratorRange.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float anchor_ranges = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_anchor_ranges())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_anchor_ranges())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotations())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_rotations())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float matched_threshold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &matched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float unmatched_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unmatched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGeneratorRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGeneratorRange)
  return false;
#undef DO_
}

void AnchorGeneratorRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGeneratorRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorRange.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->sizes().data(), this->sizes_size(), output);
  }

  // repeated float anchor_ranges = 3;
  if (this->anchor_ranges_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _anchor_ranges_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->anchor_ranges().data(), this->anchor_ranges_size(), output);
  }

  // repeated float rotations = 4;
  if (this->rotations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rotations_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotations().data(), this->rotations_size(), output);
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->matched_threshold(), output);
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->unmatched_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGeneratorRange)
}

::google::protobuf::uint8* AnchorGeneratorRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGeneratorRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGeneratorRange.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->sizes_, target);
  }

  // repeated float anchor_ranges = 3;
  if (this->anchor_ranges_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _anchor_ranges_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->anchor_ranges_, target);
  }

  // repeated float rotations = 4;
  if (this->rotations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _rotations_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotations_, target);
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->matched_threshold(), target);
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->unmatched_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGeneratorRange)
  return target;
}

size_t AnchorGeneratorRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGeneratorRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sizes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float anchor_ranges = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_ranges_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _anchor_ranges_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rotations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rotations_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotations_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // float matched_threshold = 5;
  if (this->matched_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float unmatched_threshold = 6;
  if (this->unmatched_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGeneratorRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGeneratorRange)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGeneratorRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGeneratorRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGeneratorRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGeneratorRange)
    MergeFrom(*source);
  }
}

void AnchorGeneratorRange::MergeFrom(const AnchorGeneratorRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGeneratorRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sizes_.MergeFrom(from.sizes_);
  anchor_ranges_.MergeFrom(from.anchor_ranges_);
  rotations_.MergeFrom(from.rotations_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.matched_threshold() != 0) {
    set_matched_threshold(from.matched_threshold());
  }
  if (from.unmatched_threshold() != 0) {
    set_unmatched_threshold(from.unmatched_threshold());
  }
}

void AnchorGeneratorRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGeneratorRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGeneratorRange::CopyFrom(const AnchorGeneratorRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGeneratorRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGeneratorRange::IsInitialized() const {
  return true;
}

void AnchorGeneratorRange::Swap(AnchorGeneratorRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGeneratorRange::InternalSwap(AnchorGeneratorRange* other) {
  using std::swap;
  sizes_.InternalSwap(&other->sizes_);
  anchor_ranges_.InternalSwap(&other->anchor_ranges_);
  rotations_.InternalSwap(&other->rotations_);
  class_name_.Swap(&other->class_name_);
  swap(matched_threshold_, other->matched_threshold_);
  swap(unmatched_threshold_, other->unmatched_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGeneratorRange::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGeneratorRange

// string class_name = 1;
void AnchorGeneratorRange::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AnchorGeneratorRange::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.class_name)
  return class_name_.GetNoArena();
}
void AnchorGeneratorRange::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.class_name)
}
#if LANG_CXX11
void AnchorGeneratorRange::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGeneratorRange.class_name)
}
#endif
void AnchorGeneratorRange::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGeneratorRange.class_name)
}
void AnchorGeneratorRange::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGeneratorRange.class_name)
}
::std::string* AnchorGeneratorRange::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorRange.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnchorGeneratorRange::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorRange.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnchorGeneratorRange::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorRange.class_name)
}

// repeated float sizes = 2;
int AnchorGeneratorRange::sizes_size() const {
  return sizes_.size();
}
void AnchorGeneratorRange::clear_sizes() {
  sizes_.Clear();
}
float AnchorGeneratorRange::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.sizes)
  return sizes_.Get(index);
}
void AnchorGeneratorRange::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.sizes)
}
void AnchorGeneratorRange::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.sizes)
  return sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.sizes)
  return &sizes_;
}

// repeated float anchor_ranges = 3;
int AnchorGeneratorRange::anchor_ranges_size() const {
  return anchor_ranges_.size();
}
void AnchorGeneratorRange::clear_anchor_ranges() {
  anchor_ranges_.Clear();
}
float AnchorGeneratorRange::anchor_ranges(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.anchor_ranges)
  return anchor_ranges_.Get(index);
}
void AnchorGeneratorRange::set_anchor_ranges(int index, float value) {
  anchor_ranges_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.anchor_ranges)
}
void AnchorGeneratorRange::add_anchor_ranges(float value) {
  anchor_ranges_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.anchor_ranges)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::anchor_ranges() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.anchor_ranges)
  return anchor_ranges_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_anchor_ranges() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.anchor_ranges)
  return &anchor_ranges_;
}

// repeated float rotations = 4;
int AnchorGeneratorRange::rotations_size() const {
  return rotations_.size();
}
void AnchorGeneratorRange::clear_rotations() {
  rotations_.Clear();
}
float AnchorGeneratorRange::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.rotations)
  return rotations_.Get(index);
}
void AnchorGeneratorRange::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.rotations)
}
void AnchorGeneratorRange::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorRange.rotations)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorRange::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorRange.rotations)
  return rotations_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorRange::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorRange.rotations)
  return &rotations_;
}

// float matched_threshold = 5;
void AnchorGeneratorRange::clear_matched_threshold() {
  matched_threshold_ = 0;
}
float AnchorGeneratorRange::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.matched_threshold)
  return matched_threshold_;
}
void AnchorGeneratorRange::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.matched_threshold)
}

// float unmatched_threshold = 6;
void AnchorGeneratorRange::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
float AnchorGeneratorRange::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorRange.unmatched_threshold)
  return unmatched_threshold_;
}
void AnchorGeneratorRange::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorRange.unmatched_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGeneratorCollection::kAnchorGeneratorStrideFieldNumber;
const int AnchorGeneratorCollection::kAnchorGeneratorRangeFieldNumber;
const int AnchorGeneratorCollection::kAnchorGeneratorOldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGeneratorCollection::AnchorGeneratorCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGeneratorCollection)
}
AnchorGeneratorCollection::AnchorGeneratorCollection(const AnchorGeneratorCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_anchor_generator();
  switch (from.anchor_generator_case()) {
    case kAnchorGeneratorStride: {
      mutable_anchor_generator_stride()->::second::protos::AnchorGeneratorStride::MergeFrom(from.anchor_generator_stride());
      break;
    }
    case kAnchorGeneratorRange: {
      mutable_anchor_generator_range()->::second::protos::AnchorGeneratorRange::MergeFrom(from.anchor_generator_range());
      break;
    }
    case kAnchorGeneratorOld: {
      mutable_anchor_generator_old()->::second::protos::AnchorGeneratorOld::MergeFrom(from.anchor_generator_old());
      break;
    }
    case ANCHOR_GENERATOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGeneratorCollection)
}

void AnchorGeneratorCollection::SharedCtor() {
  clear_has_anchor_generator();
  _cached_size_ = 0;
}

AnchorGeneratorCollection::~AnchorGeneratorCollection() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGeneratorCollection)
  SharedDtor();
}

void AnchorGeneratorCollection::SharedDtor() {
  if (has_anchor_generator()) {
    clear_anchor_generator();
  }
}

void AnchorGeneratorCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGeneratorCollection::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGeneratorCollection& AnchorGeneratorCollection::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGeneratorCollection* AnchorGeneratorCollection::New(::google::protobuf::Arena* arena) const {
  AnchorGeneratorCollection* n = new AnchorGeneratorCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGeneratorCollection::clear_anchor_generator() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.AnchorGeneratorCollection)
  switch (anchor_generator_case()) {
    case kAnchorGeneratorStride: {
      delete anchor_generator_.anchor_generator_stride_;
      break;
    }
    case kAnchorGeneratorRange: {
      delete anchor_generator_.anchor_generator_range_;
      break;
    }
    case kAnchorGeneratorOld: {
      delete anchor_generator_.anchor_generator_old_;
      break;
    }
    case ANCHOR_GENERATOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ANCHOR_GENERATOR_NOT_SET;
}


void AnchorGeneratorCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGeneratorCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_anchor_generator();
  _internal_metadata_.Clear();
}

bool AnchorGeneratorCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGeneratorCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anchor_generator_stride()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anchor_generator_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anchor_generator_old()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGeneratorCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGeneratorCollection)
  return false;
#undef DO_
}

void AnchorGeneratorCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGeneratorCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
  if (has_anchor_generator_stride()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *anchor_generator_.anchor_generator_stride_, output);
  }

  // .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
  if (has_anchor_generator_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *anchor_generator_.anchor_generator_range_, output);
  }

  // .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
  if (has_anchor_generator_old()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *anchor_generator_.anchor_generator_old_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGeneratorCollection)
}

::google::protobuf::uint8* AnchorGeneratorCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGeneratorCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
  if (has_anchor_generator_stride()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *anchor_generator_.anchor_generator_stride_, deterministic, target);
  }

  // .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
  if (has_anchor_generator_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *anchor_generator_.anchor_generator_range_, deterministic, target);
  }

  // .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
  if (has_anchor_generator_old()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *anchor_generator_.anchor_generator_old_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGeneratorCollection)
  return target;
}

size_t AnchorGeneratorCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGeneratorCollection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (anchor_generator_case()) {
    // .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
    case kAnchorGeneratorStride: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *anchor_generator_.anchor_generator_stride_);
      break;
    }
    // .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
    case kAnchorGeneratorRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *anchor_generator_.anchor_generator_range_);
      break;
    }
    // .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
    case kAnchorGeneratorOld: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *anchor_generator_.anchor_generator_old_);
      break;
    }
    case ANCHOR_GENERATOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGeneratorCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGeneratorCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGeneratorCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGeneratorCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGeneratorCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGeneratorCollection)
    MergeFrom(*source);
  }
}

void AnchorGeneratorCollection::MergeFrom(const AnchorGeneratorCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGeneratorCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.anchor_generator_case()) {
    case kAnchorGeneratorStride: {
      mutable_anchor_generator_stride()->::second::protos::AnchorGeneratorStride::MergeFrom(from.anchor_generator_stride());
      break;
    }
    case kAnchorGeneratorRange: {
      mutable_anchor_generator_range()->::second::protos::AnchorGeneratorRange::MergeFrom(from.anchor_generator_range());
      break;
    }
    case kAnchorGeneratorOld: {
      mutable_anchor_generator_old()->::second::protos::AnchorGeneratorOld::MergeFrom(from.anchor_generator_old());
      break;
    }
    case ANCHOR_GENERATOR_NOT_SET: {
      break;
    }
  }
}

void AnchorGeneratorCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGeneratorCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGeneratorCollection::CopyFrom(const AnchorGeneratorCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGeneratorCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGeneratorCollection::IsInitialized() const {
  return true;
}

void AnchorGeneratorCollection::Swap(AnchorGeneratorCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGeneratorCollection::InternalSwap(AnchorGeneratorCollection* other) {
  using std::swap;
  swap(anchor_generator_, other->anchor_generator_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGeneratorCollection::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGeneratorCollection

// .second.protos.AnchorGeneratorStride anchor_generator_stride = 1;
bool AnchorGeneratorCollection::has_anchor_generator_stride() const {
  return anchor_generator_case() == kAnchorGeneratorStride;
}
void AnchorGeneratorCollection::set_has_anchor_generator_stride() {
  _oneof_case_[0] = kAnchorGeneratorStride;
}
void AnchorGeneratorCollection::clear_anchor_generator_stride() {
  if (has_anchor_generator_stride()) {
    delete anchor_generator_.anchor_generator_stride_;
    clear_has_anchor_generator();
  }
}
 const ::second::protos::AnchorGeneratorStride& AnchorGeneratorCollection::anchor_generator_stride() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  return has_anchor_generator_stride()
      ? *anchor_generator_.anchor_generator_stride_
      : ::second::protos::AnchorGeneratorStride::default_instance();
}
::second::protos::AnchorGeneratorStride* AnchorGeneratorCollection::mutable_anchor_generator_stride() {
  if (!has_anchor_generator_stride()) {
    clear_anchor_generator();
    set_has_anchor_generator_stride();
    anchor_generator_.anchor_generator_stride_ = new ::second::protos::AnchorGeneratorStride;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  return anchor_generator_.anchor_generator_stride_;
}
::second::protos::AnchorGeneratorStride* AnchorGeneratorCollection::release_anchor_generator_stride() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
  if (has_anchor_generator_stride()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorStride* temp = anchor_generator_.anchor_generator_stride_;
    anchor_generator_.anchor_generator_stride_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AnchorGeneratorCollection::set_allocated_anchor_generator_stride(::second::protos::AnchorGeneratorStride* anchor_generator_stride) {
  clear_anchor_generator();
  if (anchor_generator_stride) {
    set_has_anchor_generator_stride();
    anchor_generator_.anchor_generator_stride_ = anchor_generator_stride;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_stride)
}

// .second.protos.AnchorGeneratorRange anchor_generator_range = 2;
bool AnchorGeneratorCollection::has_anchor_generator_range() const {
  return anchor_generator_case() == kAnchorGeneratorRange;
}
void AnchorGeneratorCollection::set_has_anchor_generator_range() {
  _oneof_case_[0] = kAnchorGeneratorRange;
}
void AnchorGeneratorCollection::clear_anchor_generator_range() {
  if (has_anchor_generator_range()) {
    delete anchor_generator_.anchor_generator_range_;
    clear_has_anchor_generator();
  }
}
 const ::second::protos::AnchorGeneratorRange& AnchorGeneratorCollection::anchor_generator_range() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  return has_anchor_generator_range()
      ? *anchor_generator_.anchor_generator_range_
      : ::second::protos::AnchorGeneratorRange::default_instance();
}
::second::protos::AnchorGeneratorRange* AnchorGeneratorCollection::mutable_anchor_generator_range() {
  if (!has_anchor_generator_range()) {
    clear_anchor_generator();
    set_has_anchor_generator_range();
    anchor_generator_.anchor_generator_range_ = new ::second::protos::AnchorGeneratorRange;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  return anchor_generator_.anchor_generator_range_;
}
::second::protos::AnchorGeneratorRange* AnchorGeneratorCollection::release_anchor_generator_range() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_range)
  if (has_anchor_generator_range()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorRange* temp = anchor_generator_.anchor_generator_range_;
    anchor_generator_.anchor_generator_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AnchorGeneratorCollection::set_allocated_anchor_generator_range(::second::protos::AnchorGeneratorRange* anchor_generator_range) {
  clear_anchor_generator();
  if (anchor_generator_range) {
    set_has_anchor_generator_range();
    anchor_generator_.anchor_generator_range_ = anchor_generator_range;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_range)
}

// .second.protos.AnchorGeneratorOld anchor_generator_old = 3;
bool AnchorGeneratorCollection::has_anchor_generator_old() const {
  return anchor_generator_case() == kAnchorGeneratorOld;
}
void AnchorGeneratorCollection::set_has_anchor_generator_old() {
  _oneof_case_[0] = kAnchorGeneratorOld;
}
void AnchorGeneratorCollection::clear_anchor_generator_old() {
  if (has_anchor_generator_old()) {
    delete anchor_generator_.anchor_generator_old_;
    clear_has_anchor_generator();
  }
}
 const ::second::protos::AnchorGeneratorOld& AnchorGeneratorCollection::anchor_generator_old() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  return has_anchor_generator_old()
      ? *anchor_generator_.anchor_generator_old_
      : ::second::protos::AnchorGeneratorOld::default_instance();
}
::second::protos::AnchorGeneratorOld* AnchorGeneratorCollection::mutable_anchor_generator_old() {
  if (!has_anchor_generator_old()) {
    clear_anchor_generator();
    set_has_anchor_generator_old();
    anchor_generator_.anchor_generator_old_ = new ::second::protos::AnchorGeneratorOld;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  return anchor_generator_.anchor_generator_old_;
}
::second::protos::AnchorGeneratorOld* AnchorGeneratorCollection::release_anchor_generator_old() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGeneratorCollection.anchor_generator_old)
  if (has_anchor_generator_old()) {
    clear_has_anchor_generator();
    ::second::protos::AnchorGeneratorOld* temp = anchor_generator_.anchor_generator_old_;
    anchor_generator_.anchor_generator_old_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AnchorGeneratorCollection::set_allocated_anchor_generator_old(::second::protos::AnchorGeneratorOld* anchor_generator_old) {
  clear_anchor_generator();
  if (anchor_generator_old) {
    set_has_anchor_generator_old();
    anchor_generator_.anchor_generator_old_ = anchor_generator_old;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGeneratorCollection.anchor_generator_old)
}

bool AnchorGeneratorCollection::has_anchor_generator() const {
  return anchor_generator_case() != ANCHOR_GENERATOR_NOT_SET;
}
void AnchorGeneratorCollection::clear_has_anchor_generator() {
  _oneof_case_[0] = ANCHOR_GENERATOR_NOT_SET;
}
AnchorGeneratorCollection::AnchorGeneratorCase AnchorGeneratorCollection::anchor_generator_case() const {
  return AnchorGeneratorCollection::AnchorGeneratorCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGenerator_depara::kClassNameFieldNumber;
const int AnchorGenerator_depara::kSizesFieldNumber;
const int AnchorGenerator_depara::kStridesFieldNumber;
const int AnchorGenerator_depara::kOffsetsFieldNumber;
const int AnchorGenerator_depara::kRotationsFieldNumber;
const int AnchorGenerator_depara::kMatchedThresholdFieldNumber;
const int AnchorGenerator_depara::kUnmatchedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGenerator_depara::AnchorGenerator_depara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGenerator_depara)
}
AnchorGenerator_depara::AnchorGenerator_depara(const AnchorGenerator_depara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sizes_(from.sizes_),
      strides_(from.strides_),
      offsets_(from.offsets_),
      rotations_(from.rotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  ::memcpy(&matched_threshold_, &from.matched_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&unmatched_threshold_) -
    reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGenerator_depara)
}

void AnchorGenerator_depara::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _cached_size_ = 0;
}

AnchorGenerator_depara::~AnchorGenerator_depara() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGenerator_depara)
  SharedDtor();
}

void AnchorGenerator_depara::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnchorGenerator_depara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGenerator_depara::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGenerator_depara& AnchorGenerator_depara::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGenerator_depara* AnchorGenerator_depara::New(::google::protobuf::Arena* arena) const {
  AnchorGenerator_depara* n = new AnchorGenerator_depara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGenerator_depara::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGenerator_depara)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sizes_.Clear();
  strides_.Clear();
  offsets_.Clear();
  rotations_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&matched_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&matched_threshold_)) + sizeof(unmatched_threshold_));
  _internal_metadata_.Clear();
}

bool AnchorGenerator_depara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGenerator_depara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "second.protos.AnchorGenerator_depara.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float strides = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_strides())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_strides())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float offsets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_offsets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_offsets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rotations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotations())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_rotations())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float matched_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &matched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float unmatched_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unmatched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGenerator_depara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGenerator_depara)
  return false;
#undef DO_
}

void AnchorGenerator_depara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGenerator_depara)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGenerator_depara.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->sizes().data(), this->sizes_size(), output);
  }

  // repeated float strides = 3;
  if (this->strides_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _strides_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->strides().data(), this->strides_size(), output);
  }

  // repeated float offsets = 4;
  if (this->offsets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _offsets_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->offsets().data(), this->offsets_size(), output);
  }

  // repeated float rotations = 5;
  if (this->rotations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rotations_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotations().data(), this->rotations_size(), output);
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->matched_threshold(), output);
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->unmatched_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGenerator_depara)
}

::google::protobuf::uint8* AnchorGenerator_depara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGenerator_depara)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "second.protos.AnchorGenerator_depara.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // repeated float sizes = 2;
  if (this->sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->sizes_, target);
  }

  // repeated float strides = 3;
  if (this->strides_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _strides_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->strides_, target);
  }

  // repeated float offsets = 4;
  if (this->offsets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _offsets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->offsets_, target);
  }

  // repeated float rotations = 5;
  if (this->rotations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _rotations_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotations_, target);
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->matched_threshold(), target);
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->unmatched_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGenerator_depara)
  return target;
}

size_t AnchorGenerator_depara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGenerator_depara)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sizes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float strides = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->strides_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _strides_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float offsets = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->offsets_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _offsets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rotations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->rotations_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotations_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // float matched_threshold = 6;
  if (this->matched_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float unmatched_threshold = 7;
  if (this->unmatched_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGenerator_depara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGenerator_depara)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGenerator_depara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGenerator_depara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGenerator_depara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGenerator_depara)
    MergeFrom(*source);
  }
}

void AnchorGenerator_depara::MergeFrom(const AnchorGenerator_depara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGenerator_depara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sizes_.MergeFrom(from.sizes_);
  strides_.MergeFrom(from.strides_);
  offsets_.MergeFrom(from.offsets_);
  rotations_.MergeFrom(from.rotations_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.matched_threshold() != 0) {
    set_matched_threshold(from.matched_threshold());
  }
  if (from.unmatched_threshold() != 0) {
    set_unmatched_threshold(from.unmatched_threshold());
  }
}

void AnchorGenerator_depara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGenerator_depara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGenerator_depara::CopyFrom(const AnchorGenerator_depara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGenerator_depara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGenerator_depara::IsInitialized() const {
  return true;
}

void AnchorGenerator_depara::Swap(AnchorGenerator_depara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGenerator_depara::InternalSwap(AnchorGenerator_depara* other) {
  using std::swap;
  sizes_.InternalSwap(&other->sizes_);
  strides_.InternalSwap(&other->strides_);
  offsets_.InternalSwap(&other->offsets_);
  rotations_.InternalSwap(&other->rotations_);
  class_name_.Swap(&other->class_name_);
  swap(matched_threshold_, other->matched_threshold_);
  swap(unmatched_threshold_, other->unmatched_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGenerator_depara::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGenerator_depara

// string class_name = 1;
void AnchorGenerator_depara::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AnchorGenerator_depara::class_name() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.class_name)
  return class_name_.GetNoArena();
}
void AnchorGenerator_depara::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.class_name)
}
#if LANG_CXX11
void AnchorGenerator_depara::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.AnchorGenerator_depara.class_name)
}
#endif
void AnchorGenerator_depara::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.AnchorGenerator_depara.class_name)
}
void AnchorGenerator_depara::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.AnchorGenerator_depara.class_name)
}
::std::string* AnchorGenerator_depara::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.AnchorGenerator_depara.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AnchorGenerator_depara::release_class_name() {
  // @@protoc_insertion_point(field_release:second.protos.AnchorGenerator_depara.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AnchorGenerator_depara::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:second.protos.AnchorGenerator_depara.class_name)
}

// repeated float sizes = 2;
int AnchorGenerator_depara::sizes_size() const {
  return sizes_.size();
}
void AnchorGenerator_depara::clear_sizes() {
  sizes_.Clear();
}
float AnchorGenerator_depara::sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.sizes)
  return sizes_.Get(index);
}
void AnchorGenerator_depara::set_sizes(int index, float value) {
  sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.sizes)
}
void AnchorGenerator_depara::add_sizes(float value) {
  sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.sizes)
  return sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.sizes)
  return &sizes_;
}

// repeated float strides = 3;
int AnchorGenerator_depara::strides_size() const {
  return strides_.size();
}
void AnchorGenerator_depara::clear_strides() {
  strides_.Clear();
}
float AnchorGenerator_depara::strides(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.strides)
  return strides_.Get(index);
}
void AnchorGenerator_depara::set_strides(int index, float value) {
  strides_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.strides)
}
void AnchorGenerator_depara::add_strides(float value) {
  strides_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.strides)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::strides() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.strides)
  return strides_;
}
::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_strides() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.strides)
  return &strides_;
}

// repeated float offsets = 4;
int AnchorGenerator_depara::offsets_size() const {
  return offsets_.size();
}
void AnchorGenerator_depara::clear_offsets() {
  offsets_.Clear();
}
float AnchorGenerator_depara::offsets(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.offsets)
  return offsets_.Get(index);
}
void AnchorGenerator_depara::set_offsets(int index, float value) {
  offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.offsets)
}
void AnchorGenerator_depara::add_offsets(float value) {
  offsets_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.offsets)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::offsets() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.offsets)
  return offsets_;
}
::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.offsets)
  return &offsets_;
}

// repeated float rotations = 5;
int AnchorGenerator_depara::rotations_size() const {
  return rotations_.size();
}
void AnchorGenerator_depara::clear_rotations() {
  rotations_.Clear();
}
float AnchorGenerator_depara::rotations(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.rotations)
  return rotations_.Get(index);
}
void AnchorGenerator_depara::set_rotations(int index, float value) {
  rotations_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.rotations)
}
void AnchorGenerator_depara::add_rotations(float value) {
  rotations_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGenerator_depara.rotations)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGenerator_depara::rotations() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGenerator_depara.rotations)
  return rotations_;
}
::google::protobuf::RepeatedField< float >*
AnchorGenerator_depara::mutable_rotations() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGenerator_depara.rotations)
  return &rotations_;
}

// float matched_threshold = 6;
void AnchorGenerator_depara::clear_matched_threshold() {
  matched_threshold_ = 0;
}
float AnchorGenerator_depara::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.matched_threshold)
  return matched_threshold_;
}
void AnchorGenerator_depara::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.matched_threshold)
}

// float unmatched_threshold = 7;
void AnchorGenerator_depara::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
float AnchorGenerator_depara::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGenerator_depara.unmatched_threshold)
  return unmatched_threshold_;
}
void AnchorGenerator_depara::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGenerator_depara.unmatched_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorGeneratorV1::kAnchorCenterZFieldNumber;
const int AnchorGeneratorV1::kAnchorSizesFieldNumber;
const int AnchorGeneratorV1::kMatchedThresholdFieldNumber;
const int AnchorGeneratorV1::kUnmatchedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorGeneratorV1::AnchorGeneratorV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AnchorGeneratorV1)
}
AnchorGeneratorV1::AnchorGeneratorV1(const AnchorGeneratorV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      anchor_sizes_(from.anchor_sizes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&anchor_center_z_, &from.anchor_center_z_,
    static_cast<size_t>(reinterpret_cast<char*>(&unmatched_threshold_) -
    reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.AnchorGeneratorV1)
}

void AnchorGeneratorV1::SharedCtor() {
  ::memset(&anchor_center_z_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  _cached_size_ = 0;
}

AnchorGeneratorV1::~AnchorGeneratorV1() {
  // @@protoc_insertion_point(destructor:second.protos.AnchorGeneratorV1)
  SharedDtor();
}

void AnchorGeneratorV1::SharedDtor() {
}

void AnchorGeneratorV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorGeneratorV1::descriptor() {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorGeneratorV1& AnchorGeneratorV1::default_instance() {
  protobuf_second_2fprotos_2fanchors_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorGeneratorV1* AnchorGeneratorV1::New(::google::protobuf::Arena* arena) const {
  AnchorGeneratorV1* n = new AnchorGeneratorV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorGeneratorV1::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AnchorGeneratorV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anchor_sizes_.Clear();
  ::memset(&anchor_center_z_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unmatched_threshold_) -
      reinterpret_cast<char*>(&anchor_center_z_)) + sizeof(unmatched_threshold_));
  _internal_metadata_.Clear();
}

bool AnchorGeneratorV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AnchorGeneratorV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float anchor_center_z = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &anchor_center_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float anchor_sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_anchor_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_anchor_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float matched_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &matched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float unmatched_threshold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &unmatched_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AnchorGeneratorV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AnchorGeneratorV1)
  return false;
#undef DO_
}

void AnchorGeneratorV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AnchorGeneratorV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float anchor_center_z = 1;
  if (this->anchor_center_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->anchor_center_z(), output);
  }

  // repeated float anchor_sizes = 2;
  if (this->anchor_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _anchor_sizes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->anchor_sizes().data(), this->anchor_sizes_size(), output);
  }

  // float matched_threshold = 3;
  if (this->matched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->matched_threshold(), output);
  }

  // float unmatched_threshold = 4;
  if (this->unmatched_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->unmatched_threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AnchorGeneratorV1)
}

::google::protobuf::uint8* AnchorGeneratorV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AnchorGeneratorV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float anchor_center_z = 1;
  if (this->anchor_center_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->anchor_center_z(), target);
  }

  // repeated float anchor_sizes = 2;
  if (this->anchor_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _anchor_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->anchor_sizes_, target);
  }

  // float matched_threshold = 3;
  if (this->matched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->matched_threshold(), target);
  }

  // float unmatched_threshold = 4;
  if (this->unmatched_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->unmatched_threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AnchorGeneratorV1)
  return target;
}

size_t AnchorGeneratorV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AnchorGeneratorV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float anchor_sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_sizes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _anchor_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float anchor_center_z = 1;
  if (this->anchor_center_z() != 0) {
    total_size += 1 + 4;
  }

  // float matched_threshold = 3;
  if (this->matched_threshold() != 0) {
    total_size += 1 + 4;
  }

  // float unmatched_threshold = 4;
  if (this->unmatched_threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorGeneratorV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AnchorGeneratorV1)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorGeneratorV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorGeneratorV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AnchorGeneratorV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AnchorGeneratorV1)
    MergeFrom(*source);
  }
}

void AnchorGeneratorV1::MergeFrom(const AnchorGeneratorV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AnchorGeneratorV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  anchor_sizes_.MergeFrom(from.anchor_sizes_);
  if (from.anchor_center_z() != 0) {
    set_anchor_center_z(from.anchor_center_z());
  }
  if (from.matched_threshold() != 0) {
    set_matched_threshold(from.matched_threshold());
  }
  if (from.unmatched_threshold() != 0) {
    set_unmatched_threshold(from.unmatched_threshold());
  }
}

void AnchorGeneratorV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AnchorGeneratorV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorGeneratorV1::CopyFrom(const AnchorGeneratorV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AnchorGeneratorV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorGeneratorV1::IsInitialized() const {
  return true;
}

void AnchorGeneratorV1::Swap(AnchorGeneratorV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorGeneratorV1::InternalSwap(AnchorGeneratorV1* other) {
  using std::swap;
  anchor_sizes_.InternalSwap(&other->anchor_sizes_);
  swap(anchor_center_z_, other->anchor_center_z_);
  swap(matched_threshold_, other->matched_threshold_);
  swap(unmatched_threshold_, other->unmatched_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorGeneratorV1::GetMetadata() const {
  protobuf_second_2fprotos_2fanchors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2fanchors_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorGeneratorV1

// float anchor_center_z = 1;
void AnchorGeneratorV1::clear_anchor_center_z() {
  anchor_center_z_ = 0;
}
float AnchorGeneratorV1::anchor_center_z() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.anchor_center_z)
  return anchor_center_z_;
}
void AnchorGeneratorV1::set_anchor_center_z(float value) {
  
  anchor_center_z_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.anchor_center_z)
}

// repeated float anchor_sizes = 2;
int AnchorGeneratorV1::anchor_sizes_size() const {
  return anchor_sizes_.size();
}
void AnchorGeneratorV1::clear_anchor_sizes() {
  anchor_sizes_.Clear();
}
float AnchorGeneratorV1::anchor_sizes(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.anchor_sizes)
  return anchor_sizes_.Get(index);
}
void AnchorGeneratorV1::set_anchor_sizes(int index, float value) {
  anchor_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.anchor_sizes)
}
void AnchorGeneratorV1::add_anchor_sizes(float value) {
  anchor_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.AnchorGeneratorV1.anchor_sizes)
}
const ::google::protobuf::RepeatedField< float >&
AnchorGeneratorV1::anchor_sizes() const {
  // @@protoc_insertion_point(field_list:second.protos.AnchorGeneratorV1.anchor_sizes)
  return anchor_sizes_;
}
::google::protobuf::RepeatedField< float >*
AnchorGeneratorV1::mutable_anchor_sizes() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.AnchorGeneratorV1.anchor_sizes)
  return &anchor_sizes_;
}

// float matched_threshold = 3;
void AnchorGeneratorV1::clear_matched_threshold() {
  matched_threshold_ = 0;
}
float AnchorGeneratorV1::matched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.matched_threshold)
  return matched_threshold_;
}
void AnchorGeneratorV1::set_matched_threshold(float value) {
  
  matched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.matched_threshold)
}

// float unmatched_threshold = 4;
void AnchorGeneratorV1::clear_unmatched_threshold() {
  unmatched_threshold_ = 0;
}
float AnchorGeneratorV1::unmatched_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.AnchorGeneratorV1.unmatched_threshold)
  return unmatched_threshold_;
}
void AnchorGeneratorV1::set_unmatched_threshold(float value) {
  
  unmatched_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AnchorGeneratorV1.unmatched_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
