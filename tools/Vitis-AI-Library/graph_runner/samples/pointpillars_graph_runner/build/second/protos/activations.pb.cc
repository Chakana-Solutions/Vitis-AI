// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/activations.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/activations.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class ReLUDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReLU>
     _instance;
} _ReLU_default_instance_;
class LeakyReLUDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LeakyReLU>
     _instance;
} _LeakyReLU_default_instance_;
class SwishDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Swish>
     _instance;
} _Swish_default_instance_;
class ELUDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ELU>
     _instance;
} _ELU_default_instance_;
class SoftplusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Softplus>
     _instance;
} _Softplus_default_instance_;
class SoftsignDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Softsign>
     _instance;
} _Softsign_default_instance_;
class ReLU6DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReLU6>
     _instance;
} _ReLU6_default_instance_;
class SELUDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SELU>
     _instance;
} _SELU_default_instance_;
class ActivationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Activation>
     _instance;
  const ::second::protos::ReLU* relu_;
  const ::second::protos::LeakyReLU* leaky_relu_;
  const ::second::protos::Swish* swish_;
  const ::second::protos::ELU* elu_;
  const ::second::protos::Softplus* softplus_;
  const ::second::protos::Softsign* softsign_;
  const ::second::protos::ReLU6* relu6_;
  const ::second::protos::SELU* selu_;
} _Activation_default_instance_;

namespace protobuf_second_2fprotos_2factivations_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReLU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeakyReLU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeakyReLU, leakness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Swish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELU, alpha_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Softplus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Softplus, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Softplus, threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Softsign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReLU6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SELU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(ActivationDefaultTypeInternal, relu_),
  offsetof(ActivationDefaultTypeInternal, leaky_relu_),
  offsetof(ActivationDefaultTypeInternal, swish_),
  offsetof(ActivationDefaultTypeInternal, elu_),
  offsetof(ActivationDefaultTypeInternal, softplus_),
  offsetof(ActivationDefaultTypeInternal, softsign_),
  offsetof(ActivationDefaultTypeInternal, relu6_),
  offsetof(ActivationDefaultTypeInternal, selu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activation, activation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ReLU)},
  { 5, -1, sizeof(LeakyReLU)},
  { 11, -1, sizeof(Swish)},
  { 16, -1, sizeof(ELU)},
  { 22, -1, sizeof(Softplus)},
  { 29, -1, sizeof(Softsign)},
  { 34, -1, sizeof(ReLU6)},
  { 39, -1, sizeof(SELU)},
  { 44, -1, sizeof(Activation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReLU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeakyReLU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Swish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ELU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Softplus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Softsign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReLU6_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SELU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Activation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/activations.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ReLU_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReLU_default_instance_);_LeakyReLU_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LeakyReLU_default_instance_);_Swish_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Swish_default_instance_);_ELU_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ELU_default_instance_);_Softplus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Softplus_default_instance_);_Softsign_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Softsign_default_instance_);_ReLU6_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReLU6_default_instance_);_SELU_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SELU_default_instance_);_Activation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Activation_default_instance_);_Activation_default_instance_.relu_ = const_cast< ::second::protos::ReLU*>(
      ::second::protos::ReLU::internal_default_instance());
  _Activation_default_instance_.leaky_relu_ = const_cast< ::second::protos::LeakyReLU*>(
      ::second::protos::LeakyReLU::internal_default_instance());
  _Activation_default_instance_.swish_ = const_cast< ::second::protos::Swish*>(
      ::second::protos::Swish::internal_default_instance());
  _Activation_default_instance_.elu_ = const_cast< ::second::protos::ELU*>(
      ::second::protos::ELU::internal_default_instance());
  _Activation_default_instance_.softplus_ = const_cast< ::second::protos::Softplus*>(
      ::second::protos::Softplus::internal_default_instance());
  _Activation_default_instance_.softsign_ = const_cast< ::second::protos::Softsign*>(
      ::second::protos::Softsign::internal_default_instance());
  _Activation_default_instance_.relu6_ = const_cast< ::second::protos::ReLU6*>(
      ::second::protos::ReLU6::internal_default_instance());
  _Activation_default_instance_.selu_ = const_cast< ::second::protos::SELU*>(
      ::second::protos::SELU::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037second/protos/activations.proto\022\rsecon"
      "d.protos\"\006\n\004ReLU\"\035\n\tLeakyReLU\022\020\n\010leaknes"
      "s\030\001 \001(\002\"\007\n\005Swish\"\024\n\003ELU\022\r\n\005alpha\030\001 \001(\002\"+"
      "\n\010Softplus\022\014\n\004beta\030\001 \001(\002\022\021\n\tthreshold\030\002 "
      "\001(\002\"\n\n\010Softsign\"\007\n\005ReLU6\"\006\n\004SELU\"\337\002\n\nAct"
      "ivation\022#\n\004relu\030\001 \001(\0132\023.second.protos.Re"
      "LUH\000\022.\n\nleaky_relu\030\002 \001(\0132\030.second.protos"
      ".LeakyReLUH\000\022%\n\005swish\030\003 \001(\0132\024.second.pro"
      "tos.SwishH\000\022!\n\003elu\030\004 \001(\0132\022.second.protos"
      ".ELUH\000\022+\n\010softplus\030\005 \001(\0132\027.second.protos"
      ".SoftplusH\000\022+\n\010softsign\030\006 \001(\0132\027.second.p"
      "rotos.SoftsignH\000\022%\n\005relu6\030\007 \001(\0132\024.second"
      ".protos.ReLU6H\000\022#\n\004selu\030\010 \001(\0132\023.second.p"
      "rotos.SELUH\000B\014\n\nactivationb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 554);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/activations.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2factivations_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReLU::ReLU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ReLU)
}
ReLU::ReLU(const ReLU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:second.protos.ReLU)
}

void ReLU::SharedCtor() {
  _cached_size_ = 0;
}

ReLU::~ReLU() {
  // @@protoc_insertion_point(destructor:second.protos.ReLU)
  SharedDtor();
}

void ReLU::SharedDtor() {
}

void ReLU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReLU::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReLU& ReLU::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReLU* ReLU::New(::google::protobuf::Arena* arena) const {
  ReLU* n = new ReLU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReLU::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReLU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ReLU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ReLU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ReLU)
  return false;
#undef DO_
}

void ReLU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ReLU)
}

::google::protobuf::uint8* ReLU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ReLU)
  return target;
}

size_t ReLU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ReLU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReLU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ReLU)
  GOOGLE_DCHECK_NE(&from, this);
  const ReLU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReLU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ReLU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ReLU)
    MergeFrom(*source);
  }
}

void ReLU::MergeFrom(const ReLU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ReLU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReLU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ReLU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReLU::CopyFrom(const ReLU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ReLU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReLU::IsInitialized() const {
  return true;
}

void ReLU::Swap(ReLU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReLU::InternalSwap(ReLU* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReLU::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReLU

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeakyReLU::kLeaknessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeakyReLU::LeakyReLU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.LeakyReLU)
}
LeakyReLU::LeakyReLU(const LeakyReLU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leakness_ = from.leakness_;
  // @@protoc_insertion_point(copy_constructor:second.protos.LeakyReLU)
}

void LeakyReLU::SharedCtor() {
  leakness_ = 0;
  _cached_size_ = 0;
}

LeakyReLU::~LeakyReLU() {
  // @@protoc_insertion_point(destructor:second.protos.LeakyReLU)
  SharedDtor();
}

void LeakyReLU::SharedDtor() {
}

void LeakyReLU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeakyReLU::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeakyReLU& LeakyReLU::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeakyReLU* LeakyReLU::New(::google::protobuf::Arena* arena) const {
  LeakyReLU* n = new LeakyReLU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeakyReLU::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.LeakyReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leakness_ = 0;
  _internal_metadata_.Clear();
}

bool LeakyReLU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.LeakyReLU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float leakness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &leakness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.LeakyReLU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.LeakyReLU)
  return false;
#undef DO_
}

void LeakyReLU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.LeakyReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float leakness = 1;
  if (this->leakness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->leakness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.LeakyReLU)
}

::google::protobuf::uint8* LeakyReLU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.LeakyReLU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float leakness = 1;
  if (this->leakness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->leakness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.LeakyReLU)
  return target;
}

size_t LeakyReLU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.LeakyReLU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float leakness = 1;
  if (this->leakness() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeakyReLU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.LeakyReLU)
  GOOGLE_DCHECK_NE(&from, this);
  const LeakyReLU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeakyReLU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.LeakyReLU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.LeakyReLU)
    MergeFrom(*source);
  }
}

void LeakyReLU::MergeFrom(const LeakyReLU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.LeakyReLU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leakness() != 0) {
    set_leakness(from.leakness());
  }
}

void LeakyReLU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.LeakyReLU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeakyReLU::CopyFrom(const LeakyReLU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.LeakyReLU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeakyReLU::IsInitialized() const {
  return true;
}

void LeakyReLU::Swap(LeakyReLU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeakyReLU::InternalSwap(LeakyReLU* other) {
  using std::swap;
  swap(leakness_, other->leakness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeakyReLU::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeakyReLU

// float leakness = 1;
void LeakyReLU::clear_leakness() {
  leakness_ = 0;
}
float LeakyReLU::leakness() const {
  // @@protoc_insertion_point(field_get:second.protos.LeakyReLU.leakness)
  return leakness_;
}
void LeakyReLU::set_leakness(float value) {
  
  leakness_ = value;
  // @@protoc_insertion_point(field_set:second.protos.LeakyReLU.leakness)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Swish::Swish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Swish)
}
Swish::Swish(const Swish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:second.protos.Swish)
}

void Swish::SharedCtor() {
  _cached_size_ = 0;
}

Swish::~Swish() {
  // @@protoc_insertion_point(destructor:second.protos.Swish)
  SharedDtor();
}

void Swish::SharedDtor() {
}

void Swish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Swish::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Swish& Swish::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

Swish* Swish::New(::google::protobuf::Arena* arena) const {
  Swish* n = new Swish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Swish::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Swish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Swish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Swish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Swish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Swish)
  return false;
#undef DO_
}

void Swish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Swish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Swish)
}

::google::protobuf::uint8* Swish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Swish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Swish)
  return target;
}

size_t Swish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Swish)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Swish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Swish)
  GOOGLE_DCHECK_NE(&from, this);
  const Swish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Swish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Swish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Swish)
    MergeFrom(*source);
  }
}

void Swish::MergeFrom(const Swish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Swish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Swish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Swish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Swish::CopyFrom(const Swish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Swish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Swish::IsInitialized() const {
  return true;
}

void Swish::Swap(Swish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Swish::InternalSwap(Swish* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Swish::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Swish

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ELU::kAlphaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ELU::ELU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ELU)
}
ELU::ELU(const ELU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alpha_ = from.alpha_;
  // @@protoc_insertion_point(copy_constructor:second.protos.ELU)
}

void ELU::SharedCtor() {
  alpha_ = 0;
  _cached_size_ = 0;
}

ELU::~ELU() {
  // @@protoc_insertion_point(destructor:second.protos.ELU)
  SharedDtor();
}

void ELU::SharedDtor() {
}

void ELU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ELU::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ELU& ELU::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

ELU* ELU::New(::google::protobuf::Arena* arena) const {
  ELU* n = new ELU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ELU::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alpha_ = 0;
  _internal_metadata_.Clear();
}

bool ELU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ELU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float alpha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ELU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ELU)
  return false;
#undef DO_
}

void ELU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float alpha = 1;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->alpha(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ELU)
}

::google::protobuf::uint8* ELU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float alpha = 1;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->alpha(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ELU)
  return target;
}

size_t ELU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ELU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float alpha = 1;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ELU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ELU)
  GOOGLE_DCHECK_NE(&from, this);
  const ELU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ELU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ELU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ELU)
    MergeFrom(*source);
  }
}

void ELU::MergeFrom(const ELU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ELU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
}

void ELU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ELU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ELU::CopyFrom(const ELU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ELU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ELU::IsInitialized() const {
  return true;
}

void ELU::Swap(ELU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ELU::InternalSwap(ELU* other) {
  using std::swap;
  swap(alpha_, other->alpha_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ELU::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ELU

// float alpha = 1;
void ELU::clear_alpha() {
  alpha_ = 0;
}
float ELU::alpha() const {
  // @@protoc_insertion_point(field_get:second.protos.ELU.alpha)
  return alpha_;
}
void ELU::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ELU.alpha)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Softplus::kBetaFieldNumber;
const int Softplus::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Softplus::Softplus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Softplus)
}
Softplus::Softplus(const Softplus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&beta_, &from.beta_,
    static_cast<size_t>(reinterpret_cast<char*>(&threshold_) -
    reinterpret_cast<char*>(&beta_)) + sizeof(threshold_));
  // @@protoc_insertion_point(copy_constructor:second.protos.Softplus)
}

void Softplus::SharedCtor() {
  ::memset(&beta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&beta_)) + sizeof(threshold_));
  _cached_size_ = 0;
}

Softplus::~Softplus() {
  // @@protoc_insertion_point(destructor:second.protos.Softplus)
  SharedDtor();
}

void Softplus::SharedDtor() {
}

void Softplus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Softplus::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Softplus& Softplus::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

Softplus* Softplus::New(::google::protobuf::Arena* arena) const {
  Softplus* n = new Softplus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Softplus::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Softplus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&beta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&beta_)) + sizeof(threshold_));
  _internal_metadata_.Clear();
}

bool Softplus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Softplus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float beta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float threshold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Softplus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Softplus)
  return false;
#undef DO_
}

void Softplus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Softplus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float beta = 1;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->beta(), output);
  }

  // float threshold = 2;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Softplus)
}

::google::protobuf::uint8* Softplus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Softplus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float beta = 1;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->beta(), target);
  }

  // float threshold = 2;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Softplus)
  return target;
}

size_t Softplus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Softplus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float beta = 1;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  // float threshold = 2;
  if (this->threshold() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Softplus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Softplus)
  GOOGLE_DCHECK_NE(&from, this);
  const Softplus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Softplus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Softplus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Softplus)
    MergeFrom(*source);
  }
}

void Softplus::MergeFrom(const Softplus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Softplus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.beta() != 0) {
    set_beta(from.beta());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void Softplus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Softplus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Softplus::CopyFrom(const Softplus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Softplus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Softplus::IsInitialized() const {
  return true;
}

void Softplus::Swap(Softplus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Softplus::InternalSwap(Softplus* other) {
  using std::swap;
  swap(beta_, other->beta_);
  swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Softplus::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Softplus

// float beta = 1;
void Softplus::clear_beta() {
  beta_ = 0;
}
float Softplus::beta() const {
  // @@protoc_insertion_point(field_get:second.protos.Softplus.beta)
  return beta_;
}
void Softplus::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:second.protos.Softplus.beta)
}

// float threshold = 2;
void Softplus::clear_threshold() {
  threshold_ = 0;
}
float Softplus::threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.Softplus.threshold)
  return threshold_;
}
void Softplus::set_threshold(float value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.Softplus.threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Softsign::Softsign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Softsign)
}
Softsign::Softsign(const Softsign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:second.protos.Softsign)
}

void Softsign::SharedCtor() {
  _cached_size_ = 0;
}

Softsign::~Softsign() {
  // @@protoc_insertion_point(destructor:second.protos.Softsign)
  SharedDtor();
}

void Softsign::SharedDtor() {
}

void Softsign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Softsign::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Softsign& Softsign::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

Softsign* Softsign::New(::google::protobuf::Arena* arena) const {
  Softsign* n = new Softsign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Softsign::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Softsign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Softsign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Softsign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Softsign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Softsign)
  return false;
#undef DO_
}

void Softsign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Softsign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Softsign)
}

::google::protobuf::uint8* Softsign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Softsign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Softsign)
  return target;
}

size_t Softsign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Softsign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Softsign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Softsign)
  GOOGLE_DCHECK_NE(&from, this);
  const Softsign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Softsign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Softsign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Softsign)
    MergeFrom(*source);
  }
}

void Softsign::MergeFrom(const Softsign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Softsign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Softsign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Softsign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Softsign::CopyFrom(const Softsign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Softsign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Softsign::IsInitialized() const {
  return true;
}

void Softsign::Swap(Softsign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Softsign::InternalSwap(Softsign* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Softsign::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Softsign

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReLU6::ReLU6()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ReLU6)
}
ReLU6::ReLU6(const ReLU6& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:second.protos.ReLU6)
}

void ReLU6::SharedCtor() {
  _cached_size_ = 0;
}

ReLU6::~ReLU6() {
  // @@protoc_insertion_point(destructor:second.protos.ReLU6)
  SharedDtor();
}

void ReLU6::SharedDtor() {
}

void ReLU6::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReLU6::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReLU6& ReLU6::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReLU6* ReLU6::New(::google::protobuf::Arena* arena) const {
  ReLU6* n = new ReLU6;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReLU6::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ReLU6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReLU6::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ReLU6)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ReLU6)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ReLU6)
  return false;
#undef DO_
}

void ReLU6::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ReLU6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ReLU6)
}

::google::protobuf::uint8* ReLU6::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ReLU6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ReLU6)
  return target;
}

size_t ReLU6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ReLU6)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReLU6::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ReLU6)
  GOOGLE_DCHECK_NE(&from, this);
  const ReLU6* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReLU6>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ReLU6)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ReLU6)
    MergeFrom(*source);
  }
}

void ReLU6::MergeFrom(const ReLU6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ReLU6)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReLU6::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ReLU6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReLU6::CopyFrom(const ReLU6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ReLU6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReLU6::IsInitialized() const {
  return true;
}

void ReLU6::Swap(ReLU6* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReLU6::InternalSwap(ReLU6* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReLU6::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReLU6

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SELU::SELU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.SELU)
}
SELU::SELU(const SELU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:second.protos.SELU)
}

void SELU::SharedCtor() {
  _cached_size_ = 0;
}

SELU::~SELU() {
  // @@protoc_insertion_point(destructor:second.protos.SELU)
  SharedDtor();
}

void SELU::SharedDtor() {
}

void SELU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SELU::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SELU& SELU::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

SELU* SELU::New(::google::protobuf::Arena* arena) const {
  SELU* n = new SELU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SELU::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.SELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SELU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.SELU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.SELU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.SELU)
  return false;
#undef DO_
}

void SELU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.SELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.SELU)
}

::google::protobuf::uint8* SELU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.SELU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.SELU)
  return target;
}

size_t SELU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.SELU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SELU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.SELU)
  GOOGLE_DCHECK_NE(&from, this);
  const SELU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SELU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.SELU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.SELU)
    MergeFrom(*source);
  }
}

void SELU::MergeFrom(const SELU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.SELU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SELU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.SELU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SELU::CopyFrom(const SELU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.SELU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SELU::IsInitialized() const {
  return true;
}

void SELU::Swap(SELU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SELU::InternalSwap(SELU* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SELU::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SELU

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Activation::kReluFieldNumber;
const int Activation::kLeakyReluFieldNumber;
const int Activation::kSwishFieldNumber;
const int Activation::kEluFieldNumber;
const int Activation::kSoftplusFieldNumber;
const int Activation::kSoftsignFieldNumber;
const int Activation::kRelu6FieldNumber;
const int Activation::kSeluFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Activation::Activation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Activation)
}
Activation::Activation(const Activation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_activation();
  switch (from.activation_case()) {
    case kRelu: {
      mutable_relu()->::second::protos::ReLU::MergeFrom(from.relu());
      break;
    }
    case kLeakyRelu: {
      mutable_leaky_relu()->::second::protos::LeakyReLU::MergeFrom(from.leaky_relu());
      break;
    }
    case kSwish: {
      mutable_swish()->::second::protos::Swish::MergeFrom(from.swish());
      break;
    }
    case kElu: {
      mutable_elu()->::second::protos::ELU::MergeFrom(from.elu());
      break;
    }
    case kSoftplus: {
      mutable_softplus()->::second::protos::Softplus::MergeFrom(from.softplus());
      break;
    }
    case kSoftsign: {
      mutable_softsign()->::second::protos::Softsign::MergeFrom(from.softsign());
      break;
    }
    case kRelu6: {
      mutable_relu6()->::second::protos::ReLU6::MergeFrom(from.relu6());
      break;
    }
    case kSelu: {
      mutable_selu()->::second::protos::SELU::MergeFrom(from.selu());
      break;
    }
    case ACTIVATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.Activation)
}

void Activation::SharedCtor() {
  clear_has_activation();
  _cached_size_ = 0;
}

Activation::~Activation() {
  // @@protoc_insertion_point(destructor:second.protos.Activation)
  SharedDtor();
}

void Activation::SharedDtor() {
  if (has_activation()) {
    clear_activation();
  }
}

void Activation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activation::descriptor() {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Activation& Activation::default_instance() {
  protobuf_second_2fprotos_2factivations_2eproto::InitDefaults();
  return *internal_default_instance();
}

Activation* Activation::New(::google::protobuf::Arena* arena) const {
  Activation* n = new Activation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Activation::clear_activation() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.Activation)
  switch (activation_case()) {
    case kRelu: {
      delete activation_.relu_;
      break;
    }
    case kLeakyRelu: {
      delete activation_.leaky_relu_;
      break;
    }
    case kSwish: {
      delete activation_.swish_;
      break;
    }
    case kElu: {
      delete activation_.elu_;
      break;
    }
    case kSoftplus: {
      delete activation_.softplus_;
      break;
    }
    case kSoftsign: {
      delete activation_.softsign_;
      break;
    }
    case kRelu6: {
      delete activation_.relu6_;
      break;
    }
    case kSelu: {
      delete activation_.selu_;
      break;
    }
    case ACTIVATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTIVATION_NOT_SET;
}


void Activation::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Activation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_activation();
  _internal_metadata_.Clear();
}

bool Activation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Activation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.ReLU relu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.LeakyReLU leaky_relu = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_leaky_relu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.Swish swish = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_swish()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.ELU elu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_elu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.Softplus softplus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_softplus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.Softsign softsign = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_softsign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.ReLU6 relu6 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_relu6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.SELU selu = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Activation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Activation)
  return false;
#undef DO_
}

void Activation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Activation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.ReLU relu = 1;
  if (has_relu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *activation_.relu_, output);
  }

  // .second.protos.LeakyReLU leaky_relu = 2;
  if (has_leaky_relu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *activation_.leaky_relu_, output);
  }

  // .second.protos.Swish swish = 3;
  if (has_swish()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *activation_.swish_, output);
  }

  // .second.protos.ELU elu = 4;
  if (has_elu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *activation_.elu_, output);
  }

  // .second.protos.Softplus softplus = 5;
  if (has_softplus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *activation_.softplus_, output);
  }

  // .second.protos.Softsign softsign = 6;
  if (has_softsign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *activation_.softsign_, output);
  }

  // .second.protos.ReLU6 relu6 = 7;
  if (has_relu6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *activation_.relu6_, output);
  }

  // .second.protos.SELU selu = 8;
  if (has_selu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *activation_.selu_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Activation)
}

::google::protobuf::uint8* Activation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Activation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.ReLU relu = 1;
  if (has_relu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *activation_.relu_, deterministic, target);
  }

  // .second.protos.LeakyReLU leaky_relu = 2;
  if (has_leaky_relu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *activation_.leaky_relu_, deterministic, target);
  }

  // .second.protos.Swish swish = 3;
  if (has_swish()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *activation_.swish_, deterministic, target);
  }

  // .second.protos.ELU elu = 4;
  if (has_elu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *activation_.elu_, deterministic, target);
  }

  // .second.protos.Softplus softplus = 5;
  if (has_softplus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *activation_.softplus_, deterministic, target);
  }

  // .second.protos.Softsign softsign = 6;
  if (has_softsign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *activation_.softsign_, deterministic, target);
  }

  // .second.protos.ReLU6 relu6 = 7;
  if (has_relu6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *activation_.relu6_, deterministic, target);
  }

  // .second.protos.SELU selu = 8;
  if (has_selu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *activation_.selu_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Activation)
  return target;
}

size_t Activation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Activation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (activation_case()) {
    // .second.protos.ReLU relu = 1;
    case kRelu: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.relu_);
      break;
    }
    // .second.protos.LeakyReLU leaky_relu = 2;
    case kLeakyRelu: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.leaky_relu_);
      break;
    }
    // .second.protos.Swish swish = 3;
    case kSwish: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.swish_);
      break;
    }
    // .second.protos.ELU elu = 4;
    case kElu: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.elu_);
      break;
    }
    // .second.protos.Softplus softplus = 5;
    case kSoftplus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.softplus_);
      break;
    }
    // .second.protos.Softsign softsign = 6;
    case kSoftsign: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.softsign_);
      break;
    }
    // .second.protos.ReLU6 relu6 = 7;
    case kRelu6: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.relu6_);
      break;
    }
    // .second.protos.SELU selu = 8;
    case kSelu: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *activation_.selu_);
      break;
    }
    case ACTIVATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Activation)
  GOOGLE_DCHECK_NE(&from, this);
  const Activation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Activation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Activation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Activation)
    MergeFrom(*source);
  }
}

void Activation::MergeFrom(const Activation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Activation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.activation_case()) {
    case kRelu: {
      mutable_relu()->::second::protos::ReLU::MergeFrom(from.relu());
      break;
    }
    case kLeakyRelu: {
      mutable_leaky_relu()->::second::protos::LeakyReLU::MergeFrom(from.leaky_relu());
      break;
    }
    case kSwish: {
      mutable_swish()->::second::protos::Swish::MergeFrom(from.swish());
      break;
    }
    case kElu: {
      mutable_elu()->::second::protos::ELU::MergeFrom(from.elu());
      break;
    }
    case kSoftplus: {
      mutable_softplus()->::second::protos::Softplus::MergeFrom(from.softplus());
      break;
    }
    case kSoftsign: {
      mutable_softsign()->::second::protos::Softsign::MergeFrom(from.softsign());
      break;
    }
    case kRelu6: {
      mutable_relu6()->::second::protos::ReLU6::MergeFrom(from.relu6());
      break;
    }
    case kSelu: {
      mutable_selu()->::second::protos::SELU::MergeFrom(from.selu());
      break;
    }
    case ACTIVATION_NOT_SET: {
      break;
    }
  }
}

void Activation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Activation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activation::CopyFrom(const Activation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Activation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activation::IsInitialized() const {
  return true;
}

void Activation::Swap(Activation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Activation::InternalSwap(Activation* other) {
  using std::swap;
  swap(activation_, other->activation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Activation::GetMetadata() const {
  protobuf_second_2fprotos_2factivations_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2factivations_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Activation

// .second.protos.ReLU relu = 1;
bool Activation::has_relu() const {
  return activation_case() == kRelu;
}
void Activation::set_has_relu() {
  _oneof_case_[0] = kRelu;
}
void Activation::clear_relu() {
  if (has_relu()) {
    delete activation_.relu_;
    clear_has_activation();
  }
}
 const ::second::protos::ReLU& Activation::relu() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.relu)
  return has_relu()
      ? *activation_.relu_
      : ::second::protos::ReLU::default_instance();
}
::second::protos::ReLU* Activation::mutable_relu() {
  if (!has_relu()) {
    clear_activation();
    set_has_relu();
    activation_.relu_ = new ::second::protos::ReLU;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.relu)
  return activation_.relu_;
}
::second::protos::ReLU* Activation::release_relu() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.relu)
  if (has_relu()) {
    clear_has_activation();
    ::second::protos::ReLU* temp = activation_.relu_;
    activation_.relu_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_relu(::second::protos::ReLU* relu) {
  clear_activation();
  if (relu) {
    set_has_relu();
    activation_.relu_ = relu;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.relu)
}

// .second.protos.LeakyReLU leaky_relu = 2;
bool Activation::has_leaky_relu() const {
  return activation_case() == kLeakyRelu;
}
void Activation::set_has_leaky_relu() {
  _oneof_case_[0] = kLeakyRelu;
}
void Activation::clear_leaky_relu() {
  if (has_leaky_relu()) {
    delete activation_.leaky_relu_;
    clear_has_activation();
  }
}
 const ::second::protos::LeakyReLU& Activation::leaky_relu() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.leaky_relu)
  return has_leaky_relu()
      ? *activation_.leaky_relu_
      : ::second::protos::LeakyReLU::default_instance();
}
::second::protos::LeakyReLU* Activation::mutable_leaky_relu() {
  if (!has_leaky_relu()) {
    clear_activation();
    set_has_leaky_relu();
    activation_.leaky_relu_ = new ::second::protos::LeakyReLU;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.leaky_relu)
  return activation_.leaky_relu_;
}
::second::protos::LeakyReLU* Activation::release_leaky_relu() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.leaky_relu)
  if (has_leaky_relu()) {
    clear_has_activation();
    ::second::protos::LeakyReLU* temp = activation_.leaky_relu_;
    activation_.leaky_relu_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_leaky_relu(::second::protos::LeakyReLU* leaky_relu) {
  clear_activation();
  if (leaky_relu) {
    set_has_leaky_relu();
    activation_.leaky_relu_ = leaky_relu;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.leaky_relu)
}

// .second.protos.Swish swish = 3;
bool Activation::has_swish() const {
  return activation_case() == kSwish;
}
void Activation::set_has_swish() {
  _oneof_case_[0] = kSwish;
}
void Activation::clear_swish() {
  if (has_swish()) {
    delete activation_.swish_;
    clear_has_activation();
  }
}
 const ::second::protos::Swish& Activation::swish() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.swish)
  return has_swish()
      ? *activation_.swish_
      : ::second::protos::Swish::default_instance();
}
::second::protos::Swish* Activation::mutable_swish() {
  if (!has_swish()) {
    clear_activation();
    set_has_swish();
    activation_.swish_ = new ::second::protos::Swish;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.swish)
  return activation_.swish_;
}
::second::protos::Swish* Activation::release_swish() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.swish)
  if (has_swish()) {
    clear_has_activation();
    ::second::protos::Swish* temp = activation_.swish_;
    activation_.swish_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_swish(::second::protos::Swish* swish) {
  clear_activation();
  if (swish) {
    set_has_swish();
    activation_.swish_ = swish;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.swish)
}

// .second.protos.ELU elu = 4;
bool Activation::has_elu() const {
  return activation_case() == kElu;
}
void Activation::set_has_elu() {
  _oneof_case_[0] = kElu;
}
void Activation::clear_elu() {
  if (has_elu()) {
    delete activation_.elu_;
    clear_has_activation();
  }
}
 const ::second::protos::ELU& Activation::elu() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.elu)
  return has_elu()
      ? *activation_.elu_
      : ::second::protos::ELU::default_instance();
}
::second::protos::ELU* Activation::mutable_elu() {
  if (!has_elu()) {
    clear_activation();
    set_has_elu();
    activation_.elu_ = new ::second::protos::ELU;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.elu)
  return activation_.elu_;
}
::second::protos::ELU* Activation::release_elu() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.elu)
  if (has_elu()) {
    clear_has_activation();
    ::second::protos::ELU* temp = activation_.elu_;
    activation_.elu_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_elu(::second::protos::ELU* elu) {
  clear_activation();
  if (elu) {
    set_has_elu();
    activation_.elu_ = elu;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.elu)
}

// .second.protos.Softplus softplus = 5;
bool Activation::has_softplus() const {
  return activation_case() == kSoftplus;
}
void Activation::set_has_softplus() {
  _oneof_case_[0] = kSoftplus;
}
void Activation::clear_softplus() {
  if (has_softplus()) {
    delete activation_.softplus_;
    clear_has_activation();
  }
}
 const ::second::protos::Softplus& Activation::softplus() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.softplus)
  return has_softplus()
      ? *activation_.softplus_
      : ::second::protos::Softplus::default_instance();
}
::second::protos::Softplus* Activation::mutable_softplus() {
  if (!has_softplus()) {
    clear_activation();
    set_has_softplus();
    activation_.softplus_ = new ::second::protos::Softplus;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.softplus)
  return activation_.softplus_;
}
::second::protos::Softplus* Activation::release_softplus() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.softplus)
  if (has_softplus()) {
    clear_has_activation();
    ::second::protos::Softplus* temp = activation_.softplus_;
    activation_.softplus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_softplus(::second::protos::Softplus* softplus) {
  clear_activation();
  if (softplus) {
    set_has_softplus();
    activation_.softplus_ = softplus;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.softplus)
}

// .second.protos.Softsign softsign = 6;
bool Activation::has_softsign() const {
  return activation_case() == kSoftsign;
}
void Activation::set_has_softsign() {
  _oneof_case_[0] = kSoftsign;
}
void Activation::clear_softsign() {
  if (has_softsign()) {
    delete activation_.softsign_;
    clear_has_activation();
  }
}
 const ::second::protos::Softsign& Activation::softsign() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.softsign)
  return has_softsign()
      ? *activation_.softsign_
      : ::second::protos::Softsign::default_instance();
}
::second::protos::Softsign* Activation::mutable_softsign() {
  if (!has_softsign()) {
    clear_activation();
    set_has_softsign();
    activation_.softsign_ = new ::second::protos::Softsign;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.softsign)
  return activation_.softsign_;
}
::second::protos::Softsign* Activation::release_softsign() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.softsign)
  if (has_softsign()) {
    clear_has_activation();
    ::second::protos::Softsign* temp = activation_.softsign_;
    activation_.softsign_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_softsign(::second::protos::Softsign* softsign) {
  clear_activation();
  if (softsign) {
    set_has_softsign();
    activation_.softsign_ = softsign;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.softsign)
}

// .second.protos.ReLU6 relu6 = 7;
bool Activation::has_relu6() const {
  return activation_case() == kRelu6;
}
void Activation::set_has_relu6() {
  _oneof_case_[0] = kRelu6;
}
void Activation::clear_relu6() {
  if (has_relu6()) {
    delete activation_.relu6_;
    clear_has_activation();
  }
}
 const ::second::protos::ReLU6& Activation::relu6() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.relu6)
  return has_relu6()
      ? *activation_.relu6_
      : ::second::protos::ReLU6::default_instance();
}
::second::protos::ReLU6* Activation::mutable_relu6() {
  if (!has_relu6()) {
    clear_activation();
    set_has_relu6();
    activation_.relu6_ = new ::second::protos::ReLU6;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.relu6)
  return activation_.relu6_;
}
::second::protos::ReLU6* Activation::release_relu6() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.relu6)
  if (has_relu6()) {
    clear_has_activation();
    ::second::protos::ReLU6* temp = activation_.relu6_;
    activation_.relu6_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_relu6(::second::protos::ReLU6* relu6) {
  clear_activation();
  if (relu6) {
    set_has_relu6();
    activation_.relu6_ = relu6;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.relu6)
}

// .second.protos.SELU selu = 8;
bool Activation::has_selu() const {
  return activation_case() == kSelu;
}
void Activation::set_has_selu() {
  _oneof_case_[0] = kSelu;
}
void Activation::clear_selu() {
  if (has_selu()) {
    delete activation_.selu_;
    clear_has_activation();
  }
}
 const ::second::protos::SELU& Activation::selu() const {
  // @@protoc_insertion_point(field_get:second.protos.Activation.selu)
  return has_selu()
      ? *activation_.selu_
      : ::second::protos::SELU::default_instance();
}
::second::protos::SELU* Activation::mutable_selu() {
  if (!has_selu()) {
    clear_activation();
    set_has_selu();
    activation_.selu_ = new ::second::protos::SELU;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Activation.selu)
  return activation_.selu_;
}
::second::protos::SELU* Activation::release_selu() {
  // @@protoc_insertion_point(field_release:second.protos.Activation.selu)
  if (has_selu()) {
    clear_has_activation();
    ::second::protos::SELU* temp = activation_.selu_;
    activation_.selu_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Activation::set_allocated_selu(::second::protos::SELU* selu) {
  clear_activation();
  if (selu) {
    set_has_selu();
    activation_.selu_ = selu;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Activation.selu)
}

bool Activation::has_activation() const {
  return activation_case() != ACTIVATION_NOT_SET;
}
void Activation::clear_has_activation() {
  _oneof_case_[0] = ACTIVATION_NOT_SET;
}
Activation::ActivationCase Activation::activation_case() const {
  return Activation::ActivationCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
