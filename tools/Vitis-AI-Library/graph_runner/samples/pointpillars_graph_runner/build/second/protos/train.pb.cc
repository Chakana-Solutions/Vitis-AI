// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/train.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/train.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class RegularizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Regularizer>
     _instance;
  const ::second::protos::L1Regularizer* l1_regularizer_;
  const ::second::protos::L2Regularizer* l2_regularizer_;
} _Regularizer_default_instance_;
class L1RegularizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<L1Regularizer>
     _instance;
} _L1Regularizer_default_instance_;
class L2RegularizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<L2Regularizer>
     _instance;
} _L2Regularizer_default_instance_;
class TrainConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TrainConfig>
     _instance;
} _TrainConfig_default_instance_;

namespace protobuf_second_2fprotos_2ftrain_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Regularizer, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Regularizer, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(RegularizerDefaultTypeInternal, l1_regularizer_),
  offsetof(RegularizerDefaultTypeInternal, l2_regularizer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Regularizer, regularizer_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(L1Regularizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(L1Regularizer, weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(L2Regularizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(L2Regularizer, weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, optimizer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, inter_op_parallelism_threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, intra_op_parallelism_threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, steps_per_eval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, save_checkpoints_secs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, save_summary_steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, enable_mixed_precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, loss_scale_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainConfig, clear_metrics_every_epoch_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Regularizer)},
  { 8, -1, sizeof(L1Regularizer)},
  { 14, -1, sizeof(L2Regularizer)},
  { 20, -1, sizeof(TrainConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Regularizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_L1Regularizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_L2Regularizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrainConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/train.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::second::protos::protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  ::second::protos::protobuf_second_2fprotos_2fpreprocess_2eproto::InitDefaults();
  _Regularizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Regularizer_default_instance_);_L1Regularizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_L1Regularizer_default_instance_);_L2Regularizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_L2Regularizer_default_instance_);_TrainConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TrainConfig_default_instance_);_Regularizer_default_instance_.l1_regularizer_ = const_cast< ::second::protos::L1Regularizer*>(
      ::second::protos::L1Regularizer::internal_default_instance());
  _Regularizer_default_instance_.l2_regularizer_ = const_cast< ::second::protos::L2Regularizer*>(
      ::second::protos::L2Regularizer::internal_default_instance());
  _TrainConfig_default_instance_._instance.get_mutable()->optimizer_ = const_cast< ::second::protos::Optimizer*>(
      ::second::protos::Optimizer::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031second/protos/train.proto\022\rsecond.prot"
      "os\032\035second/protos/optimizer.proto\032\036secon"
      "d/protos/preprocess.proto\"\222\001\n\013Regularize"
      "r\0226\n\016l1_regularizer\030\001 \001(\0132\034.second.proto"
      "s.L1RegularizerH\000\0226\n\016l2_regularizer\030\002 \001("
      "\0132\034.second.protos.L2RegularizerH\000B\023\n\021reg"
      "ularizer_oneof\"\037\n\rL1Regularizer\022\016\n\006weigh"
      "t\030\001 \001(\002\"\037\n\rL2Regularizer\022\016\n\006weight\030\001 \001(\002"
      "\"\306\002\n\013TrainConfig\022+\n\toptimizer\030\001 \001(\0132\030.se"
      "cond.protos.Optimizer\022$\n\034inter_op_parall"
      "elism_threads\030\003 \001(\r\022$\n\034intra_op_parallel"
      "ism_threads\030\004 \001(\r\022\r\n\005steps\030\005 \001(\r\022\026\n\016step"
      "s_per_eval\030\006 \001(\r\022\035\n\025save_checkpoints_sec"
      "s\030\007 \001(\r\022\032\n\022save_summary_steps\030\010 \001(\r\022\036\n\026e"
      "nable_mixed_precision\030\t \001(\010\022\031\n\021loss_scal"
      "e_factor\030\n \001(\002\022!\n\031clear_metrics_every_ep"
      "och\030\013 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 657);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/train.proto", &protobuf_RegisterTypes);
  ::second::protos::protobuf_second_2fprotos_2foptimizer_2eproto::AddDescriptors();
  ::second::protos::protobuf_second_2fprotos_2fpreprocess_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2ftrain_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Regularizer::kL1RegularizerFieldNumber;
const int Regularizer::kL2RegularizerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Regularizer::Regularizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Regularizer)
}
Regularizer::Regularizer(const Regularizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_regularizer_oneof();
  switch (from.regularizer_oneof_case()) {
    case kL1Regularizer: {
      mutable_l1_regularizer()->::second::protos::L1Regularizer::MergeFrom(from.l1_regularizer());
      break;
    }
    case kL2Regularizer: {
      mutable_l2_regularizer()->::second::protos::L2Regularizer::MergeFrom(from.l2_regularizer());
      break;
    }
    case REGULARIZER_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.Regularizer)
}

void Regularizer::SharedCtor() {
  clear_has_regularizer_oneof();
  _cached_size_ = 0;
}

Regularizer::~Regularizer() {
  // @@protoc_insertion_point(destructor:second.protos.Regularizer)
  SharedDtor();
}

void Regularizer::SharedDtor() {
  if (has_regularizer_oneof()) {
    clear_regularizer_oneof();
  }
}

void Regularizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Regularizer::descriptor() {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Regularizer& Regularizer::default_instance() {
  protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

Regularizer* Regularizer::New(::google::protobuf::Arena* arena) const {
  Regularizer* n = new Regularizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Regularizer::clear_regularizer_oneof() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.Regularizer)
  switch (regularizer_oneof_case()) {
    case kL1Regularizer: {
      delete regularizer_oneof_.l1_regularizer_;
      break;
    }
    case kL2Regularizer: {
      delete regularizer_oneof_.l2_regularizer_;
      break;
    }
    case REGULARIZER_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REGULARIZER_ONEOF_NOT_SET;
}


void Regularizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_regularizer_oneof();
  _internal_metadata_.Clear();
}

bool Regularizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Regularizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.L1Regularizer l1_regularizer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_l1_regularizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.L2Regularizer l2_regularizer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_l2_regularizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Regularizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Regularizer)
  return false;
#undef DO_
}

void Regularizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.L1Regularizer l1_regularizer = 1;
  if (has_l1_regularizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *regularizer_oneof_.l1_regularizer_, output);
  }

  // .second.protos.L2Regularizer l2_regularizer = 2;
  if (has_l2_regularizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *regularizer_oneof_.l2_regularizer_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Regularizer)
}

::google::protobuf::uint8* Regularizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.L1Regularizer l1_regularizer = 1;
  if (has_l1_regularizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *regularizer_oneof_.l1_regularizer_, deterministic, target);
  }

  // .second.protos.L2Regularizer l2_regularizer = 2;
  if (has_l2_regularizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *regularizer_oneof_.l2_regularizer_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Regularizer)
  return target;
}

size_t Regularizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Regularizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (regularizer_oneof_case()) {
    // .second.protos.L1Regularizer l1_regularizer = 1;
    case kL1Regularizer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *regularizer_oneof_.l1_regularizer_);
      break;
    }
    // .second.protos.L2Regularizer l2_regularizer = 2;
    case kL2Regularizer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *regularizer_oneof_.l2_regularizer_);
      break;
    }
    case REGULARIZER_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Regularizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  const Regularizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Regularizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Regularizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Regularizer)
    MergeFrom(*source);
  }
}

void Regularizer::MergeFrom(const Regularizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.regularizer_oneof_case()) {
    case kL1Regularizer: {
      mutable_l1_regularizer()->::second::protos::L1Regularizer::MergeFrom(from.l1_regularizer());
      break;
    }
    case kL2Regularizer: {
      mutable_l2_regularizer()->::second::protos::L2Regularizer::MergeFrom(from.l2_regularizer());
      break;
    }
    case REGULARIZER_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Regularizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Regularizer::CopyFrom(const Regularizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Regularizer::IsInitialized() const {
  return true;
}

void Regularizer::Swap(Regularizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Regularizer::InternalSwap(Regularizer* other) {
  using std::swap;
  swap(regularizer_oneof_, other->regularizer_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Regularizer::GetMetadata() const {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Regularizer

// .second.protos.L1Regularizer l1_regularizer = 1;
bool Regularizer::has_l1_regularizer() const {
  return regularizer_oneof_case() == kL1Regularizer;
}
void Regularizer::set_has_l1_regularizer() {
  _oneof_case_[0] = kL1Regularizer;
}
void Regularizer::clear_l1_regularizer() {
  if (has_l1_regularizer()) {
    delete regularizer_oneof_.l1_regularizer_;
    clear_has_regularizer_oneof();
  }
}
 const ::second::protos::L1Regularizer& Regularizer::l1_regularizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Regularizer.l1_regularizer)
  return has_l1_regularizer()
      ? *regularizer_oneof_.l1_regularizer_
      : ::second::protos::L1Regularizer::default_instance();
}
::second::protos::L1Regularizer* Regularizer::mutable_l1_regularizer() {
  if (!has_l1_regularizer()) {
    clear_regularizer_oneof();
    set_has_l1_regularizer();
    regularizer_oneof_.l1_regularizer_ = new ::second::protos::L1Regularizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Regularizer.l1_regularizer)
  return regularizer_oneof_.l1_regularizer_;
}
::second::protos::L1Regularizer* Regularizer::release_l1_regularizer() {
  // @@protoc_insertion_point(field_release:second.protos.Regularizer.l1_regularizer)
  if (has_l1_regularizer()) {
    clear_has_regularizer_oneof();
    ::second::protos::L1Regularizer* temp = regularizer_oneof_.l1_regularizer_;
    regularizer_oneof_.l1_regularizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Regularizer::set_allocated_l1_regularizer(::second::protos::L1Regularizer* l1_regularizer) {
  clear_regularizer_oneof();
  if (l1_regularizer) {
    set_has_l1_regularizer();
    regularizer_oneof_.l1_regularizer_ = l1_regularizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Regularizer.l1_regularizer)
}

// .second.protos.L2Regularizer l2_regularizer = 2;
bool Regularizer::has_l2_regularizer() const {
  return regularizer_oneof_case() == kL2Regularizer;
}
void Regularizer::set_has_l2_regularizer() {
  _oneof_case_[0] = kL2Regularizer;
}
void Regularizer::clear_l2_regularizer() {
  if (has_l2_regularizer()) {
    delete regularizer_oneof_.l2_regularizer_;
    clear_has_regularizer_oneof();
  }
}
 const ::second::protos::L2Regularizer& Regularizer::l2_regularizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Regularizer.l2_regularizer)
  return has_l2_regularizer()
      ? *regularizer_oneof_.l2_regularizer_
      : ::second::protos::L2Regularizer::default_instance();
}
::second::protos::L2Regularizer* Regularizer::mutable_l2_regularizer() {
  if (!has_l2_regularizer()) {
    clear_regularizer_oneof();
    set_has_l2_regularizer();
    regularizer_oneof_.l2_regularizer_ = new ::second::protos::L2Regularizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Regularizer.l2_regularizer)
  return regularizer_oneof_.l2_regularizer_;
}
::second::protos::L2Regularizer* Regularizer::release_l2_regularizer() {
  // @@protoc_insertion_point(field_release:second.protos.Regularizer.l2_regularizer)
  if (has_l2_regularizer()) {
    clear_has_regularizer_oneof();
    ::second::protos::L2Regularizer* temp = regularizer_oneof_.l2_regularizer_;
    regularizer_oneof_.l2_regularizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Regularizer::set_allocated_l2_regularizer(::second::protos::L2Regularizer* l2_regularizer) {
  clear_regularizer_oneof();
  if (l2_regularizer) {
    set_has_l2_regularizer();
    regularizer_oneof_.l2_regularizer_ = l2_regularizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Regularizer.l2_regularizer)
}

bool Regularizer::has_regularizer_oneof() const {
  return regularizer_oneof_case() != REGULARIZER_ONEOF_NOT_SET;
}
void Regularizer::clear_has_regularizer_oneof() {
  _oneof_case_[0] = REGULARIZER_ONEOF_NOT_SET;
}
Regularizer::RegularizerOneofCase Regularizer::regularizer_oneof_case() const {
  return Regularizer::RegularizerOneofCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L1Regularizer::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L1Regularizer::L1Regularizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.L1Regularizer)
}
L1Regularizer::L1Regularizer(const L1Regularizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:second.protos.L1Regularizer)
}

void L1Regularizer::SharedCtor() {
  weight_ = 0;
  _cached_size_ = 0;
}

L1Regularizer::~L1Regularizer() {
  // @@protoc_insertion_point(destructor:second.protos.L1Regularizer)
  SharedDtor();
}

void L1Regularizer::SharedDtor() {
}

void L1Regularizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* L1Regularizer::descriptor() {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L1Regularizer& L1Regularizer::default_instance() {
  protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

L1Regularizer* L1Regularizer::New(::google::protobuf::Arena* arena) const {
  L1Regularizer* n = new L1Regularizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void L1Regularizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.L1Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weight_ = 0;
  _internal_metadata_.Clear();
}

bool L1Regularizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.L1Regularizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.L1Regularizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.L1Regularizer)
  return false;
#undef DO_
}

void L1Regularizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.L1Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->weight(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.L1Regularizer)
}

::google::protobuf::uint8* L1Regularizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.L1Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->weight(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.L1Regularizer)
  return target;
}

size_t L1Regularizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.L1Regularizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float weight = 1;
  if (this->weight() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void L1Regularizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.L1Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  const L1Regularizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L1Regularizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.L1Regularizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.L1Regularizer)
    MergeFrom(*source);
  }
}

void L1Regularizer::MergeFrom(const L1Regularizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.L1Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void L1Regularizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.L1Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L1Regularizer::CopyFrom(const L1Regularizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.L1Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L1Regularizer::IsInitialized() const {
  return true;
}

void L1Regularizer::Swap(L1Regularizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L1Regularizer::InternalSwap(L1Regularizer* other) {
  using std::swap;
  swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata L1Regularizer::GetMetadata() const {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// L1Regularizer

// float weight = 1;
void L1Regularizer::clear_weight() {
  weight_ = 0;
}
float L1Regularizer::weight() const {
  // @@protoc_insertion_point(field_get:second.protos.L1Regularizer.weight)
  return weight_;
}
void L1Regularizer::set_weight(float value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:second.protos.L1Regularizer.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L2Regularizer::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L2Regularizer::L2Regularizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.L2Regularizer)
}
L2Regularizer::L2Regularizer(const L2Regularizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:second.protos.L2Regularizer)
}

void L2Regularizer::SharedCtor() {
  weight_ = 0;
  _cached_size_ = 0;
}

L2Regularizer::~L2Regularizer() {
  // @@protoc_insertion_point(destructor:second.protos.L2Regularizer)
  SharedDtor();
}

void L2Regularizer::SharedDtor() {
}

void L2Regularizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* L2Regularizer::descriptor() {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L2Regularizer& L2Regularizer::default_instance() {
  protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

L2Regularizer* L2Regularizer::New(::google::protobuf::Arena* arena) const {
  L2Regularizer* n = new L2Regularizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void L2Regularizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.L2Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weight_ = 0;
  _internal_metadata_.Clear();
}

bool L2Regularizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.L2Regularizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.L2Regularizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.L2Regularizer)
  return false;
#undef DO_
}

void L2Regularizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.L2Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->weight(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.L2Regularizer)
}

::google::protobuf::uint8* L2Regularizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.L2Regularizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->weight(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.L2Regularizer)
  return target;
}

size_t L2Regularizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.L2Regularizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float weight = 1;
  if (this->weight() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void L2Regularizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.L2Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  const L2Regularizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L2Regularizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.L2Regularizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.L2Regularizer)
    MergeFrom(*source);
  }
}

void L2Regularizer::MergeFrom(const L2Regularizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.L2Regularizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void L2Regularizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.L2Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L2Regularizer::CopyFrom(const L2Regularizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.L2Regularizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L2Regularizer::IsInitialized() const {
  return true;
}

void L2Regularizer::Swap(L2Regularizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L2Regularizer::InternalSwap(L2Regularizer* other) {
  using std::swap;
  swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata L2Regularizer::GetMetadata() const {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// L2Regularizer

// float weight = 1;
void L2Regularizer::clear_weight() {
  weight_ = 0;
}
float L2Regularizer::weight() const {
  // @@protoc_insertion_point(field_get:second.protos.L2Regularizer.weight)
  return weight_;
}
void L2Regularizer::set_weight(float value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:second.protos.L2Regularizer.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainConfig::kOptimizerFieldNumber;
const int TrainConfig::kInterOpParallelismThreadsFieldNumber;
const int TrainConfig::kIntraOpParallelismThreadsFieldNumber;
const int TrainConfig::kStepsFieldNumber;
const int TrainConfig::kStepsPerEvalFieldNumber;
const int TrainConfig::kSaveCheckpointsSecsFieldNumber;
const int TrainConfig::kSaveSummaryStepsFieldNumber;
const int TrainConfig::kEnableMixedPrecisionFieldNumber;
const int TrainConfig::kLossScaleFactorFieldNumber;
const int TrainConfig::kClearMetricsEveryEpochFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainConfig::TrainConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.TrainConfig)
}
TrainConfig::TrainConfig(const TrainConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_optimizer()) {
    optimizer_ = new ::second::protos::Optimizer(*from.optimizer_);
  } else {
    optimizer_ = NULL;
  }
  ::memcpy(&inter_op_parallelism_threads_, &from.inter_op_parallelism_threads_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_metrics_every_epoch_) -
    reinterpret_cast<char*>(&inter_op_parallelism_threads_)) + sizeof(clear_metrics_every_epoch_));
  // @@protoc_insertion_point(copy_constructor:second.protos.TrainConfig)
}

void TrainConfig::SharedCtor() {
  ::memset(&optimizer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_metrics_every_epoch_) -
      reinterpret_cast<char*>(&optimizer_)) + sizeof(clear_metrics_every_epoch_));
  _cached_size_ = 0;
}

TrainConfig::~TrainConfig() {
  // @@protoc_insertion_point(destructor:second.protos.TrainConfig)
  SharedDtor();
}

void TrainConfig::SharedDtor() {
  if (this != internal_default_instance()) delete optimizer_;
}

void TrainConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainConfig::descriptor() {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrainConfig& TrainConfig::default_instance() {
  protobuf_second_2fprotos_2ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrainConfig* TrainConfig::New(::google::protobuf::Arena* arena) const {
  TrainConfig* n = new TrainConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.TrainConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && optimizer_ != NULL) {
    delete optimizer_;
  }
  optimizer_ = NULL;
  ::memset(&inter_op_parallelism_threads_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_metrics_every_epoch_) -
      reinterpret_cast<char*>(&inter_op_parallelism_threads_)) + sizeof(clear_metrics_every_epoch_));
  _internal_metadata_.Clear();
}

bool TrainConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.TrainConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.Optimizer optimizer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optimizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 inter_op_parallelism_threads = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inter_op_parallelism_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 intra_op_parallelism_threads = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intra_op_parallelism_threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 steps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 steps_per_eval = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steps_per_eval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 save_checkpoints_secs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &save_checkpoints_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 save_summary_steps = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &save_summary_steps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_mixed_precision = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_mixed_precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float loss_scale_factor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &loss_scale_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear_metrics_every_epoch = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_metrics_every_epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.TrainConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.TrainConfig)
  return false;
#undef DO_
}

void TrainConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.TrainConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.Optimizer optimizer = 1;
  if (this->has_optimizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->optimizer_, output);
  }

  // uint32 inter_op_parallelism_threads = 3;
  if (this->inter_op_parallelism_threads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->inter_op_parallelism_threads(), output);
  }

  // uint32 intra_op_parallelism_threads = 4;
  if (this->intra_op_parallelism_threads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->intra_op_parallelism_threads(), output);
  }

  // uint32 steps = 5;
  if (this->steps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->steps(), output);
  }

  // uint32 steps_per_eval = 6;
  if (this->steps_per_eval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->steps_per_eval(), output);
  }

  // uint32 save_checkpoints_secs = 7;
  if (this->save_checkpoints_secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->save_checkpoints_secs(), output);
  }

  // uint32 save_summary_steps = 8;
  if (this->save_summary_steps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->save_summary_steps(), output);
  }

  // bool enable_mixed_precision = 9;
  if (this->enable_mixed_precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_mixed_precision(), output);
  }

  // float loss_scale_factor = 10;
  if (this->loss_scale_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->loss_scale_factor(), output);
  }

  // bool clear_metrics_every_epoch = 11;
  if (this->clear_metrics_every_epoch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->clear_metrics_every_epoch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.TrainConfig)
}

::google::protobuf::uint8* TrainConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.TrainConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.Optimizer optimizer = 1;
  if (this->has_optimizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->optimizer_, deterministic, target);
  }

  // uint32 inter_op_parallelism_threads = 3;
  if (this->inter_op_parallelism_threads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->inter_op_parallelism_threads(), target);
  }

  // uint32 intra_op_parallelism_threads = 4;
  if (this->intra_op_parallelism_threads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->intra_op_parallelism_threads(), target);
  }

  // uint32 steps = 5;
  if (this->steps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->steps(), target);
  }

  // uint32 steps_per_eval = 6;
  if (this->steps_per_eval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->steps_per_eval(), target);
  }

  // uint32 save_checkpoints_secs = 7;
  if (this->save_checkpoints_secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->save_checkpoints_secs(), target);
  }

  // uint32 save_summary_steps = 8;
  if (this->save_summary_steps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->save_summary_steps(), target);
  }

  // bool enable_mixed_precision = 9;
  if (this->enable_mixed_precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enable_mixed_precision(), target);
  }

  // float loss_scale_factor = 10;
  if (this->loss_scale_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->loss_scale_factor(), target);
  }

  // bool clear_metrics_every_epoch = 11;
  if (this->clear_metrics_every_epoch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->clear_metrics_every_epoch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.TrainConfig)
  return target;
}

size_t TrainConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.TrainConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .second.protos.Optimizer optimizer = 1;
  if (this->has_optimizer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optimizer_);
  }

  // uint32 inter_op_parallelism_threads = 3;
  if (this->inter_op_parallelism_threads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inter_op_parallelism_threads());
  }

  // uint32 intra_op_parallelism_threads = 4;
  if (this->intra_op_parallelism_threads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intra_op_parallelism_threads());
  }

  // uint32 steps = 5;
  if (this->steps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->steps());
  }

  // uint32 steps_per_eval = 6;
  if (this->steps_per_eval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->steps_per_eval());
  }

  // uint32 save_checkpoints_secs = 7;
  if (this->save_checkpoints_secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->save_checkpoints_secs());
  }

  // uint32 save_summary_steps = 8;
  if (this->save_summary_steps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->save_summary_steps());
  }

  // float loss_scale_factor = 10;
  if (this->loss_scale_factor() != 0) {
    total_size += 1 + 4;
  }

  // bool enable_mixed_precision = 9;
  if (this->enable_mixed_precision() != 0) {
    total_size += 1 + 1;
  }

  // bool clear_metrics_every_epoch = 11;
  if (this->clear_metrics_every_epoch() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.TrainConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.TrainConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.TrainConfig)
    MergeFrom(*source);
  }
}

void TrainConfig::MergeFrom(const TrainConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.TrainConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_optimizer()) {
    mutable_optimizer()->::second::protos::Optimizer::MergeFrom(from.optimizer());
  }
  if (from.inter_op_parallelism_threads() != 0) {
    set_inter_op_parallelism_threads(from.inter_op_parallelism_threads());
  }
  if (from.intra_op_parallelism_threads() != 0) {
    set_intra_op_parallelism_threads(from.intra_op_parallelism_threads());
  }
  if (from.steps() != 0) {
    set_steps(from.steps());
  }
  if (from.steps_per_eval() != 0) {
    set_steps_per_eval(from.steps_per_eval());
  }
  if (from.save_checkpoints_secs() != 0) {
    set_save_checkpoints_secs(from.save_checkpoints_secs());
  }
  if (from.save_summary_steps() != 0) {
    set_save_summary_steps(from.save_summary_steps());
  }
  if (from.loss_scale_factor() != 0) {
    set_loss_scale_factor(from.loss_scale_factor());
  }
  if (from.enable_mixed_precision() != 0) {
    set_enable_mixed_precision(from.enable_mixed_precision());
  }
  if (from.clear_metrics_every_epoch() != 0) {
    set_clear_metrics_every_epoch(from.clear_metrics_every_epoch());
  }
}

void TrainConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.TrainConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainConfig::CopyFrom(const TrainConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.TrainConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainConfig::IsInitialized() const {
  return true;
}

void TrainConfig::Swap(TrainConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainConfig::InternalSwap(TrainConfig* other) {
  using std::swap;
  swap(optimizer_, other->optimizer_);
  swap(inter_op_parallelism_threads_, other->inter_op_parallelism_threads_);
  swap(intra_op_parallelism_threads_, other->intra_op_parallelism_threads_);
  swap(steps_, other->steps_);
  swap(steps_per_eval_, other->steps_per_eval_);
  swap(save_checkpoints_secs_, other->save_checkpoints_secs_);
  swap(save_summary_steps_, other->save_summary_steps_);
  swap(loss_scale_factor_, other->loss_scale_factor_);
  swap(enable_mixed_precision_, other->enable_mixed_precision_);
  swap(clear_metrics_every_epoch_, other->clear_metrics_every_epoch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainConfig::GetMetadata() const {
  protobuf_second_2fprotos_2ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainConfig

// .second.protos.Optimizer optimizer = 1;
bool TrainConfig::has_optimizer() const {
  return this != internal_default_instance() && optimizer_ != NULL;
}
void TrainConfig::clear_optimizer() {
  if (GetArenaNoVirtual() == NULL && optimizer_ != NULL) delete optimizer_;
  optimizer_ = NULL;
}
const ::second::protos::Optimizer& TrainConfig::optimizer() const {
  const ::second::protos::Optimizer* p = optimizer_;
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.optimizer)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::Optimizer*>(
      &::second::protos::_Optimizer_default_instance_);
}
::second::protos::Optimizer* TrainConfig::mutable_optimizer() {
  
  if (optimizer_ == NULL) {
    optimizer_ = new ::second::protos::Optimizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.TrainConfig.optimizer)
  return optimizer_;
}
::second::protos::Optimizer* TrainConfig::release_optimizer() {
  // @@protoc_insertion_point(field_release:second.protos.TrainConfig.optimizer)
  
  ::second::protos::Optimizer* temp = optimizer_;
  optimizer_ = NULL;
  return temp;
}
void TrainConfig::set_allocated_optimizer(::second::protos::Optimizer* optimizer) {
  delete optimizer_;
  optimizer_ = optimizer;
  if (optimizer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.TrainConfig.optimizer)
}

// uint32 inter_op_parallelism_threads = 3;
void TrainConfig::clear_inter_op_parallelism_threads() {
  inter_op_parallelism_threads_ = 0u;
}
::google::protobuf::uint32 TrainConfig::inter_op_parallelism_threads() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.inter_op_parallelism_threads)
  return inter_op_parallelism_threads_;
}
void TrainConfig::set_inter_op_parallelism_threads(::google::protobuf::uint32 value) {
  
  inter_op_parallelism_threads_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.inter_op_parallelism_threads)
}

// uint32 intra_op_parallelism_threads = 4;
void TrainConfig::clear_intra_op_parallelism_threads() {
  intra_op_parallelism_threads_ = 0u;
}
::google::protobuf::uint32 TrainConfig::intra_op_parallelism_threads() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.intra_op_parallelism_threads)
  return intra_op_parallelism_threads_;
}
void TrainConfig::set_intra_op_parallelism_threads(::google::protobuf::uint32 value) {
  
  intra_op_parallelism_threads_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.intra_op_parallelism_threads)
}

// uint32 steps = 5;
void TrainConfig::clear_steps() {
  steps_ = 0u;
}
::google::protobuf::uint32 TrainConfig::steps() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.steps)
  return steps_;
}
void TrainConfig::set_steps(::google::protobuf::uint32 value) {
  
  steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.steps)
}

// uint32 steps_per_eval = 6;
void TrainConfig::clear_steps_per_eval() {
  steps_per_eval_ = 0u;
}
::google::protobuf::uint32 TrainConfig::steps_per_eval() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.steps_per_eval)
  return steps_per_eval_;
}
void TrainConfig::set_steps_per_eval(::google::protobuf::uint32 value) {
  
  steps_per_eval_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.steps_per_eval)
}

// uint32 save_checkpoints_secs = 7;
void TrainConfig::clear_save_checkpoints_secs() {
  save_checkpoints_secs_ = 0u;
}
::google::protobuf::uint32 TrainConfig::save_checkpoints_secs() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.save_checkpoints_secs)
  return save_checkpoints_secs_;
}
void TrainConfig::set_save_checkpoints_secs(::google::protobuf::uint32 value) {
  
  save_checkpoints_secs_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.save_checkpoints_secs)
}

// uint32 save_summary_steps = 8;
void TrainConfig::clear_save_summary_steps() {
  save_summary_steps_ = 0u;
}
::google::protobuf::uint32 TrainConfig::save_summary_steps() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.save_summary_steps)
  return save_summary_steps_;
}
void TrainConfig::set_save_summary_steps(::google::protobuf::uint32 value) {
  
  save_summary_steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.save_summary_steps)
}

// bool enable_mixed_precision = 9;
void TrainConfig::clear_enable_mixed_precision() {
  enable_mixed_precision_ = false;
}
bool TrainConfig::enable_mixed_precision() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.enable_mixed_precision)
  return enable_mixed_precision_;
}
void TrainConfig::set_enable_mixed_precision(bool value) {
  
  enable_mixed_precision_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.enable_mixed_precision)
}

// float loss_scale_factor = 10;
void TrainConfig::clear_loss_scale_factor() {
  loss_scale_factor_ = 0;
}
float TrainConfig::loss_scale_factor() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.loss_scale_factor)
  return loss_scale_factor_;
}
void TrainConfig::set_loss_scale_factor(float value) {
  
  loss_scale_factor_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.loss_scale_factor)
}

// bool clear_metrics_every_epoch = 11;
void TrainConfig::clear_clear_metrics_every_epoch() {
  clear_metrics_every_epoch_ = false;
}
bool TrainConfig::clear_metrics_every_epoch() const {
  // @@protoc_insertion_point(field_get:second.protos.TrainConfig.clear_metrics_every_epoch)
  return clear_metrics_every_epoch_;
}
void TrainConfig::set_clear_metrics_every_epoch(bool value) {
  
  clear_metrics_every_epoch_ = value;
  // @@protoc_insertion_point(field_set:second.protos.TrainConfig.clear_metrics_every_epoch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
