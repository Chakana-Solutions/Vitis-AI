// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/optimizer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "second/protos/optimizer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace second {
namespace protos {
class OptimizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Optimizer>
     _instance;
  const ::second::protos::RMSPropOptimizer* rms_prop_optimizer_;
  const ::second::protos::MomentumOptimizer* momentum_optimizer_;
  const ::second::protos::AdamOptimizer* adam_optimizer_;
} _Optimizer_default_instance_;
class RMSPropOptimizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RMSPropOptimizer>
     _instance;
} _RMSPropOptimizer_default_instance_;
class MomentumOptimizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MomentumOptimizer>
     _instance;
} _MomentumOptimizer_default_instance_;
class AdamOptimizerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdamOptimizer>
     _instance;
} _AdamOptimizer_default_instance_;
class LearningRateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LearningRate>
     _instance;
  const ::second::protos::ConstantLearningRate* constant_learning_rate_;
  const ::second::protos::ExponentialDecayLearningRate* exponential_decay_learning_rate_;
  const ::second::protos::ManualStepLearningRate* manual_step_learning_rate_;
  const ::second::protos::CosineDecayLearningRate* cosine_decay_learning_rate_;
} _LearningRate_default_instance_;
class ConstantLearningRateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConstantLearningRate>
     _instance;
} _ConstantLearningRate_default_instance_;
class ExponentialDecayLearningRateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExponentialDecayLearningRate>
     _instance;
} _ExponentialDecayLearningRate_default_instance_;
class ManualStepLearningRate_LearningRateScheduleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ManualStepLearningRate_LearningRateSchedule>
     _instance;
} _ManualStepLearningRate_LearningRateSchedule_default_instance_;
class ManualStepLearningRateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ManualStepLearningRate>
     _instance;
} _ManualStepLearningRate_default_instance_;
class CosineDecayLearningRateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CosineDecayLearningRate>
     _instance;
} _CosineDecayLearningRate_default_instance_;

namespace protobuf_second_2fprotos_2foptimizer_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optimizer, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(OptimizerDefaultTypeInternal, rms_prop_optimizer_),
  offsetof(OptimizerDefaultTypeInternal, momentum_optimizer_),
  offsetof(OptimizerDefaultTypeInternal, adam_optimizer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optimizer, use_moving_average_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optimizer, moving_average_decay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Optimizer, optimizer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, momentum_optimizer_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, decay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, epsilon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RMSPropOptimizer, weight_decay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MomentumOptimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MomentumOptimizer, learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MomentumOptimizer, momentum_optimizer_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MomentumOptimizer, weight_decay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdamOptimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdamOptimizer, learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdamOptimizer, weight_decay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LearningRate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(LearningRateDefaultTypeInternal, constant_learning_rate_),
  offsetof(LearningRateDefaultTypeInternal, exponential_decay_learning_rate_),
  offsetof(LearningRateDefaultTypeInternal, manual_step_learning_rate_),
  offsetof(LearningRateDefaultTypeInternal, cosine_decay_learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LearningRate, learning_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstantLearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstantLearningRate, learning_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExponentialDecayLearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExponentialDecayLearningRate, initial_learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExponentialDecayLearningRate, decay_steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExponentialDecayLearningRate, decay_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExponentialDecayLearningRate, staircase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate_LearningRateSchedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate_LearningRateSchedule, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate_LearningRateSchedule, learning_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate, initial_learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualStepLearningRate, schedule_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CosineDecayLearningRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CosineDecayLearningRate, learning_rate_base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CosineDecayLearningRate, total_steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CosineDecayLearningRate, warmup_learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CosineDecayLearningRate, warmup_steps_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Optimizer)},
  { 11, -1, sizeof(RMSPropOptimizer)},
  { 21, -1, sizeof(MomentumOptimizer)},
  { 29, -1, sizeof(AdamOptimizer)},
  { 36, -1, sizeof(LearningRate)},
  { 46, -1, sizeof(ConstantLearningRate)},
  { 52, -1, sizeof(ExponentialDecayLearningRate)},
  { 61, -1, sizeof(ManualStepLearningRate_LearningRateSchedule)},
  { 68, -1, sizeof(ManualStepLearningRate)},
  { 75, -1, sizeof(CosineDecayLearningRate)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Optimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RMSPropOptimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MomentumOptimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdamOptimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConstantLearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExponentialDecayLearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ManualStepLearningRate_LearningRateSchedule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ManualStepLearningRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CosineDecayLearningRate_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "second/protos/optimizer.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Optimizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Optimizer_default_instance_);_RMSPropOptimizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RMSPropOptimizer_default_instance_);_MomentumOptimizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MomentumOptimizer_default_instance_);_AdamOptimizer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdamOptimizer_default_instance_);_LearningRate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LearningRate_default_instance_);_ConstantLearningRate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConstantLearningRate_default_instance_);_ExponentialDecayLearningRate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExponentialDecayLearningRate_default_instance_);_ManualStepLearningRate_LearningRateSchedule_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ManualStepLearningRate_LearningRateSchedule_default_instance_);_ManualStepLearningRate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ManualStepLearningRate_default_instance_);_CosineDecayLearningRate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CosineDecayLearningRate_default_instance_);_Optimizer_default_instance_.rms_prop_optimizer_ = const_cast< ::second::protos::RMSPropOptimizer*>(
      ::second::protos::RMSPropOptimizer::internal_default_instance());
  _Optimizer_default_instance_.momentum_optimizer_ = const_cast< ::second::protos::MomentumOptimizer*>(
      ::second::protos::MomentumOptimizer::internal_default_instance());
  _Optimizer_default_instance_.adam_optimizer_ = const_cast< ::second::protos::AdamOptimizer*>(
      ::second::protos::AdamOptimizer::internal_default_instance());
  _RMSPropOptimizer_default_instance_._instance.get_mutable()->learning_rate_ = const_cast< ::second::protos::LearningRate*>(
      ::second::protos::LearningRate::internal_default_instance());
  _MomentumOptimizer_default_instance_._instance.get_mutable()->learning_rate_ = const_cast< ::second::protos::LearningRate*>(
      ::second::protos::LearningRate::internal_default_instance());
  _AdamOptimizer_default_instance_._instance.get_mutable()->learning_rate_ = const_cast< ::second::protos::LearningRate*>(
      ::second::protos::LearningRate::internal_default_instance());
  _LearningRate_default_instance_.constant_learning_rate_ = const_cast< ::second::protos::ConstantLearningRate*>(
      ::second::protos::ConstantLearningRate::internal_default_instance());
  _LearningRate_default_instance_.exponential_decay_learning_rate_ = const_cast< ::second::protos::ExponentialDecayLearningRate*>(
      ::second::protos::ExponentialDecayLearningRate::internal_default_instance());
  _LearningRate_default_instance_.manual_step_learning_rate_ = const_cast< ::second::protos::ManualStepLearningRate*>(
      ::second::protos::ManualStepLearningRate::internal_default_instance());
  _LearningRate_default_instance_.cosine_decay_learning_rate_ = const_cast< ::second::protos::CosineDecayLearningRate*>(
      ::second::protos::CosineDecayLearningRate::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035second/protos/optimizer.proto\022\rsecond."
      "protos\"\211\002\n\tOptimizer\022=\n\022rms_prop_optimiz"
      "er\030\001 \001(\0132\037.second.protos.RMSPropOptimize"
      "rH\000\022>\n\022momentum_optimizer\030\002 \001(\0132 .second"
      ".protos.MomentumOptimizerH\000\0226\n\016adam_opti"
      "mizer\030\003 \001(\0132\034.second.protos.AdamOptimize"
      "rH\000\022\032\n\022use_moving_average\030\004 \001(\010\022\034\n\024movin"
      "g_average_decay\030\005 \001(\002B\013\n\toptimizer\"\236\001\n\020R"
      "MSPropOptimizer\0222\n\rlearning_rate\030\001 \001(\0132\033"
      ".second.protos.LearningRate\022 \n\030momentum_"
      "optimizer_value\030\002 \001(\002\022\r\n\005decay\030\003 \001(\002\022\017\n\007"
      "epsilon\030\004 \001(\002\022\024\n\014weight_decay\030\005 \001(\002\"\177\n\021M"
      "omentumOptimizer\0222\n\rlearning_rate\030\001 \001(\0132"
      "\033.second.protos.LearningRate\022 \n\030momentum"
      "_optimizer_value\030\002 \001(\002\022\024\n\014weight_decay\030\003"
      " \001(\002\"Y\n\rAdamOptimizer\0222\n\rlearning_rate\030\001"
      " \001(\0132\033.second.protos.LearningRate\022\024\n\014wei"
      "ght_decay\030\002 \001(\002\"\330\002\n\014LearningRate\022E\n\026cons"
      "tant_learning_rate\030\001 \001(\0132#.second.protos"
      ".ConstantLearningRateH\000\022V\n\037exponential_d"
      "ecay_learning_rate\030\002 \001(\0132+.second.protos"
      ".ExponentialDecayLearningRateH\000\022J\n\031manua"
      "l_step_learning_rate\030\003 \001(\0132%.second.prot"
      "os.ManualStepLearningRateH\000\022L\n\032cosine_de"
      "cay_learning_rate\030\004 \001(\0132&.second.protos."
      "CosineDecayLearningRateH\000B\017\n\rlearning_ra"
      "te\"-\n\024ConstantLearningRate\022\025\n\rlearning_r"
      "ate\030\001 \001(\002\"{\n\034ExponentialDecayLearningRat"
      "e\022\035\n\025initial_learning_rate\030\001 \001(\002\022\023\n\013deca"
      "y_steps\030\002 \001(\r\022\024\n\014decay_factor\030\003 \001(\002\022\021\n\ts"
      "taircase\030\004 \001(\010\"\302\001\n\026ManualStepLearningRat"
      "e\022\035\n\025initial_learning_rate\030\001 \001(\002\022L\n\010sche"
      "dule\030\002 \003(\0132:.second.protos.ManualStepLea"
      "rningRate.LearningRateSchedule\032;\n\024Learni"
      "ngRateSchedule\022\014\n\004step\030\001 \001(\r\022\025\n\rlearning"
      "_rate\030\002 \001(\002\"~\n\027CosineDecayLearningRate\022\032"
      "\n\022learning_rate_base\030\001 \001(\002\022\023\n\013total_step"
      "s\030\002 \001(\r\022\034\n\024warmup_learning_rate\030\003 \001(\002\022\024\n"
      "\014warmup_steps\030\004 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1547);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "second/protos/optimizer.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_second_2fprotos_2foptimizer_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optimizer::kRmsPropOptimizerFieldNumber;
const int Optimizer::kMomentumOptimizerFieldNumber;
const int Optimizer::kAdamOptimizerFieldNumber;
const int Optimizer::kUseMovingAverageFieldNumber;
const int Optimizer::kMovingAverageDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optimizer::Optimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.Optimizer)
}
Optimizer::Optimizer(const Optimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_moving_average_, &from.use_moving_average_,
    static_cast<size_t>(reinterpret_cast<char*>(&moving_average_decay_) -
    reinterpret_cast<char*>(&use_moving_average_)) + sizeof(moving_average_decay_));
  clear_has_optimizer();
  switch (from.optimizer_case()) {
    case kRmsPropOptimizer: {
      mutable_rms_prop_optimizer()->::second::protos::RMSPropOptimizer::MergeFrom(from.rms_prop_optimizer());
      break;
    }
    case kMomentumOptimizer: {
      mutable_momentum_optimizer()->::second::protos::MomentumOptimizer::MergeFrom(from.momentum_optimizer());
      break;
    }
    case kAdamOptimizer: {
      mutable_adam_optimizer()->::second::protos::AdamOptimizer::MergeFrom(from.adam_optimizer());
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.Optimizer)
}

void Optimizer::SharedCtor() {
  ::memset(&use_moving_average_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_average_decay_) -
      reinterpret_cast<char*>(&use_moving_average_)) + sizeof(moving_average_decay_));
  clear_has_optimizer();
  _cached_size_ = 0;
}

Optimizer::~Optimizer() {
  // @@protoc_insertion_point(destructor:second.protos.Optimizer)
  SharedDtor();
}

void Optimizer::SharedDtor() {
  if (has_optimizer()) {
    clear_optimizer();
  }
}

void Optimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Optimizer::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Optimizer& Optimizer::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

Optimizer* Optimizer::New(::google::protobuf::Arena* arena) const {
  Optimizer* n = new Optimizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Optimizer::clear_optimizer() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.Optimizer)
  switch (optimizer_case()) {
    case kRmsPropOptimizer: {
      delete optimizer_.rms_prop_optimizer_;
      break;
    }
    case kMomentumOptimizer: {
      delete optimizer_.momentum_optimizer_;
      break;
    }
    case kAdamOptimizer: {
      delete optimizer_.adam_optimizer_;
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIMIZER_NOT_SET;
}


void Optimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.Optimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&use_moving_average_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_average_decay_) -
      reinterpret_cast<char*>(&use_moving_average_)) + sizeof(moving_average_decay_));
  clear_optimizer();
  _internal_metadata_.Clear();
}

bool Optimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.Optimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.RMSPropOptimizer rms_prop_optimizer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rms_prop_optimizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.MomentumOptimizer momentum_optimizer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_momentum_optimizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.AdamOptimizer adam_optimizer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adam_optimizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_moving_average = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_moving_average_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float moving_average_decay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &moving_average_decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.Optimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.Optimizer)
  return false;
#undef DO_
}

void Optimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.Optimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.RMSPropOptimizer rms_prop_optimizer = 1;
  if (has_rms_prop_optimizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *optimizer_.rms_prop_optimizer_, output);
  }

  // .second.protos.MomentumOptimizer momentum_optimizer = 2;
  if (has_momentum_optimizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *optimizer_.momentum_optimizer_, output);
  }

  // .second.protos.AdamOptimizer adam_optimizer = 3;
  if (has_adam_optimizer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *optimizer_.adam_optimizer_, output);
  }

  // bool use_moving_average = 4;
  if (this->use_moving_average() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_moving_average(), output);
  }

  // float moving_average_decay = 5;
  if (this->moving_average_decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->moving_average_decay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.Optimizer)
}

::google::protobuf::uint8* Optimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.Optimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.RMSPropOptimizer rms_prop_optimizer = 1;
  if (has_rms_prop_optimizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *optimizer_.rms_prop_optimizer_, deterministic, target);
  }

  // .second.protos.MomentumOptimizer momentum_optimizer = 2;
  if (has_momentum_optimizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *optimizer_.momentum_optimizer_, deterministic, target);
  }

  // .second.protos.AdamOptimizer adam_optimizer = 3;
  if (has_adam_optimizer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *optimizer_.adam_optimizer_, deterministic, target);
  }

  // bool use_moving_average = 4;
  if (this->use_moving_average() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_moving_average(), target);
  }

  // float moving_average_decay = 5;
  if (this->moving_average_decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->moving_average_decay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.Optimizer)
  return target;
}

size_t Optimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.Optimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool use_moving_average = 4;
  if (this->use_moving_average() != 0) {
    total_size += 1 + 1;
  }

  // float moving_average_decay = 5;
  if (this->moving_average_decay() != 0) {
    total_size += 1 + 4;
  }

  switch (optimizer_case()) {
    // .second.protos.RMSPropOptimizer rms_prop_optimizer = 1;
    case kRmsPropOptimizer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *optimizer_.rms_prop_optimizer_);
      break;
    }
    // .second.protos.MomentumOptimizer momentum_optimizer = 2;
    case kMomentumOptimizer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *optimizer_.momentum_optimizer_);
      break;
    }
    // .second.protos.AdamOptimizer adam_optimizer = 3;
    case kAdamOptimizer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *optimizer_.adam_optimizer_);
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Optimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.Optimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const Optimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Optimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.Optimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.Optimizer)
    MergeFrom(*source);
  }
}

void Optimizer::MergeFrom(const Optimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.Optimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.use_moving_average() != 0) {
    set_use_moving_average(from.use_moving_average());
  }
  if (from.moving_average_decay() != 0) {
    set_moving_average_decay(from.moving_average_decay());
  }
  switch (from.optimizer_case()) {
    case kRmsPropOptimizer: {
      mutable_rms_prop_optimizer()->::second::protos::RMSPropOptimizer::MergeFrom(from.rms_prop_optimizer());
      break;
    }
    case kMomentumOptimizer: {
      mutable_momentum_optimizer()->::second::protos::MomentumOptimizer::MergeFrom(from.momentum_optimizer());
      break;
    }
    case kAdamOptimizer: {
      mutable_adam_optimizer()->::second::protos::AdamOptimizer::MergeFrom(from.adam_optimizer());
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
}

void Optimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.Optimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optimizer::CopyFrom(const Optimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.Optimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optimizer::IsInitialized() const {
  return true;
}

void Optimizer::Swap(Optimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optimizer::InternalSwap(Optimizer* other) {
  using std::swap;
  swap(use_moving_average_, other->use_moving_average_);
  swap(moving_average_decay_, other->moving_average_decay_);
  swap(optimizer_, other->optimizer_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Optimizer::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Optimizer

// .second.protos.RMSPropOptimizer rms_prop_optimizer = 1;
bool Optimizer::has_rms_prop_optimizer() const {
  return optimizer_case() == kRmsPropOptimizer;
}
void Optimizer::set_has_rms_prop_optimizer() {
  _oneof_case_[0] = kRmsPropOptimizer;
}
void Optimizer::clear_rms_prop_optimizer() {
  if (has_rms_prop_optimizer()) {
    delete optimizer_.rms_prop_optimizer_;
    clear_has_optimizer();
  }
}
 const ::second::protos::RMSPropOptimizer& Optimizer::rms_prop_optimizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Optimizer.rms_prop_optimizer)
  return has_rms_prop_optimizer()
      ? *optimizer_.rms_prop_optimizer_
      : ::second::protos::RMSPropOptimizer::default_instance();
}
::second::protos::RMSPropOptimizer* Optimizer::mutable_rms_prop_optimizer() {
  if (!has_rms_prop_optimizer()) {
    clear_optimizer();
    set_has_rms_prop_optimizer();
    optimizer_.rms_prop_optimizer_ = new ::second::protos::RMSPropOptimizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Optimizer.rms_prop_optimizer)
  return optimizer_.rms_prop_optimizer_;
}
::second::protos::RMSPropOptimizer* Optimizer::release_rms_prop_optimizer() {
  // @@protoc_insertion_point(field_release:second.protos.Optimizer.rms_prop_optimizer)
  if (has_rms_prop_optimizer()) {
    clear_has_optimizer();
    ::second::protos::RMSPropOptimizer* temp = optimizer_.rms_prop_optimizer_;
    optimizer_.rms_prop_optimizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Optimizer::set_allocated_rms_prop_optimizer(::second::protos::RMSPropOptimizer* rms_prop_optimizer) {
  clear_optimizer();
  if (rms_prop_optimizer) {
    set_has_rms_prop_optimizer();
    optimizer_.rms_prop_optimizer_ = rms_prop_optimizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Optimizer.rms_prop_optimizer)
}

// .second.protos.MomentumOptimizer momentum_optimizer = 2;
bool Optimizer::has_momentum_optimizer() const {
  return optimizer_case() == kMomentumOptimizer;
}
void Optimizer::set_has_momentum_optimizer() {
  _oneof_case_[0] = kMomentumOptimizer;
}
void Optimizer::clear_momentum_optimizer() {
  if (has_momentum_optimizer()) {
    delete optimizer_.momentum_optimizer_;
    clear_has_optimizer();
  }
}
 const ::second::protos::MomentumOptimizer& Optimizer::momentum_optimizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Optimizer.momentum_optimizer)
  return has_momentum_optimizer()
      ? *optimizer_.momentum_optimizer_
      : ::second::protos::MomentumOptimizer::default_instance();
}
::second::protos::MomentumOptimizer* Optimizer::mutable_momentum_optimizer() {
  if (!has_momentum_optimizer()) {
    clear_optimizer();
    set_has_momentum_optimizer();
    optimizer_.momentum_optimizer_ = new ::second::protos::MomentumOptimizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Optimizer.momentum_optimizer)
  return optimizer_.momentum_optimizer_;
}
::second::protos::MomentumOptimizer* Optimizer::release_momentum_optimizer() {
  // @@protoc_insertion_point(field_release:second.protos.Optimizer.momentum_optimizer)
  if (has_momentum_optimizer()) {
    clear_has_optimizer();
    ::second::protos::MomentumOptimizer* temp = optimizer_.momentum_optimizer_;
    optimizer_.momentum_optimizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Optimizer::set_allocated_momentum_optimizer(::second::protos::MomentumOptimizer* momentum_optimizer) {
  clear_optimizer();
  if (momentum_optimizer) {
    set_has_momentum_optimizer();
    optimizer_.momentum_optimizer_ = momentum_optimizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Optimizer.momentum_optimizer)
}

// .second.protos.AdamOptimizer adam_optimizer = 3;
bool Optimizer::has_adam_optimizer() const {
  return optimizer_case() == kAdamOptimizer;
}
void Optimizer::set_has_adam_optimizer() {
  _oneof_case_[0] = kAdamOptimizer;
}
void Optimizer::clear_adam_optimizer() {
  if (has_adam_optimizer()) {
    delete optimizer_.adam_optimizer_;
    clear_has_optimizer();
  }
}
 const ::second::protos::AdamOptimizer& Optimizer::adam_optimizer() const {
  // @@protoc_insertion_point(field_get:second.protos.Optimizer.adam_optimizer)
  return has_adam_optimizer()
      ? *optimizer_.adam_optimizer_
      : ::second::protos::AdamOptimizer::default_instance();
}
::second::protos::AdamOptimizer* Optimizer::mutable_adam_optimizer() {
  if (!has_adam_optimizer()) {
    clear_optimizer();
    set_has_adam_optimizer();
    optimizer_.adam_optimizer_ = new ::second::protos::AdamOptimizer;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.Optimizer.adam_optimizer)
  return optimizer_.adam_optimizer_;
}
::second::protos::AdamOptimizer* Optimizer::release_adam_optimizer() {
  // @@protoc_insertion_point(field_release:second.protos.Optimizer.adam_optimizer)
  if (has_adam_optimizer()) {
    clear_has_optimizer();
    ::second::protos::AdamOptimizer* temp = optimizer_.adam_optimizer_;
    optimizer_.adam_optimizer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Optimizer::set_allocated_adam_optimizer(::second::protos::AdamOptimizer* adam_optimizer) {
  clear_optimizer();
  if (adam_optimizer) {
    set_has_adam_optimizer();
    optimizer_.adam_optimizer_ = adam_optimizer;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.Optimizer.adam_optimizer)
}

// bool use_moving_average = 4;
void Optimizer::clear_use_moving_average() {
  use_moving_average_ = false;
}
bool Optimizer::use_moving_average() const {
  // @@protoc_insertion_point(field_get:second.protos.Optimizer.use_moving_average)
  return use_moving_average_;
}
void Optimizer::set_use_moving_average(bool value) {
  
  use_moving_average_ = value;
  // @@protoc_insertion_point(field_set:second.protos.Optimizer.use_moving_average)
}

// float moving_average_decay = 5;
void Optimizer::clear_moving_average_decay() {
  moving_average_decay_ = 0;
}
float Optimizer::moving_average_decay() const {
  // @@protoc_insertion_point(field_get:second.protos.Optimizer.moving_average_decay)
  return moving_average_decay_;
}
void Optimizer::set_moving_average_decay(float value) {
  
  moving_average_decay_ = value;
  // @@protoc_insertion_point(field_set:second.protos.Optimizer.moving_average_decay)
}

bool Optimizer::has_optimizer() const {
  return optimizer_case() != OPTIMIZER_NOT_SET;
}
void Optimizer::clear_has_optimizer() {
  _oneof_case_[0] = OPTIMIZER_NOT_SET;
}
Optimizer::OptimizerCase Optimizer::optimizer_case() const {
  return Optimizer::OptimizerCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RMSPropOptimizer::kLearningRateFieldNumber;
const int RMSPropOptimizer::kMomentumOptimizerValueFieldNumber;
const int RMSPropOptimizer::kDecayFieldNumber;
const int RMSPropOptimizer::kEpsilonFieldNumber;
const int RMSPropOptimizer::kWeightDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RMSPropOptimizer::RMSPropOptimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.RMSPropOptimizer)
}
RMSPropOptimizer::RMSPropOptimizer(const RMSPropOptimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_learning_rate()) {
    learning_rate_ = new ::second::protos::LearningRate(*from.learning_rate_);
  } else {
    learning_rate_ = NULL;
  }
  ::memcpy(&momentum_optimizer_value_, &from.momentum_optimizer_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_decay_) -
    reinterpret_cast<char*>(&momentum_optimizer_value_)) + sizeof(weight_decay_));
  // @@protoc_insertion_point(copy_constructor:second.protos.RMSPropOptimizer)
}

void RMSPropOptimizer::SharedCtor() {
  ::memset(&learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_decay_) -
      reinterpret_cast<char*>(&learning_rate_)) + sizeof(weight_decay_));
  _cached_size_ = 0;
}

RMSPropOptimizer::~RMSPropOptimizer() {
  // @@protoc_insertion_point(destructor:second.protos.RMSPropOptimizer)
  SharedDtor();
}

void RMSPropOptimizer::SharedDtor() {
  if (this != internal_default_instance()) delete learning_rate_;
}

void RMSPropOptimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RMSPropOptimizer::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RMSPropOptimizer& RMSPropOptimizer::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

RMSPropOptimizer* RMSPropOptimizer::New(::google::protobuf::Arena* arena) const {
  RMSPropOptimizer* n = new RMSPropOptimizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RMSPropOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.RMSPropOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) {
    delete learning_rate_;
  }
  learning_rate_ = NULL;
  ::memset(&momentum_optimizer_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_decay_) -
      reinterpret_cast<char*>(&momentum_optimizer_value_)) + sizeof(weight_decay_));
  _internal_metadata_.Clear();
}

bool RMSPropOptimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.RMSPropOptimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.LearningRate learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float momentum_optimizer_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_optimizer_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float decay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float epsilon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float weight_decay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.RMSPropOptimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.RMSPropOptimizer)
  return false;
#undef DO_
}

void RMSPropOptimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.RMSPropOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->learning_rate_, output);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->momentum_optimizer_value(), output);
  }

  // float decay = 3;
  if (this->decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->decay(), output);
  }

  // float epsilon = 4;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->epsilon(), output);
  }

  // float weight_decay = 5;
  if (this->weight_decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->weight_decay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.RMSPropOptimizer)
}

::google::protobuf::uint8* RMSPropOptimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.RMSPropOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->learning_rate_, deterministic, target);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->momentum_optimizer_value(), target);
  }

  // float decay = 3;
  if (this->decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->decay(), target);
  }

  // float epsilon = 4;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->epsilon(), target);
  }

  // float weight_decay = 5;
  if (this->weight_decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->weight_decay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.RMSPropOptimizer)
  return target;
}

size_t RMSPropOptimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.RMSPropOptimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->learning_rate_);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    total_size += 1 + 4;
  }

  // float decay = 3;
  if (this->decay() != 0) {
    total_size += 1 + 4;
  }

  // float epsilon = 4;
  if (this->epsilon() != 0) {
    total_size += 1 + 4;
  }

  // float weight_decay = 5;
  if (this->weight_decay() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RMSPropOptimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.RMSPropOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const RMSPropOptimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RMSPropOptimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.RMSPropOptimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.RMSPropOptimizer)
    MergeFrom(*source);
  }
}

void RMSPropOptimizer::MergeFrom(const RMSPropOptimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.RMSPropOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_learning_rate()) {
    mutable_learning_rate()->::second::protos::LearningRate::MergeFrom(from.learning_rate());
  }
  if (from.momentum_optimizer_value() != 0) {
    set_momentum_optimizer_value(from.momentum_optimizer_value());
  }
  if (from.decay() != 0) {
    set_decay(from.decay());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
  if (from.weight_decay() != 0) {
    set_weight_decay(from.weight_decay());
  }
}

void RMSPropOptimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.RMSPropOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RMSPropOptimizer::CopyFrom(const RMSPropOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.RMSPropOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RMSPropOptimizer::IsInitialized() const {
  return true;
}

void RMSPropOptimizer::Swap(RMSPropOptimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RMSPropOptimizer::InternalSwap(RMSPropOptimizer* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(momentum_optimizer_value_, other->momentum_optimizer_value_);
  swap(decay_, other->decay_);
  swap(epsilon_, other->epsilon_);
  swap(weight_decay_, other->weight_decay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RMSPropOptimizer::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RMSPropOptimizer

// .second.protos.LearningRate learning_rate = 1;
bool RMSPropOptimizer::has_learning_rate() const {
  return this != internal_default_instance() && learning_rate_ != NULL;
}
void RMSPropOptimizer::clear_learning_rate() {
  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) delete learning_rate_;
  learning_rate_ = NULL;
}
const ::second::protos::LearningRate& RMSPropOptimizer::learning_rate() const {
  const ::second::protos::LearningRate* p = learning_rate_;
  // @@protoc_insertion_point(field_get:second.protos.RMSPropOptimizer.learning_rate)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::LearningRate*>(
      &::second::protos::_LearningRate_default_instance_);
}
::second::protos::LearningRate* RMSPropOptimizer::mutable_learning_rate() {
  
  if (learning_rate_ == NULL) {
    learning_rate_ = new ::second::protos::LearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.RMSPropOptimizer.learning_rate)
  return learning_rate_;
}
::second::protos::LearningRate* RMSPropOptimizer::release_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.RMSPropOptimizer.learning_rate)
  
  ::second::protos::LearningRate* temp = learning_rate_;
  learning_rate_ = NULL;
  return temp;
}
void RMSPropOptimizer::set_allocated_learning_rate(::second::protos::LearningRate* learning_rate) {
  delete learning_rate_;
  learning_rate_ = learning_rate;
  if (learning_rate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.RMSPropOptimizer.learning_rate)
}

// float momentum_optimizer_value = 2;
void RMSPropOptimizer::clear_momentum_optimizer_value() {
  momentum_optimizer_value_ = 0;
}
float RMSPropOptimizer::momentum_optimizer_value() const {
  // @@protoc_insertion_point(field_get:second.protos.RMSPropOptimizer.momentum_optimizer_value)
  return momentum_optimizer_value_;
}
void RMSPropOptimizer::set_momentum_optimizer_value(float value) {
  
  momentum_optimizer_value_ = value;
  // @@protoc_insertion_point(field_set:second.protos.RMSPropOptimizer.momentum_optimizer_value)
}

// float decay = 3;
void RMSPropOptimizer::clear_decay() {
  decay_ = 0;
}
float RMSPropOptimizer::decay() const {
  // @@protoc_insertion_point(field_get:second.protos.RMSPropOptimizer.decay)
  return decay_;
}
void RMSPropOptimizer::set_decay(float value) {
  
  decay_ = value;
  // @@protoc_insertion_point(field_set:second.protos.RMSPropOptimizer.decay)
}

// float epsilon = 4;
void RMSPropOptimizer::clear_epsilon() {
  epsilon_ = 0;
}
float RMSPropOptimizer::epsilon() const {
  // @@protoc_insertion_point(field_get:second.protos.RMSPropOptimizer.epsilon)
  return epsilon_;
}
void RMSPropOptimizer::set_epsilon(float value) {
  
  epsilon_ = value;
  // @@protoc_insertion_point(field_set:second.protos.RMSPropOptimizer.epsilon)
}

// float weight_decay = 5;
void RMSPropOptimizer::clear_weight_decay() {
  weight_decay_ = 0;
}
float RMSPropOptimizer::weight_decay() const {
  // @@protoc_insertion_point(field_get:second.protos.RMSPropOptimizer.weight_decay)
  return weight_decay_;
}
void RMSPropOptimizer::set_weight_decay(float value) {
  
  weight_decay_ = value;
  // @@protoc_insertion_point(field_set:second.protos.RMSPropOptimizer.weight_decay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MomentumOptimizer::kLearningRateFieldNumber;
const int MomentumOptimizer::kMomentumOptimizerValueFieldNumber;
const int MomentumOptimizer::kWeightDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MomentumOptimizer::MomentumOptimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.MomentumOptimizer)
}
MomentumOptimizer::MomentumOptimizer(const MomentumOptimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_learning_rate()) {
    learning_rate_ = new ::second::protos::LearningRate(*from.learning_rate_);
  } else {
    learning_rate_ = NULL;
  }
  ::memcpy(&momentum_optimizer_value_, &from.momentum_optimizer_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_decay_) -
    reinterpret_cast<char*>(&momentum_optimizer_value_)) + sizeof(weight_decay_));
  // @@protoc_insertion_point(copy_constructor:second.protos.MomentumOptimizer)
}

void MomentumOptimizer::SharedCtor() {
  ::memset(&learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_decay_) -
      reinterpret_cast<char*>(&learning_rate_)) + sizeof(weight_decay_));
  _cached_size_ = 0;
}

MomentumOptimizer::~MomentumOptimizer() {
  // @@protoc_insertion_point(destructor:second.protos.MomentumOptimizer)
  SharedDtor();
}

void MomentumOptimizer::SharedDtor() {
  if (this != internal_default_instance()) delete learning_rate_;
}

void MomentumOptimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MomentumOptimizer::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MomentumOptimizer& MomentumOptimizer::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

MomentumOptimizer* MomentumOptimizer::New(::google::protobuf::Arena* arena) const {
  MomentumOptimizer* n = new MomentumOptimizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MomentumOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.MomentumOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) {
    delete learning_rate_;
  }
  learning_rate_ = NULL;
  ::memset(&momentum_optimizer_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_decay_) -
      reinterpret_cast<char*>(&momentum_optimizer_value_)) + sizeof(weight_decay_));
  _internal_metadata_.Clear();
}

bool MomentumOptimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.MomentumOptimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.LearningRate learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float momentum_optimizer_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_optimizer_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float weight_decay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.MomentumOptimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.MomentumOptimizer)
  return false;
#undef DO_
}

void MomentumOptimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.MomentumOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->learning_rate_, output);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->momentum_optimizer_value(), output);
  }

  // float weight_decay = 3;
  if (this->weight_decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->weight_decay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.MomentumOptimizer)
}

::google::protobuf::uint8* MomentumOptimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.MomentumOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->learning_rate_, deterministic, target);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->momentum_optimizer_value(), target);
  }

  // float weight_decay = 3;
  if (this->weight_decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->weight_decay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.MomentumOptimizer)
  return target;
}

size_t MomentumOptimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.MomentumOptimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->learning_rate_);
  }

  // float momentum_optimizer_value = 2;
  if (this->momentum_optimizer_value() != 0) {
    total_size += 1 + 4;
  }

  // float weight_decay = 3;
  if (this->weight_decay() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MomentumOptimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.MomentumOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const MomentumOptimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MomentumOptimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.MomentumOptimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.MomentumOptimizer)
    MergeFrom(*source);
  }
}

void MomentumOptimizer::MergeFrom(const MomentumOptimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.MomentumOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_learning_rate()) {
    mutable_learning_rate()->::second::protos::LearningRate::MergeFrom(from.learning_rate());
  }
  if (from.momentum_optimizer_value() != 0) {
    set_momentum_optimizer_value(from.momentum_optimizer_value());
  }
  if (from.weight_decay() != 0) {
    set_weight_decay(from.weight_decay());
  }
}

void MomentumOptimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.MomentumOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MomentumOptimizer::CopyFrom(const MomentumOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.MomentumOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MomentumOptimizer::IsInitialized() const {
  return true;
}

void MomentumOptimizer::Swap(MomentumOptimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MomentumOptimizer::InternalSwap(MomentumOptimizer* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(momentum_optimizer_value_, other->momentum_optimizer_value_);
  swap(weight_decay_, other->weight_decay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MomentumOptimizer::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MomentumOptimizer

// .second.protos.LearningRate learning_rate = 1;
bool MomentumOptimizer::has_learning_rate() const {
  return this != internal_default_instance() && learning_rate_ != NULL;
}
void MomentumOptimizer::clear_learning_rate() {
  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) delete learning_rate_;
  learning_rate_ = NULL;
}
const ::second::protos::LearningRate& MomentumOptimizer::learning_rate() const {
  const ::second::protos::LearningRate* p = learning_rate_;
  // @@protoc_insertion_point(field_get:second.protos.MomentumOptimizer.learning_rate)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::LearningRate*>(
      &::second::protos::_LearningRate_default_instance_);
}
::second::protos::LearningRate* MomentumOptimizer::mutable_learning_rate() {
  
  if (learning_rate_ == NULL) {
    learning_rate_ = new ::second::protos::LearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.MomentumOptimizer.learning_rate)
  return learning_rate_;
}
::second::protos::LearningRate* MomentumOptimizer::release_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.MomentumOptimizer.learning_rate)
  
  ::second::protos::LearningRate* temp = learning_rate_;
  learning_rate_ = NULL;
  return temp;
}
void MomentumOptimizer::set_allocated_learning_rate(::second::protos::LearningRate* learning_rate) {
  delete learning_rate_;
  learning_rate_ = learning_rate;
  if (learning_rate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.MomentumOptimizer.learning_rate)
}

// float momentum_optimizer_value = 2;
void MomentumOptimizer::clear_momentum_optimizer_value() {
  momentum_optimizer_value_ = 0;
}
float MomentumOptimizer::momentum_optimizer_value() const {
  // @@protoc_insertion_point(field_get:second.protos.MomentumOptimizer.momentum_optimizer_value)
  return momentum_optimizer_value_;
}
void MomentumOptimizer::set_momentum_optimizer_value(float value) {
  
  momentum_optimizer_value_ = value;
  // @@protoc_insertion_point(field_set:second.protos.MomentumOptimizer.momentum_optimizer_value)
}

// float weight_decay = 3;
void MomentumOptimizer::clear_weight_decay() {
  weight_decay_ = 0;
}
float MomentumOptimizer::weight_decay() const {
  // @@protoc_insertion_point(field_get:second.protos.MomentumOptimizer.weight_decay)
  return weight_decay_;
}
void MomentumOptimizer::set_weight_decay(float value) {
  
  weight_decay_ = value;
  // @@protoc_insertion_point(field_set:second.protos.MomentumOptimizer.weight_decay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdamOptimizer::kLearningRateFieldNumber;
const int AdamOptimizer::kWeightDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdamOptimizer::AdamOptimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.AdamOptimizer)
}
AdamOptimizer::AdamOptimizer(const AdamOptimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_learning_rate()) {
    learning_rate_ = new ::second::protos::LearningRate(*from.learning_rate_);
  } else {
    learning_rate_ = NULL;
  }
  weight_decay_ = from.weight_decay_;
  // @@protoc_insertion_point(copy_constructor:second.protos.AdamOptimizer)
}

void AdamOptimizer::SharedCtor() {
  ::memset(&learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_decay_) -
      reinterpret_cast<char*>(&learning_rate_)) + sizeof(weight_decay_));
  _cached_size_ = 0;
}

AdamOptimizer::~AdamOptimizer() {
  // @@protoc_insertion_point(destructor:second.protos.AdamOptimizer)
  SharedDtor();
}

void AdamOptimizer::SharedDtor() {
  if (this != internal_default_instance()) delete learning_rate_;
}

void AdamOptimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdamOptimizer::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdamOptimizer& AdamOptimizer::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdamOptimizer* AdamOptimizer::New(::google::protobuf::Arena* arena) const {
  AdamOptimizer* n = new AdamOptimizer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdamOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.AdamOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) {
    delete learning_rate_;
  }
  learning_rate_ = NULL;
  weight_decay_ = 0;
  _internal_metadata_.Clear();
}

bool AdamOptimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.AdamOptimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.LearningRate learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float weight_decay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.AdamOptimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.AdamOptimizer)
  return false;
#undef DO_
}

void AdamOptimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.AdamOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->learning_rate_, output);
  }

  // float weight_decay = 2;
  if (this->weight_decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->weight_decay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.AdamOptimizer)
}

::google::protobuf::uint8* AdamOptimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.AdamOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->learning_rate_, deterministic, target);
  }

  // float weight_decay = 2;
  if (this->weight_decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->weight_decay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.AdamOptimizer)
  return target;
}

size_t AdamOptimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.AdamOptimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .second.protos.LearningRate learning_rate = 1;
  if (this->has_learning_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->learning_rate_);
  }

  // float weight_decay = 2;
  if (this->weight_decay() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdamOptimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.AdamOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const AdamOptimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdamOptimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.AdamOptimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.AdamOptimizer)
    MergeFrom(*source);
  }
}

void AdamOptimizer::MergeFrom(const AdamOptimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.AdamOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_learning_rate()) {
    mutable_learning_rate()->::second::protos::LearningRate::MergeFrom(from.learning_rate());
  }
  if (from.weight_decay() != 0) {
    set_weight_decay(from.weight_decay());
  }
}

void AdamOptimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.AdamOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdamOptimizer::CopyFrom(const AdamOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.AdamOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdamOptimizer::IsInitialized() const {
  return true;
}

void AdamOptimizer::Swap(AdamOptimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdamOptimizer::InternalSwap(AdamOptimizer* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(weight_decay_, other->weight_decay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdamOptimizer::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdamOptimizer

// .second.protos.LearningRate learning_rate = 1;
bool AdamOptimizer::has_learning_rate() const {
  return this != internal_default_instance() && learning_rate_ != NULL;
}
void AdamOptimizer::clear_learning_rate() {
  if (GetArenaNoVirtual() == NULL && learning_rate_ != NULL) delete learning_rate_;
  learning_rate_ = NULL;
}
const ::second::protos::LearningRate& AdamOptimizer::learning_rate() const {
  const ::second::protos::LearningRate* p = learning_rate_;
  // @@protoc_insertion_point(field_get:second.protos.AdamOptimizer.learning_rate)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::LearningRate*>(
      &::second::protos::_LearningRate_default_instance_);
}
::second::protos::LearningRate* AdamOptimizer::mutable_learning_rate() {
  
  if (learning_rate_ == NULL) {
    learning_rate_ = new ::second::protos::LearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.AdamOptimizer.learning_rate)
  return learning_rate_;
}
::second::protos::LearningRate* AdamOptimizer::release_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.AdamOptimizer.learning_rate)
  
  ::second::protos::LearningRate* temp = learning_rate_;
  learning_rate_ = NULL;
  return temp;
}
void AdamOptimizer::set_allocated_learning_rate(::second::protos::LearningRate* learning_rate) {
  delete learning_rate_;
  learning_rate_ = learning_rate;
  if (learning_rate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.AdamOptimizer.learning_rate)
}

// float weight_decay = 2;
void AdamOptimizer::clear_weight_decay() {
  weight_decay_ = 0;
}
float AdamOptimizer::weight_decay() const {
  // @@protoc_insertion_point(field_get:second.protos.AdamOptimizer.weight_decay)
  return weight_decay_;
}
void AdamOptimizer::set_weight_decay(float value) {
  
  weight_decay_ = value;
  // @@protoc_insertion_point(field_set:second.protos.AdamOptimizer.weight_decay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LearningRate::kConstantLearningRateFieldNumber;
const int LearningRate::kExponentialDecayLearningRateFieldNumber;
const int LearningRate::kManualStepLearningRateFieldNumber;
const int LearningRate::kCosineDecayLearningRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LearningRate::LearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.LearningRate)
}
LearningRate::LearningRate(const LearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_learning_rate();
  switch (from.learning_rate_case()) {
    case kConstantLearningRate: {
      mutable_constant_learning_rate()->::second::protos::ConstantLearningRate::MergeFrom(from.constant_learning_rate());
      break;
    }
    case kExponentialDecayLearningRate: {
      mutable_exponential_decay_learning_rate()->::second::protos::ExponentialDecayLearningRate::MergeFrom(from.exponential_decay_learning_rate());
      break;
    }
    case kManualStepLearningRate: {
      mutable_manual_step_learning_rate()->::second::protos::ManualStepLearningRate::MergeFrom(from.manual_step_learning_rate());
      break;
    }
    case kCosineDecayLearningRate: {
      mutable_cosine_decay_learning_rate()->::second::protos::CosineDecayLearningRate::MergeFrom(from.cosine_decay_learning_rate());
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:second.protos.LearningRate)
}

void LearningRate::SharedCtor() {
  clear_has_learning_rate();
  _cached_size_ = 0;
}

LearningRate::~LearningRate() {
  // @@protoc_insertion_point(destructor:second.protos.LearningRate)
  SharedDtor();
}

void LearningRate::SharedDtor() {
  if (has_learning_rate()) {
    clear_learning_rate();
  }
}

void LearningRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LearningRate::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LearningRate& LearningRate::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

LearningRate* LearningRate::New(::google::protobuf::Arena* arena) const {
  LearningRate* n = new LearningRate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LearningRate::clear_learning_rate() {
// @@protoc_insertion_point(one_of_clear_start:second.protos.LearningRate)
  switch (learning_rate_case()) {
    case kConstantLearningRate: {
      delete learning_rate_.constant_learning_rate_;
      break;
    }
    case kExponentialDecayLearningRate: {
      delete learning_rate_.exponential_decay_learning_rate_;
      break;
    }
    case kManualStepLearningRate: {
      delete learning_rate_.manual_step_learning_rate_;
      break;
    }
    case kCosineDecayLearningRate: {
      delete learning_rate_.cosine_decay_learning_rate_;
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LEARNING_RATE_NOT_SET;
}


void LearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_learning_rate();
  _internal_metadata_.Clear();
}

bool LearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.LearningRate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .second.protos.ConstantLearningRate constant_learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constant_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exponential_decay_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.ManualStepLearningRate manual_step_learning_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_manual_step_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .second.protos.CosineDecayLearningRate cosine_decay_learning_rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cosine_decay_learning_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.LearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.LearningRate)
  return false;
#undef DO_
}

void LearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.ConstantLearningRate constant_learning_rate = 1;
  if (has_constant_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *learning_rate_.constant_learning_rate_, output);
  }

  // .second.protos.ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
  if (has_exponential_decay_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *learning_rate_.exponential_decay_learning_rate_, output);
  }

  // .second.protos.ManualStepLearningRate manual_step_learning_rate = 3;
  if (has_manual_step_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *learning_rate_.manual_step_learning_rate_, output);
  }

  // .second.protos.CosineDecayLearningRate cosine_decay_learning_rate = 4;
  if (has_cosine_decay_learning_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *learning_rate_.cosine_decay_learning_rate_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.LearningRate)
}

::google::protobuf::uint8* LearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.LearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .second.protos.ConstantLearningRate constant_learning_rate = 1;
  if (has_constant_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *learning_rate_.constant_learning_rate_, deterministic, target);
  }

  // .second.protos.ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
  if (has_exponential_decay_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *learning_rate_.exponential_decay_learning_rate_, deterministic, target);
  }

  // .second.protos.ManualStepLearningRate manual_step_learning_rate = 3;
  if (has_manual_step_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *learning_rate_.manual_step_learning_rate_, deterministic, target);
  }

  // .second.protos.CosineDecayLearningRate cosine_decay_learning_rate = 4;
  if (has_cosine_decay_learning_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *learning_rate_.cosine_decay_learning_rate_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.LearningRate)
  return target;
}

size_t LearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.LearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (learning_rate_case()) {
    // .second.protos.ConstantLearningRate constant_learning_rate = 1;
    case kConstantLearningRate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *learning_rate_.constant_learning_rate_);
      break;
    }
    // .second.protos.ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
    case kExponentialDecayLearningRate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *learning_rate_.exponential_decay_learning_rate_);
      break;
    }
    // .second.protos.ManualStepLearningRate manual_step_learning_rate = 3;
    case kManualStepLearningRate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *learning_rate_.manual_step_learning_rate_);
      break;
    }
    // .second.protos.CosineDecayLearningRate cosine_decay_learning_rate = 4;
    case kCosineDecayLearningRate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *learning_rate_.cosine_decay_learning_rate_);
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.LearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const LearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.LearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.LearningRate)
    MergeFrom(*source);
  }
}

void LearningRate::MergeFrom(const LearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.LearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.learning_rate_case()) {
    case kConstantLearningRate: {
      mutable_constant_learning_rate()->::second::protos::ConstantLearningRate::MergeFrom(from.constant_learning_rate());
      break;
    }
    case kExponentialDecayLearningRate: {
      mutable_exponential_decay_learning_rate()->::second::protos::ExponentialDecayLearningRate::MergeFrom(from.exponential_decay_learning_rate());
      break;
    }
    case kManualStepLearningRate: {
      mutable_manual_step_learning_rate()->::second::protos::ManualStepLearningRate::MergeFrom(from.manual_step_learning_rate());
      break;
    }
    case kCosineDecayLearningRate: {
      mutable_cosine_decay_learning_rate()->::second::protos::CosineDecayLearningRate::MergeFrom(from.cosine_decay_learning_rate());
      break;
    }
    case LEARNING_RATE_NOT_SET: {
      break;
    }
  }
}

void LearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.LearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LearningRate::CopyFrom(const LearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.LearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LearningRate::IsInitialized() const {
  return true;
}

void LearningRate::Swap(LearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LearningRate::InternalSwap(LearningRate* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LearningRate::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LearningRate

// .second.protos.ConstantLearningRate constant_learning_rate = 1;
bool LearningRate::has_constant_learning_rate() const {
  return learning_rate_case() == kConstantLearningRate;
}
void LearningRate::set_has_constant_learning_rate() {
  _oneof_case_[0] = kConstantLearningRate;
}
void LearningRate::clear_constant_learning_rate() {
  if (has_constant_learning_rate()) {
    delete learning_rate_.constant_learning_rate_;
    clear_has_learning_rate();
  }
}
 const ::second::protos::ConstantLearningRate& LearningRate::constant_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.LearningRate.constant_learning_rate)
  return has_constant_learning_rate()
      ? *learning_rate_.constant_learning_rate_
      : ::second::protos::ConstantLearningRate::default_instance();
}
::second::protos::ConstantLearningRate* LearningRate::mutable_constant_learning_rate() {
  if (!has_constant_learning_rate()) {
    clear_learning_rate();
    set_has_constant_learning_rate();
    learning_rate_.constant_learning_rate_ = new ::second::protos::ConstantLearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.LearningRate.constant_learning_rate)
  return learning_rate_.constant_learning_rate_;
}
::second::protos::ConstantLearningRate* LearningRate::release_constant_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.LearningRate.constant_learning_rate)
  if (has_constant_learning_rate()) {
    clear_has_learning_rate();
    ::second::protos::ConstantLearningRate* temp = learning_rate_.constant_learning_rate_;
    learning_rate_.constant_learning_rate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LearningRate::set_allocated_constant_learning_rate(::second::protos::ConstantLearningRate* constant_learning_rate) {
  clear_learning_rate();
  if (constant_learning_rate) {
    set_has_constant_learning_rate();
    learning_rate_.constant_learning_rate_ = constant_learning_rate;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.LearningRate.constant_learning_rate)
}

// .second.protos.ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
bool LearningRate::has_exponential_decay_learning_rate() const {
  return learning_rate_case() == kExponentialDecayLearningRate;
}
void LearningRate::set_has_exponential_decay_learning_rate() {
  _oneof_case_[0] = kExponentialDecayLearningRate;
}
void LearningRate::clear_exponential_decay_learning_rate() {
  if (has_exponential_decay_learning_rate()) {
    delete learning_rate_.exponential_decay_learning_rate_;
    clear_has_learning_rate();
  }
}
 const ::second::protos::ExponentialDecayLearningRate& LearningRate::exponential_decay_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.LearningRate.exponential_decay_learning_rate)
  return has_exponential_decay_learning_rate()
      ? *learning_rate_.exponential_decay_learning_rate_
      : ::second::protos::ExponentialDecayLearningRate::default_instance();
}
::second::protos::ExponentialDecayLearningRate* LearningRate::mutable_exponential_decay_learning_rate() {
  if (!has_exponential_decay_learning_rate()) {
    clear_learning_rate();
    set_has_exponential_decay_learning_rate();
    learning_rate_.exponential_decay_learning_rate_ = new ::second::protos::ExponentialDecayLearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.LearningRate.exponential_decay_learning_rate)
  return learning_rate_.exponential_decay_learning_rate_;
}
::second::protos::ExponentialDecayLearningRate* LearningRate::release_exponential_decay_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.LearningRate.exponential_decay_learning_rate)
  if (has_exponential_decay_learning_rate()) {
    clear_has_learning_rate();
    ::second::protos::ExponentialDecayLearningRate* temp = learning_rate_.exponential_decay_learning_rate_;
    learning_rate_.exponential_decay_learning_rate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LearningRate::set_allocated_exponential_decay_learning_rate(::second::protos::ExponentialDecayLearningRate* exponential_decay_learning_rate) {
  clear_learning_rate();
  if (exponential_decay_learning_rate) {
    set_has_exponential_decay_learning_rate();
    learning_rate_.exponential_decay_learning_rate_ = exponential_decay_learning_rate;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.LearningRate.exponential_decay_learning_rate)
}

// .second.protos.ManualStepLearningRate manual_step_learning_rate = 3;
bool LearningRate::has_manual_step_learning_rate() const {
  return learning_rate_case() == kManualStepLearningRate;
}
void LearningRate::set_has_manual_step_learning_rate() {
  _oneof_case_[0] = kManualStepLearningRate;
}
void LearningRate::clear_manual_step_learning_rate() {
  if (has_manual_step_learning_rate()) {
    delete learning_rate_.manual_step_learning_rate_;
    clear_has_learning_rate();
  }
}
 const ::second::protos::ManualStepLearningRate& LearningRate::manual_step_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.LearningRate.manual_step_learning_rate)
  return has_manual_step_learning_rate()
      ? *learning_rate_.manual_step_learning_rate_
      : ::second::protos::ManualStepLearningRate::default_instance();
}
::second::protos::ManualStepLearningRate* LearningRate::mutable_manual_step_learning_rate() {
  if (!has_manual_step_learning_rate()) {
    clear_learning_rate();
    set_has_manual_step_learning_rate();
    learning_rate_.manual_step_learning_rate_ = new ::second::protos::ManualStepLearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.LearningRate.manual_step_learning_rate)
  return learning_rate_.manual_step_learning_rate_;
}
::second::protos::ManualStepLearningRate* LearningRate::release_manual_step_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.LearningRate.manual_step_learning_rate)
  if (has_manual_step_learning_rate()) {
    clear_has_learning_rate();
    ::second::protos::ManualStepLearningRate* temp = learning_rate_.manual_step_learning_rate_;
    learning_rate_.manual_step_learning_rate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LearningRate::set_allocated_manual_step_learning_rate(::second::protos::ManualStepLearningRate* manual_step_learning_rate) {
  clear_learning_rate();
  if (manual_step_learning_rate) {
    set_has_manual_step_learning_rate();
    learning_rate_.manual_step_learning_rate_ = manual_step_learning_rate;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.LearningRate.manual_step_learning_rate)
}

// .second.protos.CosineDecayLearningRate cosine_decay_learning_rate = 4;
bool LearningRate::has_cosine_decay_learning_rate() const {
  return learning_rate_case() == kCosineDecayLearningRate;
}
void LearningRate::set_has_cosine_decay_learning_rate() {
  _oneof_case_[0] = kCosineDecayLearningRate;
}
void LearningRate::clear_cosine_decay_learning_rate() {
  if (has_cosine_decay_learning_rate()) {
    delete learning_rate_.cosine_decay_learning_rate_;
    clear_has_learning_rate();
  }
}
 const ::second::protos::CosineDecayLearningRate& LearningRate::cosine_decay_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.LearningRate.cosine_decay_learning_rate)
  return has_cosine_decay_learning_rate()
      ? *learning_rate_.cosine_decay_learning_rate_
      : ::second::protos::CosineDecayLearningRate::default_instance();
}
::second::protos::CosineDecayLearningRate* LearningRate::mutable_cosine_decay_learning_rate() {
  if (!has_cosine_decay_learning_rate()) {
    clear_learning_rate();
    set_has_cosine_decay_learning_rate();
    learning_rate_.cosine_decay_learning_rate_ = new ::second::protos::CosineDecayLearningRate;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.LearningRate.cosine_decay_learning_rate)
  return learning_rate_.cosine_decay_learning_rate_;
}
::second::protos::CosineDecayLearningRate* LearningRate::release_cosine_decay_learning_rate() {
  // @@protoc_insertion_point(field_release:second.protos.LearningRate.cosine_decay_learning_rate)
  if (has_cosine_decay_learning_rate()) {
    clear_has_learning_rate();
    ::second::protos::CosineDecayLearningRate* temp = learning_rate_.cosine_decay_learning_rate_;
    learning_rate_.cosine_decay_learning_rate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LearningRate::set_allocated_cosine_decay_learning_rate(::second::protos::CosineDecayLearningRate* cosine_decay_learning_rate) {
  clear_learning_rate();
  if (cosine_decay_learning_rate) {
    set_has_cosine_decay_learning_rate();
    learning_rate_.cosine_decay_learning_rate_ = cosine_decay_learning_rate;
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.LearningRate.cosine_decay_learning_rate)
}

bool LearningRate::has_learning_rate() const {
  return learning_rate_case() != LEARNING_RATE_NOT_SET;
}
void LearningRate::clear_has_learning_rate() {
  _oneof_case_[0] = LEARNING_RATE_NOT_SET;
}
LearningRate::LearningRateCase LearningRate::learning_rate_case() const {
  return LearningRate::LearningRateCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConstantLearningRate::kLearningRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConstantLearningRate::ConstantLearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ConstantLearningRate)
}
ConstantLearningRate::ConstantLearningRate(const ConstantLearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  learning_rate_ = from.learning_rate_;
  // @@protoc_insertion_point(copy_constructor:second.protos.ConstantLearningRate)
}

void ConstantLearningRate::SharedCtor() {
  learning_rate_ = 0;
  _cached_size_ = 0;
}

ConstantLearningRate::~ConstantLearningRate() {
  // @@protoc_insertion_point(destructor:second.protos.ConstantLearningRate)
  SharedDtor();
}

void ConstantLearningRate::SharedDtor() {
}

void ConstantLearningRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstantLearningRate::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConstantLearningRate& ConstantLearningRate::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConstantLearningRate* ConstantLearningRate::New(::google::protobuf::Arena* arena) const {
  ConstantLearningRate* n = new ConstantLearningRate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConstantLearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ConstantLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  learning_rate_ = 0;
  _internal_metadata_.Clear();
}

bool ConstantLearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ConstantLearningRate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ConstantLearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ConstantLearningRate)
  return false;
#undef DO_
}

void ConstantLearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ConstantLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->learning_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ConstantLearningRate)
}

::google::protobuf::uint8* ConstantLearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ConstantLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->learning_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ConstantLearningRate)
  return target;
}

size_t ConstantLearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ConstantLearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstantLearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ConstantLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const ConstantLearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConstantLearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ConstantLearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ConstantLearningRate)
    MergeFrom(*source);
  }
}

void ConstantLearningRate::MergeFrom(const ConstantLearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ConstantLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.learning_rate() != 0) {
    set_learning_rate(from.learning_rate());
  }
}

void ConstantLearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ConstantLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstantLearningRate::CopyFrom(const ConstantLearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ConstantLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstantLearningRate::IsInitialized() const {
  return true;
}

void ConstantLearningRate::Swap(ConstantLearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConstantLearningRate::InternalSwap(ConstantLearningRate* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConstantLearningRate::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConstantLearningRate

// float learning_rate = 1;
void ConstantLearningRate::clear_learning_rate() {
  learning_rate_ = 0;
}
float ConstantLearningRate::learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.ConstantLearningRate.learning_rate)
  return learning_rate_;
}
void ConstantLearningRate::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ConstantLearningRate.learning_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExponentialDecayLearningRate::kInitialLearningRateFieldNumber;
const int ExponentialDecayLearningRate::kDecayStepsFieldNumber;
const int ExponentialDecayLearningRate::kDecayFactorFieldNumber;
const int ExponentialDecayLearningRate::kStaircaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExponentialDecayLearningRate::ExponentialDecayLearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ExponentialDecayLearningRate)
}
ExponentialDecayLearningRate::ExponentialDecayLearningRate(const ExponentialDecayLearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&initial_learning_rate_, &from.initial_learning_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&staircase_) -
    reinterpret_cast<char*>(&initial_learning_rate_)) + sizeof(staircase_));
  // @@protoc_insertion_point(copy_constructor:second.protos.ExponentialDecayLearningRate)
}

void ExponentialDecayLearningRate::SharedCtor() {
  ::memset(&initial_learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&staircase_) -
      reinterpret_cast<char*>(&initial_learning_rate_)) + sizeof(staircase_));
  _cached_size_ = 0;
}

ExponentialDecayLearningRate::~ExponentialDecayLearningRate() {
  // @@protoc_insertion_point(destructor:second.protos.ExponentialDecayLearningRate)
  SharedDtor();
}

void ExponentialDecayLearningRate::SharedDtor() {
}

void ExponentialDecayLearningRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExponentialDecayLearningRate::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExponentialDecayLearningRate& ExponentialDecayLearningRate::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExponentialDecayLearningRate* ExponentialDecayLearningRate::New(::google::protobuf::Arena* arena) const {
  ExponentialDecayLearningRate* n = new ExponentialDecayLearningRate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExponentialDecayLearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ExponentialDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&initial_learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&staircase_) -
      reinterpret_cast<char*>(&initial_learning_rate_)) + sizeof(staircase_));
  _internal_metadata_.Clear();
}

bool ExponentialDecayLearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ExponentialDecayLearningRate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float initial_learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &initial_learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 decay_steps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decay_steps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float decay_factor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &decay_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool staircase = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &staircase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ExponentialDecayLearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ExponentialDecayLearningRate)
  return false;
#undef DO_
}

void ExponentialDecayLearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ExponentialDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->initial_learning_rate(), output);
  }

  // uint32 decay_steps = 2;
  if (this->decay_steps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->decay_steps(), output);
  }

  // float decay_factor = 3;
  if (this->decay_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->decay_factor(), output);
  }

  // bool staircase = 4;
  if (this->staircase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->staircase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ExponentialDecayLearningRate)
}

::google::protobuf::uint8* ExponentialDecayLearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ExponentialDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->initial_learning_rate(), target);
  }

  // uint32 decay_steps = 2;
  if (this->decay_steps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->decay_steps(), target);
  }

  // float decay_factor = 3;
  if (this->decay_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->decay_factor(), target);
  }

  // bool staircase = 4;
  if (this->staircase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->staircase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ExponentialDecayLearningRate)
  return target;
}

size_t ExponentialDecayLearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ExponentialDecayLearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    total_size += 1 + 4;
  }

  // uint32 decay_steps = 2;
  if (this->decay_steps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->decay_steps());
  }

  // float decay_factor = 3;
  if (this->decay_factor() != 0) {
    total_size += 1 + 4;
  }

  // bool staircase = 4;
  if (this->staircase() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExponentialDecayLearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ExponentialDecayLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const ExponentialDecayLearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExponentialDecayLearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ExponentialDecayLearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ExponentialDecayLearningRate)
    MergeFrom(*source);
  }
}

void ExponentialDecayLearningRate::MergeFrom(const ExponentialDecayLearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ExponentialDecayLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.initial_learning_rate() != 0) {
    set_initial_learning_rate(from.initial_learning_rate());
  }
  if (from.decay_steps() != 0) {
    set_decay_steps(from.decay_steps());
  }
  if (from.decay_factor() != 0) {
    set_decay_factor(from.decay_factor());
  }
  if (from.staircase() != 0) {
    set_staircase(from.staircase());
  }
}

void ExponentialDecayLearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ExponentialDecayLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExponentialDecayLearningRate::CopyFrom(const ExponentialDecayLearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ExponentialDecayLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExponentialDecayLearningRate::IsInitialized() const {
  return true;
}

void ExponentialDecayLearningRate::Swap(ExponentialDecayLearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExponentialDecayLearningRate::InternalSwap(ExponentialDecayLearningRate* other) {
  using std::swap;
  swap(initial_learning_rate_, other->initial_learning_rate_);
  swap(decay_steps_, other->decay_steps_);
  swap(decay_factor_, other->decay_factor_);
  swap(staircase_, other->staircase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExponentialDecayLearningRate::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExponentialDecayLearningRate

// float initial_learning_rate = 1;
void ExponentialDecayLearningRate::clear_initial_learning_rate() {
  initial_learning_rate_ = 0;
}
float ExponentialDecayLearningRate::initial_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.ExponentialDecayLearningRate.initial_learning_rate)
  return initial_learning_rate_;
}
void ExponentialDecayLearningRate::set_initial_learning_rate(float value) {
  
  initial_learning_rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ExponentialDecayLearningRate.initial_learning_rate)
}

// uint32 decay_steps = 2;
void ExponentialDecayLearningRate::clear_decay_steps() {
  decay_steps_ = 0u;
}
::google::protobuf::uint32 ExponentialDecayLearningRate::decay_steps() const {
  // @@protoc_insertion_point(field_get:second.protos.ExponentialDecayLearningRate.decay_steps)
  return decay_steps_;
}
void ExponentialDecayLearningRate::set_decay_steps(::google::protobuf::uint32 value) {
  
  decay_steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ExponentialDecayLearningRate.decay_steps)
}

// float decay_factor = 3;
void ExponentialDecayLearningRate::clear_decay_factor() {
  decay_factor_ = 0;
}
float ExponentialDecayLearningRate::decay_factor() const {
  // @@protoc_insertion_point(field_get:second.protos.ExponentialDecayLearningRate.decay_factor)
  return decay_factor_;
}
void ExponentialDecayLearningRate::set_decay_factor(float value) {
  
  decay_factor_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ExponentialDecayLearningRate.decay_factor)
}

// bool staircase = 4;
void ExponentialDecayLearningRate::clear_staircase() {
  staircase_ = false;
}
bool ExponentialDecayLearningRate::staircase() const {
  // @@protoc_insertion_point(field_get:second.protos.ExponentialDecayLearningRate.staircase)
  return staircase_;
}
void ExponentialDecayLearningRate::set_staircase(bool value) {
  
  staircase_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ExponentialDecayLearningRate.staircase)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManualStepLearningRate_LearningRateSchedule::kStepFieldNumber;
const int ManualStepLearningRate_LearningRateSchedule::kLearningRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManualStepLearningRate_LearningRateSchedule::ManualStepLearningRate_LearningRateSchedule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ManualStepLearningRate.LearningRateSchedule)
}
ManualStepLearningRate_LearningRateSchedule::ManualStepLearningRate_LearningRateSchedule(const ManualStepLearningRate_LearningRateSchedule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&step_, &from.step_,
    static_cast<size_t>(reinterpret_cast<char*>(&learning_rate_) -
    reinterpret_cast<char*>(&step_)) + sizeof(learning_rate_));
  // @@protoc_insertion_point(copy_constructor:second.protos.ManualStepLearningRate.LearningRateSchedule)
}

void ManualStepLearningRate_LearningRateSchedule::SharedCtor() {
  ::memset(&step_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&learning_rate_) -
      reinterpret_cast<char*>(&step_)) + sizeof(learning_rate_));
  _cached_size_ = 0;
}

ManualStepLearningRate_LearningRateSchedule::~ManualStepLearningRate_LearningRateSchedule() {
  // @@protoc_insertion_point(destructor:second.protos.ManualStepLearningRate.LearningRateSchedule)
  SharedDtor();
}

void ManualStepLearningRate_LearningRateSchedule::SharedDtor() {
}

void ManualStepLearningRate_LearningRateSchedule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManualStepLearningRate_LearningRateSchedule::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManualStepLearningRate_LearningRateSchedule& ManualStepLearningRate_LearningRateSchedule::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ManualStepLearningRate_LearningRateSchedule* ManualStepLearningRate_LearningRateSchedule::New(::google::protobuf::Arena* arena) const {
  ManualStepLearningRate_LearningRateSchedule* n = new ManualStepLearningRate_LearningRateSchedule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ManualStepLearningRate_LearningRateSchedule::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&step_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&learning_rate_) -
      reinterpret_cast<char*>(&step_)) + sizeof(learning_rate_));
  _internal_metadata_.Clear();
}

bool ManualStepLearningRate_LearningRateSchedule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 step = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float learning_rate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ManualStepLearningRate.LearningRateSchedule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ManualStepLearningRate.LearningRateSchedule)
  return false;
#undef DO_
}

void ManualStepLearningRate_LearningRateSchedule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step = 1;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->step(), output);
  }

  // float learning_rate = 2;
  if (this->learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->learning_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ManualStepLearningRate.LearningRateSchedule)
}

::google::protobuf::uint8* ManualStepLearningRate_LearningRateSchedule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 step = 1;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->step(), target);
  }

  // float learning_rate = 2;
  if (this->learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->learning_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ManualStepLearningRate.LearningRateSchedule)
  return target;
}

size_t ManualStepLearningRate_LearningRateSchedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 step = 1;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->step());
  }

  // float learning_rate = 2;
  if (this->learning_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManualStepLearningRate_LearningRateSchedule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  GOOGLE_DCHECK_NE(&from, this);
  const ManualStepLearningRate_LearningRateSchedule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManualStepLearningRate_LearningRateSchedule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ManualStepLearningRate.LearningRateSchedule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ManualStepLearningRate.LearningRateSchedule)
    MergeFrom(*source);
  }
}

void ManualStepLearningRate_LearningRateSchedule::MergeFrom(const ManualStepLearningRate_LearningRateSchedule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.learning_rate() != 0) {
    set_learning_rate(from.learning_rate());
  }
}

void ManualStepLearningRate_LearningRateSchedule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualStepLearningRate_LearningRateSchedule::CopyFrom(const ManualStepLearningRate_LearningRateSchedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ManualStepLearningRate.LearningRateSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualStepLearningRate_LearningRateSchedule::IsInitialized() const {
  return true;
}

void ManualStepLearningRate_LearningRateSchedule::Swap(ManualStepLearningRate_LearningRateSchedule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManualStepLearningRate_LearningRateSchedule::InternalSwap(ManualStepLearningRate_LearningRateSchedule* other) {
  using std::swap;
  swap(step_, other->step_);
  swap(learning_rate_, other->learning_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ManualStepLearningRate_LearningRateSchedule::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ManualStepLearningRate_LearningRateSchedule

// uint32 step = 1;
void ManualStepLearningRate_LearningRateSchedule::clear_step() {
  step_ = 0u;
}
::google::protobuf::uint32 ManualStepLearningRate_LearningRateSchedule::step() const {
  // @@protoc_insertion_point(field_get:second.protos.ManualStepLearningRate.LearningRateSchedule.step)
  return step_;
}
void ManualStepLearningRate_LearningRateSchedule::set_step(::google::protobuf::uint32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ManualStepLearningRate.LearningRateSchedule.step)
}

// float learning_rate = 2;
void ManualStepLearningRate_LearningRateSchedule::clear_learning_rate() {
  learning_rate_ = 0;
}
float ManualStepLearningRate_LearningRateSchedule::learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.ManualStepLearningRate.LearningRateSchedule.learning_rate)
  return learning_rate_;
}
void ManualStepLearningRate_LearningRateSchedule::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ManualStepLearningRate.LearningRateSchedule.learning_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManualStepLearningRate::kInitialLearningRateFieldNumber;
const int ManualStepLearningRate::kScheduleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManualStepLearningRate::ManualStepLearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.ManualStepLearningRate)
}
ManualStepLearningRate::ManualStepLearningRate(const ManualStepLearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      schedule_(from.schedule_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initial_learning_rate_ = from.initial_learning_rate_;
  // @@protoc_insertion_point(copy_constructor:second.protos.ManualStepLearningRate)
}

void ManualStepLearningRate::SharedCtor() {
  initial_learning_rate_ = 0;
  _cached_size_ = 0;
}

ManualStepLearningRate::~ManualStepLearningRate() {
  // @@protoc_insertion_point(destructor:second.protos.ManualStepLearningRate)
  SharedDtor();
}

void ManualStepLearningRate::SharedDtor() {
}

void ManualStepLearningRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManualStepLearningRate::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManualStepLearningRate& ManualStepLearningRate::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ManualStepLearningRate* ManualStepLearningRate::New(::google::protobuf::Arena* arena) const {
  ManualStepLearningRate* n = new ManualStepLearningRate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ManualStepLearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.ManualStepLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schedule_.Clear();
  initial_learning_rate_ = 0;
  _internal_metadata_.Clear();
}

bool ManualStepLearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.ManualStepLearningRate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float initial_learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &initial_learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .second.protos.ManualStepLearningRate.LearningRateSchedule schedule = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_schedule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.ManualStepLearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.ManualStepLearningRate)
  return false;
#undef DO_
}

void ManualStepLearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.ManualStepLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->initial_learning_rate(), output);
  }

  // repeated .second.protos.ManualStepLearningRate.LearningRateSchedule schedule = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schedule_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->schedule(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.ManualStepLearningRate)
}

::google::protobuf::uint8* ManualStepLearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.ManualStepLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->initial_learning_rate(), target);
  }

  // repeated .second.protos.ManualStepLearningRate.LearningRateSchedule schedule = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schedule_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->schedule(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.ManualStepLearningRate)
  return target;
}

size_t ManualStepLearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.ManualStepLearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .second.protos.ManualStepLearningRate.LearningRateSchedule schedule = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->schedule_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->schedule(static_cast<int>(i)));
    }
  }

  // float initial_learning_rate = 1;
  if (this->initial_learning_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManualStepLearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.ManualStepLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const ManualStepLearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManualStepLearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.ManualStepLearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.ManualStepLearningRate)
    MergeFrom(*source);
  }
}

void ManualStepLearningRate::MergeFrom(const ManualStepLearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.ManualStepLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schedule_.MergeFrom(from.schedule_);
  if (from.initial_learning_rate() != 0) {
    set_initial_learning_rate(from.initial_learning_rate());
  }
}

void ManualStepLearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.ManualStepLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualStepLearningRate::CopyFrom(const ManualStepLearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.ManualStepLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualStepLearningRate::IsInitialized() const {
  return true;
}

void ManualStepLearningRate::Swap(ManualStepLearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManualStepLearningRate::InternalSwap(ManualStepLearningRate* other) {
  using std::swap;
  schedule_.InternalSwap(&other->schedule_);
  swap(initial_learning_rate_, other->initial_learning_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ManualStepLearningRate::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ManualStepLearningRate

// float initial_learning_rate = 1;
void ManualStepLearningRate::clear_initial_learning_rate() {
  initial_learning_rate_ = 0;
}
float ManualStepLearningRate::initial_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.ManualStepLearningRate.initial_learning_rate)
  return initial_learning_rate_;
}
void ManualStepLearningRate::set_initial_learning_rate(float value) {
  
  initial_learning_rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.ManualStepLearningRate.initial_learning_rate)
}

// repeated .second.protos.ManualStepLearningRate.LearningRateSchedule schedule = 2;
int ManualStepLearningRate::schedule_size() const {
  return schedule_.size();
}
void ManualStepLearningRate::clear_schedule() {
  schedule_.Clear();
}
const ::second::protos::ManualStepLearningRate_LearningRateSchedule& ManualStepLearningRate::schedule(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.ManualStepLearningRate.schedule)
  return schedule_.Get(index);
}
::second::protos::ManualStepLearningRate_LearningRateSchedule* ManualStepLearningRate::mutable_schedule(int index) {
  // @@protoc_insertion_point(field_mutable:second.protos.ManualStepLearningRate.schedule)
  return schedule_.Mutable(index);
}
::second::protos::ManualStepLearningRate_LearningRateSchedule* ManualStepLearningRate::add_schedule() {
  // @@protoc_insertion_point(field_add:second.protos.ManualStepLearningRate.schedule)
  return schedule_.Add();
}
::google::protobuf::RepeatedPtrField< ::second::protos::ManualStepLearningRate_LearningRateSchedule >*
ManualStepLearningRate::mutable_schedule() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.ManualStepLearningRate.schedule)
  return &schedule_;
}
const ::google::protobuf::RepeatedPtrField< ::second::protos::ManualStepLearningRate_LearningRateSchedule >&
ManualStepLearningRate::schedule() const {
  // @@protoc_insertion_point(field_list:second.protos.ManualStepLearningRate.schedule)
  return schedule_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosineDecayLearningRate::kLearningRateBaseFieldNumber;
const int CosineDecayLearningRate::kTotalStepsFieldNumber;
const int CosineDecayLearningRate::kWarmupLearningRateFieldNumber;
const int CosineDecayLearningRate::kWarmupStepsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosineDecayLearningRate::CosineDecayLearningRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:second.protos.CosineDecayLearningRate)
}
CosineDecayLearningRate::CosineDecayLearningRate(const CosineDecayLearningRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&learning_rate_base_, &from.learning_rate_base_,
    static_cast<size_t>(reinterpret_cast<char*>(&warmup_steps_) -
    reinterpret_cast<char*>(&learning_rate_base_)) + sizeof(warmup_steps_));
  // @@protoc_insertion_point(copy_constructor:second.protos.CosineDecayLearningRate)
}

void CosineDecayLearningRate::SharedCtor() {
  ::memset(&learning_rate_base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&warmup_steps_) -
      reinterpret_cast<char*>(&learning_rate_base_)) + sizeof(warmup_steps_));
  _cached_size_ = 0;
}

CosineDecayLearningRate::~CosineDecayLearningRate() {
  // @@protoc_insertion_point(destructor:second.protos.CosineDecayLearningRate)
  SharedDtor();
}

void CosineDecayLearningRate::SharedDtor() {
}

void CosineDecayLearningRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CosineDecayLearningRate::descriptor() {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosineDecayLearningRate& CosineDecayLearningRate::default_instance() {
  protobuf_second_2fprotos_2foptimizer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CosineDecayLearningRate* CosineDecayLearningRate::New(::google::protobuf::Arena* arena) const {
  CosineDecayLearningRate* n = new CosineDecayLearningRate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CosineDecayLearningRate::Clear() {
// @@protoc_insertion_point(message_clear_start:second.protos.CosineDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&learning_rate_base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&warmup_steps_) -
      reinterpret_cast<char*>(&learning_rate_base_)) + sizeof(warmup_steps_));
  _internal_metadata_.Clear();
}

bool CosineDecayLearningRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:second.protos.CosineDecayLearningRate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float learning_rate_base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_base_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_steps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_steps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float warmup_learning_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &warmup_learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 warmup_steps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warmup_steps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:second.protos.CosineDecayLearningRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:second.protos.CosineDecayLearningRate)
  return false;
#undef DO_
}

void CosineDecayLearningRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:second.protos.CosineDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate_base = 1;
  if (this->learning_rate_base() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->learning_rate_base(), output);
  }

  // uint32 total_steps = 2;
  if (this->total_steps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_steps(), output);
  }

  // float warmup_learning_rate = 3;
  if (this->warmup_learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->warmup_learning_rate(), output);
  }

  // uint32 warmup_steps = 4;
  if (this->warmup_steps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->warmup_steps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:second.protos.CosineDecayLearningRate)
}

::google::protobuf::uint8* CosineDecayLearningRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:second.protos.CosineDecayLearningRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate_base = 1;
  if (this->learning_rate_base() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->learning_rate_base(), target);
  }

  // uint32 total_steps = 2;
  if (this->total_steps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_steps(), target);
  }

  // float warmup_learning_rate = 3;
  if (this->warmup_learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->warmup_learning_rate(), target);
  }

  // uint32 warmup_steps = 4;
  if (this->warmup_steps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->warmup_steps(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:second.protos.CosineDecayLearningRate)
  return target;
}

size_t CosineDecayLearningRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:second.protos.CosineDecayLearningRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float learning_rate_base = 1;
  if (this->learning_rate_base() != 0) {
    total_size += 1 + 4;
  }

  // uint32 total_steps = 2;
  if (this->total_steps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_steps());
  }

  // float warmup_learning_rate = 3;
  if (this->warmup_learning_rate() != 0) {
    total_size += 1 + 4;
  }

  // uint32 warmup_steps = 4;
  if (this->warmup_steps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warmup_steps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CosineDecayLearningRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:second.protos.CosineDecayLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  const CosineDecayLearningRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosineDecayLearningRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:second.protos.CosineDecayLearningRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:second.protos.CosineDecayLearningRate)
    MergeFrom(*source);
  }
}

void CosineDecayLearningRate::MergeFrom(const CosineDecayLearningRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:second.protos.CosineDecayLearningRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.learning_rate_base() != 0) {
    set_learning_rate_base(from.learning_rate_base());
  }
  if (from.total_steps() != 0) {
    set_total_steps(from.total_steps());
  }
  if (from.warmup_learning_rate() != 0) {
    set_warmup_learning_rate(from.warmup_learning_rate());
  }
  if (from.warmup_steps() != 0) {
    set_warmup_steps(from.warmup_steps());
  }
}

void CosineDecayLearningRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:second.protos.CosineDecayLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosineDecayLearningRate::CopyFrom(const CosineDecayLearningRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:second.protos.CosineDecayLearningRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosineDecayLearningRate::IsInitialized() const {
  return true;
}

void CosineDecayLearningRate::Swap(CosineDecayLearningRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosineDecayLearningRate::InternalSwap(CosineDecayLearningRate* other) {
  using std::swap;
  swap(learning_rate_base_, other->learning_rate_base_);
  swap(total_steps_, other->total_steps_);
  swap(warmup_learning_rate_, other->warmup_learning_rate_);
  swap(warmup_steps_, other->warmup_steps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CosineDecayLearningRate::GetMetadata() const {
  protobuf_second_2fprotos_2foptimizer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_second_2fprotos_2foptimizer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CosineDecayLearningRate

// float learning_rate_base = 1;
void CosineDecayLearningRate::clear_learning_rate_base() {
  learning_rate_base_ = 0;
}
float CosineDecayLearningRate::learning_rate_base() const {
  // @@protoc_insertion_point(field_get:second.protos.CosineDecayLearningRate.learning_rate_base)
  return learning_rate_base_;
}
void CosineDecayLearningRate::set_learning_rate_base(float value) {
  
  learning_rate_base_ = value;
  // @@protoc_insertion_point(field_set:second.protos.CosineDecayLearningRate.learning_rate_base)
}

// uint32 total_steps = 2;
void CosineDecayLearningRate::clear_total_steps() {
  total_steps_ = 0u;
}
::google::protobuf::uint32 CosineDecayLearningRate::total_steps() const {
  // @@protoc_insertion_point(field_get:second.protos.CosineDecayLearningRate.total_steps)
  return total_steps_;
}
void CosineDecayLearningRate::set_total_steps(::google::protobuf::uint32 value) {
  
  total_steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.CosineDecayLearningRate.total_steps)
}

// float warmup_learning_rate = 3;
void CosineDecayLearningRate::clear_warmup_learning_rate() {
  warmup_learning_rate_ = 0;
}
float CosineDecayLearningRate::warmup_learning_rate() const {
  // @@protoc_insertion_point(field_get:second.protos.CosineDecayLearningRate.warmup_learning_rate)
  return warmup_learning_rate_;
}
void CosineDecayLearningRate::set_warmup_learning_rate(float value) {
  
  warmup_learning_rate_ = value;
  // @@protoc_insertion_point(field_set:second.protos.CosineDecayLearningRate.warmup_learning_rate)
}

// uint32 warmup_steps = 4;
void CosineDecayLearningRate::clear_warmup_steps() {
  warmup_steps_ = 0u;
}
::google::protobuf::uint32 CosineDecayLearningRate::warmup_steps() const {
  // @@protoc_insertion_point(field_get:second.protos.CosineDecayLearningRate.warmup_steps)
  return warmup_steps_;
}
void CosineDecayLearningRate::set_warmup_steps(::google::protobuf::uint32 value) {
  
  warmup_steps_ = value;
  // @@protoc_insertion_point(field_set:second.protos.CosineDecayLearningRate.warmup_steps)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)
