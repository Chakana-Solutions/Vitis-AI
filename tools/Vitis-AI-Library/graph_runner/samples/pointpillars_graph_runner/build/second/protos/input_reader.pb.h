// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: second/protos/input_reader.proto

#ifndef PROTOBUF_second_2fprotos_2finput_5freader_2eproto__INCLUDED
#define PROTOBUF_second_2fprotos_2finput_5freader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "second/protos/target.pb.h"
#include "second/protos/preprocess.pb.h"
#include "second/protos/sampler.pb.h"
// @@protoc_insertion_point(includes)
namespace second {
namespace protos {
class InputReader;
class InputReaderDefaultTypeInternal;
extern InputReaderDefaultTypeInternal _InputReader_default_instance_;
}  // namespace protos
}  // namespace second

namespace second {
namespace protos {

namespace protobuf_second_2fprotos_2finput_5freader_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_second_2fprotos_2finput_5freader_2eproto

// ===================================================================

class InputReader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:second.protos.InputReader) */ {
 public:
  InputReader();
  virtual ~InputReader();

  InputReader(const InputReader& from);

  inline InputReader& operator=(const InputReader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputReader(InputReader&& from) noexcept
    : InputReader() {
    *this = ::std::move(from);
  }

  inline InputReader& operator=(InputReader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputReader& default_instance();

  static inline const InputReader* internal_default_instance() {
    return reinterpret_cast<const InputReader*>(
               &_InputReader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InputReader* other);
  friend void swap(InputReader& a, InputReader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputReader* New() const PROTOBUF_FINAL { return New(NULL); }

  InputReader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InputReader& from);
  void MergeFrom(const InputReader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InputReader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string class_names = 2;
  int class_names_size() const;
  void clear_class_names();
  static const int kClassNamesFieldNumber = 2;
  const ::std::string& class_names(int index) const;
  ::std::string* mutable_class_names(int index);
  void set_class_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_class_names(int index, ::std::string&& value);
  #endif
  void set_class_names(int index, const char* value);
  void set_class_names(int index, const char* value, size_t size);
  ::std::string* add_class_names();
  void add_class_names(const ::std::string& value);
  #if LANG_CXX11
  void add_class_names(::std::string&& value);
  #endif
  void add_class_names(const char* value);
  void add_class_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& class_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_class_names();

  // repeated float groundtruth_localization_noise_std = 11;
  int groundtruth_localization_noise_std_size() const;
  void clear_groundtruth_localization_noise_std();
  static const int kGroundtruthLocalizationNoiseStdFieldNumber = 11;
  float groundtruth_localization_noise_std(int index) const;
  void set_groundtruth_localization_noise_std(int index, float value);
  void add_groundtruth_localization_noise_std(float value);
  const ::google::protobuf::RepeatedField< float >&
      groundtruth_localization_noise_std() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_groundtruth_localization_noise_std();

  // repeated float groundtruth_rotation_uniform_noise = 12;
  int groundtruth_rotation_uniform_noise_size() const;
  void clear_groundtruth_rotation_uniform_noise();
  static const int kGroundtruthRotationUniformNoiseFieldNumber = 12;
  float groundtruth_rotation_uniform_noise(int index) const;
  void set_groundtruth_rotation_uniform_noise(int index, float value);
  void add_groundtruth_rotation_uniform_noise(float value);
  const ::google::protobuf::RepeatedField< float >&
      groundtruth_rotation_uniform_noise() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_groundtruth_rotation_uniform_noise();

  // repeated float global_rotation_uniform_noise = 13;
  int global_rotation_uniform_noise_size() const;
  void clear_global_rotation_uniform_noise();
  static const int kGlobalRotationUniformNoiseFieldNumber = 13;
  float global_rotation_uniform_noise(int index) const;
  void set_global_rotation_uniform_noise(int index, float value);
  void add_global_rotation_uniform_noise(float value);
  const ::google::protobuf::RepeatedField< float >&
      global_rotation_uniform_noise() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_global_rotation_uniform_noise();

  // repeated float global_scaling_uniform_noise = 14;
  int global_scaling_uniform_noise_size() const;
  void clear_global_scaling_uniform_noise();
  static const int kGlobalScalingUniformNoiseFieldNumber = 14;
  float global_scaling_uniform_noise(int index) const;
  void set_global_scaling_uniform_noise(int index, float value);
  void add_global_scaling_uniform_noise(float value);
  const ::google::protobuf::RepeatedField< float >&
      global_scaling_uniform_noise() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_global_scaling_uniform_noise();

  // repeated float global_random_rotation_range_per_object = 23;
  int global_random_rotation_range_per_object_size() const;
  void clear_global_random_rotation_range_per_object();
  static const int kGlobalRandomRotationRangePerObjectFieldNumber = 23;
  float global_random_rotation_range_per_object(int index) const;
  void set_global_random_rotation_range_per_object(int index, float value);
  void add_global_random_rotation_range_per_object(float value);
  const ::google::protobuf::RepeatedField< float >&
      global_random_rotation_range_per_object() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_global_random_rotation_range_per_object();

  // repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 24;
  int database_prep_steps_size() const;
  void clear_database_prep_steps();
  static const int kDatabasePrepStepsFieldNumber = 24;
  const ::second::protos::DatabasePreprocessingStep& database_prep_steps(int index) const;
  ::second::protos::DatabasePreprocessingStep* mutable_database_prep_steps(int index);
  ::second::protos::DatabasePreprocessingStep* add_database_prep_steps();
  ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >*
      mutable_database_prep_steps();
  const ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >&
      database_prep_steps() const;

  // string record_file_path = 1;
  void clear_record_file_path();
  static const int kRecordFilePathFieldNumber = 1;
  const ::std::string& record_file_path() const;
  void set_record_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_record_file_path(::std::string&& value);
  #endif
  void set_record_file_path(const char* value);
  void set_record_file_path(const char* value, size_t size);
  ::std::string* mutable_record_file_path();
  ::std::string* release_record_file_path();
  void set_allocated_record_file_path(::std::string* record_file_path);

  // string kitti_info_path = 8;
  void clear_kitti_info_path();
  static const int kKittiInfoPathFieldNumber = 8;
  const ::std::string& kitti_info_path() const;
  void set_kitti_info_path(const ::std::string& value);
  #if LANG_CXX11
  void set_kitti_info_path(::std::string&& value);
  #endif
  void set_kitti_info_path(const char* value);
  void set_kitti_info_path(const char* value, size_t size);
  ::std::string* mutable_kitti_info_path();
  ::std::string* release_kitti_info_path();
  void set_allocated_kitti_info_path(::std::string* kitti_info_path);

  // string kitti_root_path = 9;
  void clear_kitti_root_path();
  static const int kKittiRootPathFieldNumber = 9;
  const ::std::string& kitti_root_path() const;
  void set_kitti_root_path(const ::std::string& value);
  #if LANG_CXX11
  void set_kitti_root_path(::std::string&& value);
  #endif
  void set_kitti_root_path(const char* value);
  void set_kitti_root_path(const char* value, size_t size);
  ::std::string* mutable_kitti_root_path();
  ::std::string* release_kitti_root_path();
  void set_allocated_kitti_root_path(::std::string* kitti_root_path);

  // .second.protos.TargetAssigner target_assigner = 7;
  bool has_target_assigner() const;
  void clear_target_assigner();
  static const int kTargetAssignerFieldNumber = 7;
  const ::second::protos::TargetAssigner& target_assigner() const;
  ::second::protos::TargetAssigner* mutable_target_assigner();
  ::second::protos::TargetAssigner* release_target_assigner();
  void set_allocated_target_assigner(::second::protos::TargetAssigner* target_assigner);

  // .second.protos.Sampler database_sampler = 25;
  bool has_database_sampler() const;
  void clear_database_sampler();
  static const int kDatabaseSamplerFieldNumber = 25;
  const ::second::protos::Sampler& database_sampler() const;
  ::second::protos::Sampler* mutable_database_sampler();
  ::second::protos::Sampler* release_database_sampler();
  void set_allocated_database_sampler(::second::protos::Sampler* database_sampler);

  // .second.protos.Sampler unlabeled_database_sampler = 27;
  bool has_unlabeled_database_sampler() const;
  void clear_unlabeled_database_sampler();
  static const int kUnlabeledDatabaseSamplerFieldNumber = 27;
  const ::second::protos::Sampler& unlabeled_database_sampler() const;
  ::second::protos::Sampler* mutable_unlabeled_database_sampler();
  ::second::protos::Sampler* release_unlabeled_database_sampler();
  void set_allocated_unlabeled_database_sampler(::second::protos::Sampler* unlabeled_database_sampler);

  // uint32 batch_size = 3;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 3;
  ::google::protobuf::uint32 batch_size() const;
  void set_batch_size(::google::protobuf::uint32 value);

  // uint32 max_num_epochs = 4;
  void clear_max_num_epochs();
  static const int kMaxNumEpochsFieldNumber = 4;
  ::google::protobuf::uint32 max_num_epochs() const;
  void set_max_num_epochs(::google::protobuf::uint32 value);

  // uint32 prefetch_size = 5;
  void clear_prefetch_size();
  static const int kPrefetchSizeFieldNumber = 5;
  ::google::protobuf::uint32 prefetch_size() const;
  void set_prefetch_size(::google::protobuf::uint32 value);

  // uint32 max_number_of_voxels = 6;
  void clear_max_number_of_voxels();
  static const int kMaxNumberOfVoxelsFieldNumber = 6;
  ::google::protobuf::uint32 max_number_of_voxels() const;
  void set_max_number_of_voxels(::google::protobuf::uint32 value);

  // uint32 num_workers = 16;
  void clear_num_workers();
  static const int kNumWorkersFieldNumber = 16;
  ::google::protobuf::uint32 num_workers() const;
  void set_num_workers(::google::protobuf::uint32 value);

  // bool shuffle_points = 10;
  void clear_shuffle_points();
  static const int kShufflePointsFieldNumber = 10;
  bool shuffle_points() const;
  void set_shuffle_points(bool value);

  // bool remove_unknown_examples = 15;
  void clear_remove_unknown_examples();
  static const int kRemoveUnknownExamplesFieldNumber = 15;
  bool remove_unknown_examples() const;
  void set_remove_unknown_examples(bool value);

  // bool remove_points_after_sample = 18;
  void clear_remove_points_after_sample();
  static const int kRemovePointsAfterSampleFieldNumber = 18;
  bool remove_points_after_sample() const;
  void set_remove_points_after_sample(bool value);

  // bool remove_environment = 21;
  void clear_remove_environment();
  static const int kRemoveEnvironmentFieldNumber = 21;
  bool remove_environment() const;
  void set_remove_environment(bool value);

  // float anchor_area_threshold = 17;
  void clear_anchor_area_threshold();
  static const int kAnchorAreaThresholdFieldNumber = 17;
  float anchor_area_threshold() const;
  void set_anchor_area_threshold(float value);

  // float groundtruth_points_drop_percentage = 19;
  void clear_groundtruth_points_drop_percentage();
  static const int kGroundtruthPointsDropPercentageFieldNumber = 19;
  float groundtruth_points_drop_percentage() const;
  void set_groundtruth_points_drop_percentage(float value);

  // uint32 groundtruth_drop_max_keep_points = 20;
  void clear_groundtruth_drop_max_keep_points();
  static const int kGroundtruthDropMaxKeepPointsFieldNumber = 20;
  ::google::protobuf::uint32 groundtruth_drop_max_keep_points() const;
  void set_groundtruth_drop_max_keep_points(::google::protobuf::uint32 value);

  // bool unlabeled_training = 22;
  void clear_unlabeled_training();
  static const int kUnlabeledTrainingFieldNumber = 22;
  bool unlabeled_training() const;
  void set_unlabeled_training(bool value);

  // bool use_group_id = 26;
  void clear_use_group_id();
  static const int kUseGroupIdFieldNumber = 26;
  bool use_group_id() const;
  void set_use_group_id(bool value);

  // @@protoc_insertion_point(class_scope:second.protos.InputReader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> class_names_;
  ::google::protobuf::RepeatedField< float > groundtruth_localization_noise_std_;
  mutable int _groundtruth_localization_noise_std_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > groundtruth_rotation_uniform_noise_;
  mutable int _groundtruth_rotation_uniform_noise_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > global_rotation_uniform_noise_;
  mutable int _global_rotation_uniform_noise_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > global_scaling_uniform_noise_;
  mutable int _global_scaling_uniform_noise_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > global_random_rotation_range_per_object_;
  mutable int _global_random_rotation_range_per_object_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep > database_prep_steps_;
  ::google::protobuf::internal::ArenaStringPtr record_file_path_;
  ::google::protobuf::internal::ArenaStringPtr kitti_info_path_;
  ::google::protobuf::internal::ArenaStringPtr kitti_root_path_;
  ::second::protos::TargetAssigner* target_assigner_;
  ::second::protos::Sampler* database_sampler_;
  ::second::protos::Sampler* unlabeled_database_sampler_;
  ::google::protobuf::uint32 batch_size_;
  ::google::protobuf::uint32 max_num_epochs_;
  ::google::protobuf::uint32 prefetch_size_;
  ::google::protobuf::uint32 max_number_of_voxels_;
  ::google::protobuf::uint32 num_workers_;
  bool shuffle_points_;
  bool remove_unknown_examples_;
  bool remove_points_after_sample_;
  bool remove_environment_;
  float anchor_area_threshold_;
  float groundtruth_points_drop_percentage_;
  ::google::protobuf::uint32 groundtruth_drop_max_keep_points_;
  bool unlabeled_training_;
  bool use_group_id_;
  mutable int _cached_size_;
  friend struct protobuf_second_2fprotos_2finput_5freader_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputReader

// string record_file_path = 1;
inline void InputReader::clear_record_file_path() {
  record_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputReader::record_file_path() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.record_file_path)
  return record_file_path_.GetNoArena();
}
inline void InputReader::set_record_file_path(const ::std::string& value) {
  
  record_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.record_file_path)
}
#if LANG_CXX11
inline void InputReader::set_record_file_path(::std::string&& value) {
  
  record_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.InputReader.record_file_path)
}
#endif
inline void InputReader::set_record_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.InputReader.record_file_path)
}
inline void InputReader::set_record_file_path(const char* value, size_t size) {
  
  record_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.InputReader.record_file_path)
}
inline ::std::string* InputReader::mutable_record_file_path() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.record_file_path)
  return record_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputReader::release_record_file_path() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.record_file_path)
  
  return record_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputReader::set_allocated_record_file_path(::std::string* record_file_path) {
  if (record_file_path != NULL) {
    
  } else {
    
  }
  record_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_file_path);
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.record_file_path)
}

// repeated string class_names = 2;
inline int InputReader::class_names_size() const {
  return class_names_.size();
}
inline void InputReader::clear_class_names() {
  class_names_.Clear();
}
inline const ::std::string& InputReader::class_names(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.class_names)
  return class_names_.Get(index);
}
inline ::std::string* InputReader::mutable_class_names(int index) {
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.class_names)
  return class_names_.Mutable(index);
}
inline void InputReader::set_class_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:second.protos.InputReader.class_names)
  class_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InputReader::set_class_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:second.protos.InputReader.class_names)
  class_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InputReader::set_class_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:second.protos.InputReader.class_names)
}
inline void InputReader::set_class_names(int index, const char* value, size_t size) {
  class_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:second.protos.InputReader.class_names)
}
inline ::std::string* InputReader::add_class_names() {
  // @@protoc_insertion_point(field_add_mutable:second.protos.InputReader.class_names)
  return class_names_.Add();
}
inline void InputReader::add_class_names(const ::std::string& value) {
  class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.class_names)
}
#if LANG_CXX11
inline void InputReader::add_class_names(::std::string&& value) {
  class_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:second.protos.InputReader.class_names)
}
#endif
inline void InputReader::add_class_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:second.protos.InputReader.class_names)
}
inline void InputReader::add_class_names(const char* value, size_t size) {
  class_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:second.protos.InputReader.class_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InputReader::class_names() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.class_names)
  return class_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InputReader::mutable_class_names() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.class_names)
  return &class_names_;
}

// uint32 batch_size = 3;
inline void InputReader::clear_batch_size() {
  batch_size_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::batch_size() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.batch_size)
  return batch_size_;
}
inline void InputReader::set_batch_size(::google::protobuf::uint32 value) {
  
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.batch_size)
}

// uint32 max_num_epochs = 4;
inline void InputReader::clear_max_num_epochs() {
  max_num_epochs_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::max_num_epochs() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.max_num_epochs)
  return max_num_epochs_;
}
inline void InputReader::set_max_num_epochs(::google::protobuf::uint32 value) {
  
  max_num_epochs_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.max_num_epochs)
}

// uint32 prefetch_size = 5;
inline void InputReader::clear_prefetch_size() {
  prefetch_size_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::prefetch_size() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.prefetch_size)
  return prefetch_size_;
}
inline void InputReader::set_prefetch_size(::google::protobuf::uint32 value) {
  
  prefetch_size_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.prefetch_size)
}

// uint32 max_number_of_voxels = 6;
inline void InputReader::clear_max_number_of_voxels() {
  max_number_of_voxels_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::max_number_of_voxels() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.max_number_of_voxels)
  return max_number_of_voxels_;
}
inline void InputReader::set_max_number_of_voxels(::google::protobuf::uint32 value) {
  
  max_number_of_voxels_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.max_number_of_voxels)
}

// .second.protos.TargetAssigner target_assigner = 7;
inline bool InputReader::has_target_assigner() const {
  return this != internal_default_instance() && target_assigner_ != NULL;
}
inline void InputReader::clear_target_assigner() {
  if (GetArenaNoVirtual() == NULL && target_assigner_ != NULL) delete target_assigner_;
  target_assigner_ = NULL;
}
inline const ::second::protos::TargetAssigner& InputReader::target_assigner() const {
  const ::second::protos::TargetAssigner* p = target_assigner_;
  // @@protoc_insertion_point(field_get:second.protos.InputReader.target_assigner)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::TargetAssigner*>(
      &::second::protos::_TargetAssigner_default_instance_);
}
inline ::second::protos::TargetAssigner* InputReader::mutable_target_assigner() {
  
  if (target_assigner_ == NULL) {
    target_assigner_ = new ::second::protos::TargetAssigner;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.target_assigner)
  return target_assigner_;
}
inline ::second::protos::TargetAssigner* InputReader::release_target_assigner() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.target_assigner)
  
  ::second::protos::TargetAssigner* temp = target_assigner_;
  target_assigner_ = NULL;
  return temp;
}
inline void InputReader::set_allocated_target_assigner(::second::protos::TargetAssigner* target_assigner) {
  delete target_assigner_;
  target_assigner_ = target_assigner;
  if (target_assigner) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.target_assigner)
}

// string kitti_info_path = 8;
inline void InputReader::clear_kitti_info_path() {
  kitti_info_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputReader::kitti_info_path() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.kitti_info_path)
  return kitti_info_path_.GetNoArena();
}
inline void InputReader::set_kitti_info_path(const ::std::string& value) {
  
  kitti_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.kitti_info_path)
}
#if LANG_CXX11
inline void InputReader::set_kitti_info_path(::std::string&& value) {
  
  kitti_info_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.InputReader.kitti_info_path)
}
#endif
inline void InputReader::set_kitti_info_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kitti_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.InputReader.kitti_info_path)
}
inline void InputReader::set_kitti_info_path(const char* value, size_t size) {
  
  kitti_info_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.InputReader.kitti_info_path)
}
inline ::std::string* InputReader::mutable_kitti_info_path() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.kitti_info_path)
  return kitti_info_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputReader::release_kitti_info_path() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.kitti_info_path)
  
  return kitti_info_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputReader::set_allocated_kitti_info_path(::std::string* kitti_info_path) {
  if (kitti_info_path != NULL) {
    
  } else {
    
  }
  kitti_info_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kitti_info_path);
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.kitti_info_path)
}

// string kitti_root_path = 9;
inline void InputReader::clear_kitti_root_path() {
  kitti_root_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InputReader::kitti_root_path() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.kitti_root_path)
  return kitti_root_path_.GetNoArena();
}
inline void InputReader::set_kitti_root_path(const ::std::string& value) {
  
  kitti_root_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.kitti_root_path)
}
#if LANG_CXX11
inline void InputReader::set_kitti_root_path(::std::string&& value) {
  
  kitti_root_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:second.protos.InputReader.kitti_root_path)
}
#endif
inline void InputReader::set_kitti_root_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kitti_root_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:second.protos.InputReader.kitti_root_path)
}
inline void InputReader::set_kitti_root_path(const char* value, size_t size) {
  
  kitti_root_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:second.protos.InputReader.kitti_root_path)
}
inline ::std::string* InputReader::mutable_kitti_root_path() {
  
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.kitti_root_path)
  return kitti_root_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputReader::release_kitti_root_path() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.kitti_root_path)
  
  return kitti_root_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputReader::set_allocated_kitti_root_path(::std::string* kitti_root_path) {
  if (kitti_root_path != NULL) {
    
  } else {
    
  }
  kitti_root_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kitti_root_path);
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.kitti_root_path)
}

// bool shuffle_points = 10;
inline void InputReader::clear_shuffle_points() {
  shuffle_points_ = false;
}
inline bool InputReader::shuffle_points() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.shuffle_points)
  return shuffle_points_;
}
inline void InputReader::set_shuffle_points(bool value) {
  
  shuffle_points_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.shuffle_points)
}

// repeated float groundtruth_localization_noise_std = 11;
inline int InputReader::groundtruth_localization_noise_std_size() const {
  return groundtruth_localization_noise_std_.size();
}
inline void InputReader::clear_groundtruth_localization_noise_std() {
  groundtruth_localization_noise_std_.Clear();
}
inline float InputReader::groundtruth_localization_noise_std(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.groundtruth_localization_noise_std)
  return groundtruth_localization_noise_std_.Get(index);
}
inline void InputReader::set_groundtruth_localization_noise_std(int index, float value) {
  groundtruth_localization_noise_std_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.groundtruth_localization_noise_std)
}
inline void InputReader::add_groundtruth_localization_noise_std(float value) {
  groundtruth_localization_noise_std_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.groundtruth_localization_noise_std)
}
inline const ::google::protobuf::RepeatedField< float >&
InputReader::groundtruth_localization_noise_std() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.groundtruth_localization_noise_std)
  return groundtruth_localization_noise_std_;
}
inline ::google::protobuf::RepeatedField< float >*
InputReader::mutable_groundtruth_localization_noise_std() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.groundtruth_localization_noise_std)
  return &groundtruth_localization_noise_std_;
}

// repeated float groundtruth_rotation_uniform_noise = 12;
inline int InputReader::groundtruth_rotation_uniform_noise_size() const {
  return groundtruth_rotation_uniform_noise_.size();
}
inline void InputReader::clear_groundtruth_rotation_uniform_noise() {
  groundtruth_rotation_uniform_noise_.Clear();
}
inline float InputReader::groundtruth_rotation_uniform_noise(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.groundtruth_rotation_uniform_noise)
  return groundtruth_rotation_uniform_noise_.Get(index);
}
inline void InputReader::set_groundtruth_rotation_uniform_noise(int index, float value) {
  groundtruth_rotation_uniform_noise_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.groundtruth_rotation_uniform_noise)
}
inline void InputReader::add_groundtruth_rotation_uniform_noise(float value) {
  groundtruth_rotation_uniform_noise_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.groundtruth_rotation_uniform_noise)
}
inline const ::google::protobuf::RepeatedField< float >&
InputReader::groundtruth_rotation_uniform_noise() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.groundtruth_rotation_uniform_noise)
  return groundtruth_rotation_uniform_noise_;
}
inline ::google::protobuf::RepeatedField< float >*
InputReader::mutable_groundtruth_rotation_uniform_noise() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.groundtruth_rotation_uniform_noise)
  return &groundtruth_rotation_uniform_noise_;
}

// repeated float global_rotation_uniform_noise = 13;
inline int InputReader::global_rotation_uniform_noise_size() const {
  return global_rotation_uniform_noise_.size();
}
inline void InputReader::clear_global_rotation_uniform_noise() {
  global_rotation_uniform_noise_.Clear();
}
inline float InputReader::global_rotation_uniform_noise(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.global_rotation_uniform_noise)
  return global_rotation_uniform_noise_.Get(index);
}
inline void InputReader::set_global_rotation_uniform_noise(int index, float value) {
  global_rotation_uniform_noise_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.global_rotation_uniform_noise)
}
inline void InputReader::add_global_rotation_uniform_noise(float value) {
  global_rotation_uniform_noise_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.global_rotation_uniform_noise)
}
inline const ::google::protobuf::RepeatedField< float >&
InputReader::global_rotation_uniform_noise() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.global_rotation_uniform_noise)
  return global_rotation_uniform_noise_;
}
inline ::google::protobuf::RepeatedField< float >*
InputReader::mutable_global_rotation_uniform_noise() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.global_rotation_uniform_noise)
  return &global_rotation_uniform_noise_;
}

// repeated float global_scaling_uniform_noise = 14;
inline int InputReader::global_scaling_uniform_noise_size() const {
  return global_scaling_uniform_noise_.size();
}
inline void InputReader::clear_global_scaling_uniform_noise() {
  global_scaling_uniform_noise_.Clear();
}
inline float InputReader::global_scaling_uniform_noise(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.global_scaling_uniform_noise)
  return global_scaling_uniform_noise_.Get(index);
}
inline void InputReader::set_global_scaling_uniform_noise(int index, float value) {
  global_scaling_uniform_noise_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.global_scaling_uniform_noise)
}
inline void InputReader::add_global_scaling_uniform_noise(float value) {
  global_scaling_uniform_noise_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.global_scaling_uniform_noise)
}
inline const ::google::protobuf::RepeatedField< float >&
InputReader::global_scaling_uniform_noise() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.global_scaling_uniform_noise)
  return global_scaling_uniform_noise_;
}
inline ::google::protobuf::RepeatedField< float >*
InputReader::mutable_global_scaling_uniform_noise() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.global_scaling_uniform_noise)
  return &global_scaling_uniform_noise_;
}

// bool remove_unknown_examples = 15;
inline void InputReader::clear_remove_unknown_examples() {
  remove_unknown_examples_ = false;
}
inline bool InputReader::remove_unknown_examples() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.remove_unknown_examples)
  return remove_unknown_examples_;
}
inline void InputReader::set_remove_unknown_examples(bool value) {
  
  remove_unknown_examples_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.remove_unknown_examples)
}

// uint32 num_workers = 16;
inline void InputReader::clear_num_workers() {
  num_workers_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::num_workers() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.num_workers)
  return num_workers_;
}
inline void InputReader::set_num_workers(::google::protobuf::uint32 value) {
  
  num_workers_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.num_workers)
}

// float anchor_area_threshold = 17;
inline void InputReader::clear_anchor_area_threshold() {
  anchor_area_threshold_ = 0;
}
inline float InputReader::anchor_area_threshold() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.anchor_area_threshold)
  return anchor_area_threshold_;
}
inline void InputReader::set_anchor_area_threshold(float value) {
  
  anchor_area_threshold_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.anchor_area_threshold)
}

// bool remove_points_after_sample = 18;
inline void InputReader::clear_remove_points_after_sample() {
  remove_points_after_sample_ = false;
}
inline bool InputReader::remove_points_after_sample() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.remove_points_after_sample)
  return remove_points_after_sample_;
}
inline void InputReader::set_remove_points_after_sample(bool value) {
  
  remove_points_after_sample_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.remove_points_after_sample)
}

// float groundtruth_points_drop_percentage = 19;
inline void InputReader::clear_groundtruth_points_drop_percentage() {
  groundtruth_points_drop_percentage_ = 0;
}
inline float InputReader::groundtruth_points_drop_percentage() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.groundtruth_points_drop_percentage)
  return groundtruth_points_drop_percentage_;
}
inline void InputReader::set_groundtruth_points_drop_percentage(float value) {
  
  groundtruth_points_drop_percentage_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.groundtruth_points_drop_percentage)
}

// uint32 groundtruth_drop_max_keep_points = 20;
inline void InputReader::clear_groundtruth_drop_max_keep_points() {
  groundtruth_drop_max_keep_points_ = 0u;
}
inline ::google::protobuf::uint32 InputReader::groundtruth_drop_max_keep_points() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.groundtruth_drop_max_keep_points)
  return groundtruth_drop_max_keep_points_;
}
inline void InputReader::set_groundtruth_drop_max_keep_points(::google::protobuf::uint32 value) {
  
  groundtruth_drop_max_keep_points_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.groundtruth_drop_max_keep_points)
}

// bool remove_environment = 21;
inline void InputReader::clear_remove_environment() {
  remove_environment_ = false;
}
inline bool InputReader::remove_environment() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.remove_environment)
  return remove_environment_;
}
inline void InputReader::set_remove_environment(bool value) {
  
  remove_environment_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.remove_environment)
}

// bool unlabeled_training = 22;
inline void InputReader::clear_unlabeled_training() {
  unlabeled_training_ = false;
}
inline bool InputReader::unlabeled_training() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.unlabeled_training)
  return unlabeled_training_;
}
inline void InputReader::set_unlabeled_training(bool value) {
  
  unlabeled_training_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.unlabeled_training)
}

// repeated float global_random_rotation_range_per_object = 23;
inline int InputReader::global_random_rotation_range_per_object_size() const {
  return global_random_rotation_range_per_object_.size();
}
inline void InputReader::clear_global_random_rotation_range_per_object() {
  global_random_rotation_range_per_object_.Clear();
}
inline float InputReader::global_random_rotation_range_per_object(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.global_random_rotation_range_per_object)
  return global_random_rotation_range_per_object_.Get(index);
}
inline void InputReader::set_global_random_rotation_range_per_object(int index, float value) {
  global_random_rotation_range_per_object_.Set(index, value);
  // @@protoc_insertion_point(field_set:second.protos.InputReader.global_random_rotation_range_per_object)
}
inline void InputReader::add_global_random_rotation_range_per_object(float value) {
  global_random_rotation_range_per_object_.Add(value);
  // @@protoc_insertion_point(field_add:second.protos.InputReader.global_random_rotation_range_per_object)
}
inline const ::google::protobuf::RepeatedField< float >&
InputReader::global_random_rotation_range_per_object() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.global_random_rotation_range_per_object)
  return global_random_rotation_range_per_object_;
}
inline ::google::protobuf::RepeatedField< float >*
InputReader::mutable_global_random_rotation_range_per_object() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.global_random_rotation_range_per_object)
  return &global_random_rotation_range_per_object_;
}

// repeated .second.protos.DatabasePreprocessingStep database_prep_steps = 24;
inline int InputReader::database_prep_steps_size() const {
  return database_prep_steps_.size();
}
inline void InputReader::clear_database_prep_steps() {
  database_prep_steps_.Clear();
}
inline const ::second::protos::DatabasePreprocessingStep& InputReader::database_prep_steps(int index) const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.database_prep_steps)
  return database_prep_steps_.Get(index);
}
inline ::second::protos::DatabasePreprocessingStep* InputReader::mutable_database_prep_steps(int index) {
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.database_prep_steps)
  return database_prep_steps_.Mutable(index);
}
inline ::second::protos::DatabasePreprocessingStep* InputReader::add_database_prep_steps() {
  // @@protoc_insertion_point(field_add:second.protos.InputReader.database_prep_steps)
  return database_prep_steps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >*
InputReader::mutable_database_prep_steps() {
  // @@protoc_insertion_point(field_mutable_list:second.protos.InputReader.database_prep_steps)
  return &database_prep_steps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::second::protos::DatabasePreprocessingStep >&
InputReader::database_prep_steps() const {
  // @@protoc_insertion_point(field_list:second.protos.InputReader.database_prep_steps)
  return database_prep_steps_;
}

// .second.protos.Sampler database_sampler = 25;
inline bool InputReader::has_database_sampler() const {
  return this != internal_default_instance() && database_sampler_ != NULL;
}
inline void InputReader::clear_database_sampler() {
  if (GetArenaNoVirtual() == NULL && database_sampler_ != NULL) delete database_sampler_;
  database_sampler_ = NULL;
}
inline const ::second::protos::Sampler& InputReader::database_sampler() const {
  const ::second::protos::Sampler* p = database_sampler_;
  // @@protoc_insertion_point(field_get:second.protos.InputReader.database_sampler)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::Sampler*>(
      &::second::protos::_Sampler_default_instance_);
}
inline ::second::protos::Sampler* InputReader::mutable_database_sampler() {
  
  if (database_sampler_ == NULL) {
    database_sampler_ = new ::second::protos::Sampler;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.database_sampler)
  return database_sampler_;
}
inline ::second::protos::Sampler* InputReader::release_database_sampler() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.database_sampler)
  
  ::second::protos::Sampler* temp = database_sampler_;
  database_sampler_ = NULL;
  return temp;
}
inline void InputReader::set_allocated_database_sampler(::second::protos::Sampler* database_sampler) {
  delete database_sampler_;
  database_sampler_ = database_sampler;
  if (database_sampler) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.database_sampler)
}

// bool use_group_id = 26;
inline void InputReader::clear_use_group_id() {
  use_group_id_ = false;
}
inline bool InputReader::use_group_id() const {
  // @@protoc_insertion_point(field_get:second.protos.InputReader.use_group_id)
  return use_group_id_;
}
inline void InputReader::set_use_group_id(bool value) {
  
  use_group_id_ = value;
  // @@protoc_insertion_point(field_set:second.protos.InputReader.use_group_id)
}

// .second.protos.Sampler unlabeled_database_sampler = 27;
inline bool InputReader::has_unlabeled_database_sampler() const {
  return this != internal_default_instance() && unlabeled_database_sampler_ != NULL;
}
inline void InputReader::clear_unlabeled_database_sampler() {
  if (GetArenaNoVirtual() == NULL && unlabeled_database_sampler_ != NULL) delete unlabeled_database_sampler_;
  unlabeled_database_sampler_ = NULL;
}
inline const ::second::protos::Sampler& InputReader::unlabeled_database_sampler() const {
  const ::second::protos::Sampler* p = unlabeled_database_sampler_;
  // @@protoc_insertion_point(field_get:second.protos.InputReader.unlabeled_database_sampler)
  return p != NULL ? *p : *reinterpret_cast<const ::second::protos::Sampler*>(
      &::second::protos::_Sampler_default_instance_);
}
inline ::second::protos::Sampler* InputReader::mutable_unlabeled_database_sampler() {
  
  if (unlabeled_database_sampler_ == NULL) {
    unlabeled_database_sampler_ = new ::second::protos::Sampler;
  }
  // @@protoc_insertion_point(field_mutable:second.protos.InputReader.unlabeled_database_sampler)
  return unlabeled_database_sampler_;
}
inline ::second::protos::Sampler* InputReader::release_unlabeled_database_sampler() {
  // @@protoc_insertion_point(field_release:second.protos.InputReader.unlabeled_database_sampler)
  
  ::second::protos::Sampler* temp = unlabeled_database_sampler_;
  unlabeled_database_sampler_ = NULL;
  return temp;
}
inline void InputReader::set_allocated_unlabeled_database_sampler(::second::protos::Sampler* unlabeled_database_sampler) {
  delete unlabeled_database_sampler_;
  unlabeled_database_sampler_ = unlabeled_database_sampler;
  if (unlabeled_database_sampler) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:second.protos.InputReader.unlabeled_database_sampler)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protos
}  // namespace second

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_second_2fprotos_2finput_5freader_2eproto__INCLUDED
